---
title: "Visualización de Datos con ggplot"
El paquete ggplot2 es fundamental en R para la visualización de datos, ofreciendo herramientas poderosas para crear gráficos estéticamente atractivos y claros. Puede ser cargado tanto de manera independiente como como parte del conjunto de paquetes tidyverse, que facilita el flujo de trabajo en análisis de datos. Para iniciar la creación de visualizaciones con ggplot2, se utiliza la función ggplot, que permite definir la estructura básica del gráfico y especificar los mapeos estéticos entre los datos y los elementos visuales del gráfico.
![](img/ggplot2.png)
```{r message=FALSE, warning=FALSE}
library(datapasta)   # Para facilitar la importación de datos desde el portapapeles
library(r4pde)       # Paquete específico para realizar ajustes de modelos
library(r4pde)       # Paquete específico para realizar ajustes de modelos
library(janitor)     # Para operaciones de limpieza y manipulación de datos
library(datapasta)   # Para facilitar la importación de datos desde el portapapeles
library(r4pde)       # Paquete específico para realizar ajustes de modelos
library(janitor)     # Para operaciones de limpieza y manipulación de datos
library(gsheet)      # Para acceder y manipular hojas de cálculo de Google Sheets
library(googlesheets4)  # Para interactuar con Google Sheets directamente desde R
library(ggplot2)     # Para visualizaciones gráficas avanzadas
library(tidyverse)
# Cargar los datos desde el archivo CSV
mg <- read_csv("dados-diversos.csv")
htmltools::img(src = knitr::image_uri("/Users/user/Desktop/Desktop_GMarin/PAT104022/Logos/logo.png"),
alt = 'logo',
style = 'position:absolute; top:0; right:0; padding:10px; width: 255px; height: 110px')
library(tidyverse)
library(gsheet)
library(cowplot)
library(patchwork)
library(ggthemes)
theme_set(theme_half_open())
library(viridis)
library(epifitter)
library(ggplot2)
library("writexl")
library(nlme)
library(lme4)
library(DHARMa)
library(performance)
library(report)
library(emmeans)
library(multcompView)
library(multcomp)
library(corrplot)
library(see)
library(lubridate)
library(agridat)
library(cowplot)
library(agricolae)
library(sf)
library(lme4)
library(broom)
library(lattice)
library(car)
library(scales)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(easyanova)
library(tidyr)
library(PerformanceAnalytics)
library(magrittr)
library(car)
library(ggpubr)
library(rstatix)
library(reshape)
library(kableExtra)
library(formattable)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggh4x)
library(gridExtra)
library(stringr)
theme_set(theme_minimal())
library(epiR)
library(ggridges)
library(RColorBrewer)
library(DT)
CurrentDir <- ("/Users/user/Desktop/Desktop_GMarin/PAT104022")
if (!is.null(CurrentDir)) setwd(CurrentDir)
getwd()
dat<-read.csv2("/Users/user/Desktop/Desktop_GMarin/PAT104022/DB_PAT104022.csv")
dat %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
Buttons = c('excel', "csv")))%>%
formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)
dat_ave<- dat |>
group_by(Evaluacion,Time_,Time_E,Eva_E,Eva_, Parcela,Surco,Arbol_1,Arbol)|>
summarize(
Htotal= mean(Htotal,na.rm=TRUE),
Incidencia = mean(Inc_promedio,na.rm=TRUE),
Severidad = mean(Severidad,na.rm=TRUE),
Defoliacion = mean(Def_calculada,na.rm=TRUE))
dat_ave %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
Buttons = c('excel', "csv")))%>%
formatRound(c('Incidencia','Severidad','Defoliacion'), 2)
Plot1<-dat_ave %>%
ggplot(aes(Arbol_1,Surco,label = Arbol))+
geom_point(size = 5,shape=10,stroke = 1)+
geom_point(size = 5,alpha=.9, aes(colour= Incidencia))+
scale_colour_distiller(palette =  "RdYlBu",direction = -1,limits = c(0,100)) +
scale_y_discrete(limits=c("J","I","H","G","F","E","D","C","B","A"))+
scale_x_discrete(limits=c("1","2","3","4","5","6","7","8","9","10","11","12"),guide = guide_axis(position = "top")) +
facet_wrap(Parcela~Time_,ncol=9) +
theme_clean() +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank(),  #remove y axis ticks
legend.title = element_text( face="bold",size = 20),
plot.title = element_text(size = 30,face="bold"),
plot.subtitle = element_text(size = 20),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.text = element_text(size = 15,face = c(rep("italic", 2), rep("plain", 2))),legend.position = "none") +
geom_text(size = 3,alpha=.9)+
labs(title = "Evaluación de Incidencia",
subtitle ="",caption ="")
Plot1
Plot2<-dat_ave  %>%
ggplot(aes(Arbol_1,Surco,label = Arbol))+
geom_point(size = 5,shape=10,stroke = 1)+
geom_point(size = 5,alpha=.9, aes(colour= Severidad))+
scale_colour_distiller(palette =  "RdYlBu",direction = -1,limits = c(0,50)) +
scale_y_discrete(limits=c("J","I","H","G","F","E","D","C","B","A"))+
scale_x_discrete(limits=c("1","2","3","4","5","6","7","8","9","10","11","12"),guide = guide_axis(position = "top")) +
facet_wrap(Parcela~Time_,ncol=9) +
theme_clean() +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank(),  #remove y axis ticks
legend.title = element_text( face="bold",size = 20),
plot.title = element_text(size = 30,face="bold"),
plot.subtitle = element_text(size = 20),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.text = element_text(size = 15,face = c(rep("italic", 2), rep("plain", 2))),legend.position = "none") +
geom_text(size = 3,alpha=.9)+
labs(title = "Evaluación de Severidad",
subtitle ="",caption ="")
Plot2
Plot3<-dat_ave  %>%
ggplot(aes(Arbol_1,Surco,label = Arbol))+
geom_point(size = 5,shape=10,stroke = 1)+
geom_point(size = 5,alpha=.9, aes(colour= Defoliacion))+
scale_colour_distiller(palette =  "RdYlBu",direction = -1,limits = c(0,100)) +
scale_y_discrete(limits=c("J","I","H","G","F","E","D","C","B","A"))+
scale_x_discrete(limits=c("1","2","3","4","5","6","7","8","9","10","11","12"),guide = guide_axis(position = "top")) +
facet_wrap(Parcela~Time_,ncol=9) +
theme_clean() +
theme(axis.text.x=element_blank(), #remove x axis labels
axis.ticks.x=element_blank(), #remove x axis ticks
axis.text.y=element_blank(),  #remove y axis labels
axis.ticks.y=element_blank(),  #remove y axis ticks
legend.title = element_text( face="bold",size = 20),
plot.title = element_text(size = 30,face="bold"),
plot.subtitle = element_text(size = 20),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.text = element_text(size = 15,face = c(rep("italic", 2), rep("plain", 2))),legend.position = "none") +
geom_text(size = 3,alpha=.9)+
labs(title = "Evaluación de Defoliación",
subtitle ="",caption ="")
Plot3
Plot1a<-dat %>%
group_by(Time_,Parcela)%>%
summarise(Incidencia=mean(Inc_promedio,na.rm=TRUE),sd=sd(Inc_promedio,na.rm=TRUE))%>%
mutate( se = sd / sqrt(length(Incidencia)))%>%
ggplot(aes(Time_,Incidencia, fill  = Parcela, group= Parcela)) +
geom_area(position=position_identity(),alpha= 0.5)+
geom_errorbar(aes(ymin=Incidencia-se, ymax=Incidencia+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+
geom_hline(yintercept=15,linetype="dashed", color = "blue",size=1) +
geom_vline(xintercept=60,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=105,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=150,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=160,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=220,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=275,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=335,linetype="dashed", color = "red",size=1) +
facet_wrap(~Parcela,ncol =3) +
theme_clean() +
theme(axis.text = element_text(size = 8),
axis.text.x = element_text( size =10,angle = 90),
axis.title = element_text(size = 10),
strip.text.x=element_text(face="bold",size =10,margin=margin(1,0,1,0)),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.title = element_text( face="bold",size = 10),
legend.text = element_text( size = 10),
plot.title = element_text(size = 20,face="bold"),
plot.subtitle = element_text(size = 15),
legend.position = "top" )  +
scale_fill_manual(values = c( "Parcela_1"="#669933", "Parcela_2"="#FFCC66","Parcela_3"="#990000"))+
scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+
ylim(-5, 100) +
labs(
fill = "Tratamiento", x = "Días de Evaluación (ddfp)",
y = "% Incidencia",
title = "A. Incidencia",subtitle ="Promedio"
)
Plot1a
Plot2a<-dat %>%
group_by(Time_,Parcela)%>%
summarise(Severidad=mean(Sev_condicional,na.rm=TRUE),sd=sd(Sev_condicional,na.rm=TRUE))%>%
mutate( se = sd / sqrt(length(Severidad)))%>%
ggplot(aes(Time_,Severidad, fill  = Parcela, group= Parcela)) +
geom_area(position=position_identity(),alpha= 0.5)+
geom_errorbar(aes(ymin=Severidad-se, ymax=Severidad+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+
geom_hline(yintercept=5,linetype="dashed", color = "blue",size=1) +
geom_vline(xintercept=60,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=105,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=150,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=160,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=220,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=275,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=335,linetype="dashed", color = "red",size=1) +
facet_wrap(~Parcela,ncol =3) +
scale_fill_manual(values = c( "Parcela_1"="#669933", "Parcela_2"="#FFCC66","Parcela_3"="#990000"))+
theme_clean() +
theme(axis.text = element_text(size = 8),
axis.text.x = element_text( size =10,angle = 90),
axis.title = element_text(size = 10),
strip.text.x=element_text(face="bold",size =10,margin=margin(1,0,1,0)),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.title = element_text( face="bold",size = 10),
legend.text = element_text( size = 10),
plot.title = element_text(size = 20,face="bold"),
plot.subtitle = element_text(size = 15),
legend.position = "none" )  +
scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+
ylim(-1, 10) +
labs(
fill = "Tratamiento", x = "Días de Evaluación (ddfp)",
y = "% Severidad",
title = "B. Severidad",subtitle ="Promedio"
)
Plot2a
Plot3a<-dat %>%
group_by(Time_,Parcela)%>%
summarise(Defoliacion= mean(Def_calculada,na.rm=TRUE),sd=sd(Def_calculada,na.rm=TRUE))%>%
mutate( se = sd / sqrt(length(Defoliacion)))%>%
ggplot(aes(Time_,Defoliacion, fill  = Parcela, group= Parcela)) +
geom_area(position=position_identity(),alpha= 0.5)+
geom_errorbar(aes(ymin=Defoliacion-se, ymax=Defoliacion+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+
geom_hline(yintercept=50,linetype="dashed", color = "blue",size=1) +
geom_vline(xintercept=60,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=105,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=150,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=160,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=220,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=275,linetype="dashed", color = "red",size=1) +
geom_vline(xintercept=335,linetype="dashed", color = "red",size=1) +
facet_wrap(~Parcela,ncol =3) +
scale_fill_manual(values = c( "Parcela_1"="#669933", "Parcela_2"="#FFCC66","Parcela_3"="#990000"))+
theme_clean() +
theme(axis.text = element_text(size = 8),
axis.text.x = element_text( size =10,angle = 90),
axis.title = element_text(size = 10),
strip.text.x=element_text(face="bold",size =10,margin=margin(1,0,1,0)),
plot.background = element_rect(colour = "white"),
legend.background = element_rect(colour = "white"),
legend.title = element_text( face="bold",size = 10),
legend.text = element_text( size = 10),
plot.title = element_text(size = 20,face="bold"),
plot.subtitle = element_text(size = 15),
legend.position = "none" )  +
scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+
ylim(0, 100) +
labs(
fill = "Tratamiento", x = "Días de Evaluación (ddfp)",
y = "% Defoliación",
title = "C. Defoliación",subtitle ="Promedio"
)
Plot3a
Plot_Lote<- (Plot1a + Plot2a + Plot3a +  plot_layout(ncol = 1))
Plot_Lote
#ggexport(Plot_Lote,filename = "Fig1_MQR104024_Dinamic-_lote_full.pdf", width = 25 , height = 15)
library(ggthemes)
dat |>
ggplot(aes(Eva_, Htotal, color = Parcela))+
geom_jitter(size=2,alpha=0.3)+
geom_hline(yintercept=30,linetype="dashed", color = "blue",size=1) +
stat_summary(fun.data = mean_se,size=.2,
color = "black")+
theme_clean()+
scale_color_manual(values = c( "#669933","#FFCC66","#990000"))+
facet_wrap(~Parcela, nrow = 3, scale="free_x")+
plot_layout(guides = "collect", axes = "collect")
dat|>
ggplot(aes(Nudos,Htotal, color = Parcela))+
geom_jitter(alpha=0.3)+
theme_clean()+
scale_color_manual(values = c( "#669933","#FFCC66","#990000"))+
facet_wrap(~Time_,ncol = 3)+
geom_smooth(method = "lm",
se = FALSE,
color = "black",
linetype = "solid",
size = 1)
dat_1<-dat%>%
group_by(Evaluacion,Time_E,Parcela,Arbol) %>%
summarize(Incidencia = mean(Inc_promedio,na.rm=TRUE))
dat_1
dat_audps <- dat_1 %>%
group_by(Parcela,Arbol) %>%
summarize(audps = AUDPS(Time_E,Incidencia,))
dat_audps
t<-4
dat1_audpc <- dat_audps %>%
mutate(audpc2 = audps / t)
dat1_audpc
dat1_audpc  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
dat1_audpc_f<-  dat1_audpc  %>%
group_by(Parcela,Arbol) %>%
summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))
dat1_audpc_f  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))%>%
formatRound(c('audpc','TPD'), 2)
dat1_audpc_f_<-  dat1_audpc  %>%
group_by(Parcela) %>%
summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))
dat1_audpc_f_  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))%>%
formatRound(c('audpc','TPD'), 2)
dat_1<-dat%>%
group_by(Evaluacion,Time_E,Parcela,Arbol) %>%
summarize(Incidencia = mean(Inc_promedio,na.rm=TRUE))
dat_1
dat_audps <- dat_1 %>%
group_by(Parcela,Arbol) %>%
summarize(audps = AUDPS(Time_E,Incidencia,))
dat_audps
t<-425
dat1_audpc <- dat_audps %>%
mutate(audpc2 = audps / t)
dat1_audpc
dat1_audpc  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))
dat1_audpc_f<-  dat1_audpc  %>%
group_by(Parcela,Arbol) %>%
summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))
dat1_audpc_f  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))%>%
formatRound(c('audpc','TPD'), 2)
dat1_audpc_f_<-  dat1_audpc  %>%
group_by(Parcela) %>%
summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))
dat1_audpc_f_  %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
buttons = c('excel', "csv")))%>%
formatRound(c('audpc','TPD'), 2)
I am a [red]{style="color:green;"} word.
library(tidyverse)
library(gsheet)
library(cowplot)
library(patchwork)
library(ggthemes)
library(viridis)
library(epifitter)
library(ggplot2)
library("writexl")
library(nlme)
library(lme4)
library(DHARMa)
library(performance)
library(report)
library(emmeans)
library(multcompView)
library(multcomp)
library(corrplot)
library(see)
library(lubridate)
library(agridat)
library(cowplot)
library(agricolae)
library(sf)
library(lme4)
library(broom)
library(lattice)
library(car)
library(scales)
library(readxl)
library(dplyr)
library(knitr)
library(kableExtra)
library(easyanova)
library(tidyr)
library(PerformanceAnalytics)
library(magrittr)
library(car)
library(ggpubr)
library(rstatix)
library(reshape)
library(kableExtra)
library(formattable)
library(sjPlot)
library(sjlabelled)
library(sjmisc)
library(ggh4x)
library(gridExtra)
library(stringr)
library(epiR)
library(ggridges)
library(RColorBrewer)
library(DT)
CurrentDir <- ("/Users/user/Desktop/Desktop_GMarin/PAT104022")
if (!is.null(CurrentDir)) setwd(CurrentDir)
getwd()
dat<-read.csv2("/Users/user/Desktop/Desktop_GMarin/PAT104022/DB_PAT104022.csv")
dat %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
Buttons = c('excel', "csv")))%>%
formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)
dat<-read.csv2("/Users/user/Desktop/Desktop_GMarin/PAT104022/DB_PAT104022.csv")
dat %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
Buttons = c('excel', "csv")))%>%
formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)
CurrentDir <- ("/Users/user/Desktop/Desktop_GMarin/PAT104022")
if (!is.null(CurrentDir)) setwd(CurrentDir)
getwd()
dat<-read.csv2("/Users/user/Desktop/Desktop_GMarin/PAT104022/DB_PAT104022.csv")
dat %>%
DT::datatable(
extensions = 'Buttons',
options = list(dom = 'Bfrtip',
Buttons = c('excel', "csv")))%>%
formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)
