[
  {
    "objectID": "Aula72.html",
    "href": "Aula72.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula72.html#transformación-de-los-datos",
    "href": "Aula72.html#transformación-de-los-datos",
    "title": "",
    "section": "Transformación de los Datos",
    "text": "Transformación de los Datos\nPodemos transformar los datos de diferentes maneras, siendo las más comunes el logaritmo y la raíz cuadrada.\n\nTransformación Logarítmica\nLa transformación logarítmica es útil cuando los datos tienen una distribución asimétrica positiva o cuando la variación aumenta exponencialmente con el aumento de los valores.\n\n\nCodigo\n# Transformar los datos usando logaritmo\nmofo2 &lt;- mofo |&gt; \n  mutate(scl2 = log(scl))  # Crear nueva columna 'scl2' con el logaritmo de 'scl'\n\nmofo2%&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                    formatRound(\"scl2\", 2)\n\n\n\n\n\n\n\n\nCodigo\n# Visualizar los datos transformados en logaritmo con un histograma\nmofo2 |&gt; \n  ggplot(aes(scl2)) +\n  geom_histogram(bins = 10)\n\n\n\n\n\n\n\n\n\n\n\nTransformación de Raíz Cuadrada\nLa transformación de raíz cuadrada es útil para reducir la asimetría en datos con una distribución asimétrica positiva.\n\n\nCodigo\n# Transformar los datos usando raíz cuadrada\nmofo2 &lt;- mofo |&gt; \n  mutate(scl2 = sqrt(scl))  # Crear nueva columna 'scl2' con la raíz cuadrada de 'scl'\n\nmofo2%&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                          formatRound(\"scl2\", 2)\n\n\n\n\n\n\n\n\nCodigo\n# Visualizar los datos transformados en raíz cuadrada con un histograma\nmofo2 |&gt; \n  ggplot(aes(scl2)) +\n  geom_histogram(bins = 10)\n\n\n\n\n\n\n\n\n\n\n\nHistograma de Productividad\n\n\nCodigo\n# Histograma de la variable 'yld' (productividad)\nmofo2 |&gt; \n  ggplot(aes(yld)) +\n  geom_histogram(bins = 10)"
  },
  {
    "objectID": "Aula72.html#usando-la-función-arrange",
    "href": "Aula72.html#usando-la-función-arrange",
    "title": "",
    "section": "Usando la Función arrange",
    "text": "Usando la Función arrange\nLa función arrange() se utiliza para ordenar filas. Ordena los datos por orden creciente o decreciente.\n\nCargando el Conjunto de Datos ‘Survey’\n\n\nCodigo\n# Leer el conjunto de datos 'survey' desde el archivo 'dados-diversos.xlsx'\nsurvey &lt;- read_excel(\"dados-diversos.xlsx\", \"survey\")\n\n\n\n\nOrdenar y Filtrar Datos\n\n\nCodigo\n# Filtrar, contar, ordenar, renombrar y clasificar datos del conjunto 'survey'\nsurvey |&gt; \n  filter(state == \"RS\") |&gt;   # Filtrar por estado \"RS\"\n  count(species, residue) |&gt; # Contar número de filas por especie y residuo\n  arrange(n) |&gt;              # Ordenar por número de observaciones\n  rename(res = residue) |&gt;   # Renombrar columna 'residue' a 'res'\n  mutate(n_class = case_when(\n    n &lt; 30 ~ \"baixa\",        # Clasificar como \"baixa\" si n &lt; 30\n    TRUE ~ \"Alta\"            # Clasificar como \"Alta\" en caso contrario\n  ))\n\n\n# A tibble: 4 × 4\n  species res         n n_class\n  &lt;chr&gt;   &lt;chr&gt;   &lt;int&gt; &lt;chr&gt;  \n1 Fspp    corn       22 baixa  \n2 Fspp    soybean    26 baixa  \n3 Fgra    corn      147 Alta   \n4 Fgra    soybean   255 Alta   \n\n\nCodigo\nsurvey %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "Sitios.html",
    "href": "Sitios.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\nInformaciones extras\nDescubre otros sitios especializados en proporcionar recursos fundamentales para fitopatólogos interesados en el análisis de datos con R. Estos recursos son imprescindibles para entender y orientar en el análisis de datos, ofreciendo acceso a conjuntos de datos estructurados y actualizados. Esto no solo facilita la exploración de técnicas analíticas avanzadas, sino que también proporciona herramientas gráficas y bibliotecas de visualización que permiten comunicar de manera efectiva los hallazgos clave de tus investigaciones. Aprovecha estos enlaces para fortalecer tus habilidades analíticas y mejorar la precisión de tus estudios en fitopatología.\n\nTrabajar y desarrollar en Quarto\nWelcome to Quarto®: Explora y comparte conocimiento de manera innovadora a través de datos, análisis y visualización.\n\n\nLibros para análisis en Fitopatología\nR for Plant Disease Epidemiology: Guía esencial para aplicar herramientas analíticas en el estudio epidemiológico de enfermedades en plantas.\n\n\nRepositorios para análisis en Fitopatología\n\nEmerson del Ponte português: Accede a conjuntos de datos y análisis avanzados para fortalecer tus investigaciones en fitopatología.\nLucas Versari português: Descubre herramientas efectivas para el análisis y la visualización de datos fitopatológicos.\nCarlos Utiamada português: Explora proyectos y recursos para optimizar tus estudios en fitopatología.\nRichard Paredes português: Explora proyectos y recursos para optimizar tus estudios en fitopatología.\n\n¡Explora estos recursos y continúa fortaleciendo tus investigaciones con las herramientas más efectivas en análisis de datos para fitopatología!."
  },
  {
    "objectID": "FIP606-Proyect_CLR.html",
    "href": "FIP606-Proyect_CLR.html",
    "title": "FIP606-Proyecto: Análisis de Datos en R",
    "section": "",
    "text": "Validação do fungicida para o controle da ferrugem do cafeeiro em variedade suscetível\n\n\n\nLa Roya del Cafeto es una enfermedad económicamente importante para el cultivo del café, causando pérdidas de producción entre el 23% y 50% en Colombia y hasta el 80% en otros países. En Colombia, el 16% de las áreas sembradas con café son susceptibles a esta enfermedad y requieren manejo con fungicidas. Debido a la restricción de muchos agroquímicos, es necesario desarrollar nuevas alternativas de control. Este experimento busca validar un nuevo fungicida como opción en la Estación Experimental La Catalina de Cenicafé, aplicando el producto en dosis específicas en momentos determinados del cultivo. Se evaluarán incidencia, severidad, defoliación y efectos en la producción y calidad del café, comparando con otros tratamientos y sin tratamiento. Los resultados buscarán soportar la recomendación del nuevo fungicida para evitar pérdidas por la roya en Colombia.\nA Ferrugem do Cafeeiro é uma doença economicamente importante para o cultivo do café, causando perdas de produção entre 23% e 50% na Colômbia e até 80% em outros países. Na Colômbia, 16% das áreas plantadas com café são suscetíveis a essa doença e requerem manejo com fungicidas. Devido à restrição de muitos agroquímicos, é necessário desenvolver novas alternativas de controle. Este experimento busca validar um novo fungicida como opção na Estação Experimental La Catalina de Cenicafé, aplicando o produto em doses específicas em momentos determinados do cultivo. Serão avaliados incidência, severidade, desfolha e efeitos na produção e qualidade do café, comparando com outros tratamentos e sem tratamento. Os resultados buscarão suportar a recomendação do novo fungicida para evitar perdas pela ferrugem na Colômbia.\n\n\n\nSe dispone de pocas alternativas de fungicidas para el control de roya del cafeto y otras enfermedades de importancia en Colombia, con soporte experimental y validadas.\nSe dispõe de muitas poucas alternativas de fungicidas para o controle da ferrugem do cafeeiro e outras doenças importantes na Colômbia, com suporte experimental e validadas.\n\n\n\nValidar un fungicida, para el control de roya del cafeto en variedad Caturra.\nValidar um fungicida para o controle da ferrugem do cafeeiro na variedade Caturra."
  },
  {
    "objectID": "FIP606-Proyect_CLR.html#validación-de-un-fungicida-para-el-control-de-roya-del-cafeto-en-variedad-susceptible",
    "href": "FIP606-Proyect_CLR.html#validación-de-un-fungicida-para-el-control-de-roya-del-cafeto-en-variedad-susceptible",
    "title": "FIP606-Proyecto: Análisis de Datos en R",
    "section": "",
    "text": "Validação do fungicida para o controle da ferrugem do cafeeiro em variedade suscetível\n\n\n\nLa Roya del Cafeto es una enfermedad económicamente importante para el cultivo del café, causando pérdidas de producción entre el 23% y 50% en Colombia y hasta el 80% en otros países. En Colombia, el 16% de las áreas sembradas con café son susceptibles a esta enfermedad y requieren manejo con fungicidas. Debido a la restricción de muchos agroquímicos, es necesario desarrollar nuevas alternativas de control. Este experimento busca validar un nuevo fungicida como opción en la Estación Experimental La Catalina de Cenicafé, aplicando el producto en dosis específicas en momentos determinados del cultivo. Se evaluarán incidencia, severidad, defoliación y efectos en la producción y calidad del café, comparando con otros tratamientos y sin tratamiento. Los resultados buscarán soportar la recomendación del nuevo fungicida para evitar pérdidas por la roya en Colombia.\nA Ferrugem do Cafeeiro é uma doença economicamente importante para o cultivo do café, causando perdas de produção entre 23% e 50% na Colômbia e até 80% em outros países. Na Colômbia, 16% das áreas plantadas com café são suscetíveis a essa doença e requerem manejo com fungicidas. Devido à restrição de muitos agroquímicos, é necessário desenvolver novas alternativas de controle. Este experimento busca validar um novo fungicida como opção na Estação Experimental La Catalina de Cenicafé, aplicando o produto em doses específicas em momentos determinados do cultivo. Serão avaliados incidência, severidade, desfolha e efeitos na produção e qualidade do café, comparando com outros tratamentos e sem tratamento. Os resultados buscarão suportar a recomendação do novo fungicida para evitar perdas pela ferrugem na Colômbia.\n\n\n\nSe dispone de pocas alternativas de fungicidas para el control de roya del cafeto y otras enfermedades de importancia en Colombia, con soporte experimental y validadas.\nSe dispõe de muitas poucas alternativas de fungicidas para o controle da ferrugem do cafeeiro e outras doenças importantes na Colômbia, com suporte experimental e validadas.\n\n\n\nValidar un fungicida, para el control de roya del cafeto en variedad Caturra.\nValidar um fungicida para o controle da ferrugem do cafeeiro na variedade Caturra."
  },
  {
    "objectID": "FIP606-Proyect_CLR.html#generalidades",
    "href": "FIP606-Proyect_CLR.html#generalidades",
    "title": "FIP606-Proyecto: Análisis de Datos en R",
    "section": "Generalidades",
    "text": "Generalidades\n\nCultivo del Café, la Roya y el Clima\n\nEn el cultivo del café en Colombia, una actividad agrícola de gran importancia económica y social, uno de los principales desafíos es la roya del cafeto Hemileia vastatrix. Esta enfermedad afecta las hojas de las plantas de café, reduciendo significativamente la producción, especialmente en variedades susceptibles como Caturra. Por lo tanto, es crucial implementar estrategias efectivas de manejo y control químico.\nLa Zona de Confluencia Intertropical (ZCIT) (A.) juega un papel crucial en el clima de la región cafetera de Colombia. Aquí, la convergencia de vientos alisios del hemisferio norte y sur influye directamente en las precipitaciones y la humedad, variables críticas para el desarrollo de la roya del cafeto.\nLa efectividad del control químico (B-C) es de gran importancia para mitigar los efectos de la roya del cafeto en las variedades susceptibles. Factores como la incidencia, severidad y defoliación (D) en el tercio productivo de la planta deben ser evaluados con detalle para implementar estrategias adecuadas.\nEstas condiciones ambientales, con temperaturas entre 17 y 29°C (óptimo 22°C), alta humedad relativa (&gt;90%) y radiación solar moderada, son propicias para el desarrollo de la roya del cafeto, afectando severamente las plantaciones en Colombia. La influencia de la ZCIT en el régimen climático local es, por tanto, fundamental en la respuesta de los cultivos a la enfermedad.\nNo cultivo do café na Colômbia, uma atividade agrícola de grande importância econômica e social, um dos principais desafios é a ferrugem do cafeeiro Hemileia vastatrix. Esta doença afeta as folhas das plantas de café, reduzindo significativamente a produção, especialmente em variedades susceptíveis como Caturra. Portanto, é crucial implementar estratégias eficazes de manejo e controle químico. A Zona de Convergência Intertropical (ZCIT) (A.) desempenha um papel crucial no clima da região cafeeira da Colômbia. Aqui, a convergência dos ventos alísios do hemisfério norte e sul influencia diretamente as precipitações e a umidade, variáveis críticas para o desenvolvimento da ferrugem do cafeeiro. A eficácia do controle químico (B-C) é de grande importância para mitigar os efeitos da ferrugem do cafeeiro nas variedades susceptíveis. Fatores como incidência, severidade e desfolhamento (D) no terço produtivo da planta devem ser avaliados detalhadamente para implementar estratégias adequadas. Essas condições ambientais, com temperaturas entre 17 e 29°C (ótimo 22°C), alta umidade relativa (&gt;90%) e radiação solar moderada, são propícias para o desenvolvimento da ferrugem do cafeeiro, afetando severamente as plantações na Colômbia. A influência da ZCIT no regime climático local é, portanto, fundamental na resposta das culturas à doença.\n\n\n\nFigura 1. Dinámica Epidemiologica en el control de la Roya del cafeto en Colombia\n\n\nAnalysis carried out in the FIP606 Copyrigth Gustavo Marin / Gabriela Rivadeneira © 2024\n。いいですか、私たちの神は主おひとりです。"
  },
  {
    "objectID": "Aula00.html",
    "href": "Aula00.html",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Análisis de datos usando Quarto en R\n\n\n\n\n\nAbrir RStudio: Asegúrate de tener RStudio abierto y funcionando correctamente en tu computadora.\nCrear un nuevo proyecto:\n\nVe al menú superior de RStudio y selecciona File -&gt; New Project -&gt; New Directory.\nHaz clic en Create Project para crear la estructura inicial del proyecto en el directorio especificado.\n\n\n\n\nConfigurar el documento Quarto:\n\nUna vez que se haya creado el proyecto, en el panel de archivos de RStudio, debes de crear un archivo o documento Untitled.qmd.\nHaz doble clic en Untitled.qmd para abrirlo y comenzar a editarlo.\n\n\n\n\nEditar el documento:\n\nEn el archivo Untitled.qmd, puedes comenzar a escribir contenido utilizando Markdown y agregar bloques (chunck) de código R para realizar análisis, generar gráficos y más.\nUtiliza las funciones y características de Quarto, como los chunks de código interactivos, para crear informes dinámicos y explorar datos de manera efectiva.\n\nCompilar y visualizar el informe:\n\nPara ver cómo se ve tu informe generado, puedes hacer clic en el botón Knit (tejer) en RStudio, que compilará el documento .qmd y generará un archivo HTML (u otro formato especificado).\nEsto te permitirá ver el informe finalizado con gráficos, tablas y resultados de análisis integrados.\n\n\nSiguiendo estos pasos, estarás configurando tu proyecto en RStudio utilizando Quarto con la extensión .qmd, lo que te permitirá utilizar todas las funcionalidades de Quarto para la creación de informes dinámicos de manera efectiva y amigable con Markdown."
  },
  {
    "objectID": "Aula00.html#proyecto-quarto-en-rstudio",
    "href": "Aula00.html#proyecto-quarto-en-rstudio",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Análisis de datos usando Quarto en R\n\n\n\n\n\nAbrir RStudio: Asegúrate de tener RStudio abierto y funcionando correctamente en tu computadora.\nCrear un nuevo proyecto:\n\nVe al menú superior de RStudio y selecciona File -&gt; New Project -&gt; New Directory.\nHaz clic en Create Project para crear la estructura inicial del proyecto en el directorio especificado.\n\n\n\n\nConfigurar el documento Quarto:\n\nUna vez que se haya creado el proyecto, en el panel de archivos de RStudio, debes de crear un archivo o documento Untitled.qmd.\nHaz doble clic en Untitled.qmd para abrirlo y comenzar a editarlo.\n\n\n\n\nEditar el documento:\n\nEn el archivo Untitled.qmd, puedes comenzar a escribir contenido utilizando Markdown y agregar bloques (chunck) de código R para realizar análisis, generar gráficos y más.\nUtiliza las funciones y características de Quarto, como los chunks de código interactivos, para crear informes dinámicos y explorar datos de manera efectiva.\n\nCompilar y visualizar el informe:\n\nPara ver cómo se ve tu informe generado, puedes hacer clic en el botón Knit (tejer) en RStudio, que compilará el documento .qmd y generará un archivo HTML (u otro formato especificado).\nEsto te permitirá ver el informe finalizado con gráficos, tablas y resultados de análisis integrados.\n\n\nSiguiendo estos pasos, estarás configurando tu proyecto en RStudio utilizando Quarto con la extensión .qmd, lo que te permitirá utilizar todas las funcionalidades de Quarto para la creación de informes dinámicos de manera efectiva y amigable con Markdown."
  },
  {
    "objectID": "Aula9.html",
    "href": "Aula9.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula9.html#prueba-t",
    "href": "Aula9.html#prueba-t",
    "title": "",
    "section": "Prueba t",
    "text": "Prueba t\nLa prueba t compara DOS MEDIAS (2 tratamientos) y muestra si las diferencias entre estas medias son significativas. Como toda prueba estadística, la prueba t también proporciona una medida del valor p. Es decir, al final, habremos calculado la probabilidad de que la diferencia encontrada (entre las medias) haya sido por casualidad. Existen 2 tipos más comunes de prueba t:\n\nPrueba t para 2 muestras dependientes (o pareadas): compara las medias de la misma población en diferentes momentos de tiempo (por ejemplo, antes y después).\nPrueba t para 2 muestras independientes (o no pareadas): compara las medias de dos poblaciones distintas.\n\nLos términos paramétrico y no paramétrico se refieren a la media y la desviación estándar, que son los parámetros que definen las poblaciones que presentan distribución normal. Veremos cómo trabajar en estas dos situaciones diferentes.\n\nDos Tratamientos Independientes\nSituación: Un investigador realizó un experimento para evaluar el efecto de un micronutriente, el magnesio (Mg), añadido a la solución del suelo cultivado con plantas de arroz, en el manejo de una enfermedad fúngica. El experimento se realizó en un diseño completamente al azar con 10 repeticiones, siendo cada repetición una maceta de planta. Uno de los tratamientos es el llamado control, o testigo, sin el suplemento mineral. El segundo es aquel con el suplemento de Mg en una dosis de 2 mM. En cada una de las repeticiones se obtuvo un valor promedio del tamaño de las lesiones en un tiempo determinado después de la inoculación.\n\n\nPreparo Pre-Análisis\n\nCarga de paquetes e importación del conjunto de datos\n\n\nCodigo\nlibrary(magrittr) # para usar pipes\nlibrary(ggplot2) # para gráficos\nlibrary(dplyr)\nlibrary(readxl)\nlibrary(tidyr)\nlibrary(DT)\nlibrary(ggthemes)\n\n\n\n\nCodigo\ndata_mg &lt;- read_excel(\"dados-diversos.xlsx\")\n\ndata_mg |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\"))) \n\n\n\n\n\n\n\n\nCálculo de Estadísticas Descriptivas\nAhora, vamos a trabajar con estos datos y obtener estadísticas que describan el conjunto de datos, como la tendencia central y la dispersión de los datos. En este caso, trabajamos con la media (mean), varianza (var), desviación estándar (sd), error estándar (se) e intervalo de confianza (ci). El intervalo de confianza es solo para inferencia visual.\n\n\nCodigo\ndata2 &lt;- data_mg %&gt;%\n  group_by(trat) %&gt;%\n  summarise(\n    mean_com = mean(comp),\n    sd_comp = sd(comp),\n    var_comp = var(comp),\n    n = n(),\n    se_comp = sd_comp / sqrt(n - 1),\n    ci = se_comp * qt(0.025, df = 9)\n  )\n\n\ndata2 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(c('mean_com', 'sd_comp', 'var_comp','se_comp','ci'), 2)\n\n\n\n\n\n\n\n\nVisualización\nLa manera más simple de visualizar, en el caso de más de 6 repeticiones, es usando boxplots junto con los datos de cada repetición. Aquí visualizaremos los datos en un gráfico de barras vertical con error estándar.\n\n\nCodigo\ndata2 |&gt; \n  ggplot(aes(trat, mean_com)) +\n  geom_col(width = 0.5, fill = \"steelblue\") +\n  geom_errorbar(aes(\n    ymin = mean_com - se_comp,\n    ymax = mean_com + se_comp),\n    width = 0.1) +\n  ylim(0, 20) +\n  theme_few()+\n  labs(x = \"\", y = \"Tamaño promedio (mm)\")\n\n\n\n\n\n\n\n\n\n\n\nIntervalo de Confianza\nAhora visualizamos los datos con el intervalo de confianza (ci). A continuación, las barras verticales representan el intervalo de confianza del 95%.\n\n\nCodigo\ndata2 |&gt; \n  ggplot(aes(trat, mean_com)) +\n  geom_col(width = 0.5, fill = \"steelblue\") +\n  geom_errorbar(aes(\n    ymin = mean_com - ci,\n    ymax = mean_com + ci),\n    width = 0.1) +\n  ylim(0, 20) +\n  theme_few()+\n  labs(x = \"\", y = \"Tamaño promedio (mm)\")\n\n\n\n\n\n\n\n\n\n\n\nPreparación de Datos\nEl conjunto de datos está en formato largo, así que la variable respuesta de interés está solo en una columna. Existen varias formas de separar en dos vectores los datos de respuesta para cada tratamiento. Una de ellas es mediante la función pivot_wider, la cual coloca las respuestas en dos columnas, una para cada tratamiento. Para eso, crearemos el conjunto data_mg2. Ahora es posible visualizar las respuestas (tamaño de la lesión) para cada tratamiento usando el conjunto de datos original, ya que ggplot2 requiere los datos en formato largo.\n\n\nCodigo\ndata_mg2 &lt;- data_mg |&gt;\n  pivot_wider(names_from = trat, values_from = comp)\n\n\ndata_mg2 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\n\nPrueba de Hipótesis - Prueba t\nLa prueba t es una prueba paramétrica y para realizarla se deben cumplir 2 premisas: normalidad y homogeneidad de la varianza (homocedasticidad). En caso de que sea necesario transformar los datos para que sean normales, es aceptable.\n\n\nCodigo\nt.test(data_mg2$Mg2, data_mg2$control, paired = FALSE)\n\n\n\n    Welch Two Sample t-test\n\ndata:  data_mg2$Mg2 and data_mg2$control\nt = -8.1549, df = 17.354, p-value = 2.423e-07\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -6.490393 -3.825607\nsample estimates:\nmean of x mean of y \n   10.520    15.678 \n\n\nLa orden de ejecución de las pruebas debe ser: shapiro.test (prueba de normalidad) &gt; var.test (prueba de homocedasticidad) &gt; si p &lt; 0.05 &gt; t.test. En caso de que la varianza sea heterogénea, usar var.equal = FALSE. En el caso de datos pareados, usar el argumento paired = TRUE.\n\nHomocedasticidad\nPodemos confirmar la premisa de la homocedasticidad con la prueba F. En el caso de dos grupos, la función que se puede usar es var.test de R. Vamos a usar el formato largo y llamar a los dos vectores del conjunto. Verifique el valor p en la salida del análisis.\n\n\nCodigo\nattach(data_mg2)\nvar.test(Mg2, control)\n\n\n\n    F test to compare two variances\n\ndata:  Mg2 and control\nF = 1.4781, num df = 9, denom df = 9, p-value = 0.5698\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.3671417 5.9508644\nsample estimates:\nratio of variances \n          1.478111 \n\n\nLa verificación de este supuesto también puede realizarse gráficamente a través del boxplot para los tratamientos vs residuos. Si existe homocedasticidad, se espera que los boxplots sean similares.\n\n\nNormalidad\nLa normalidad puede ser probada mediante procedimientos visuales y pruebas específicas. Para probar la normalidad de los datos, realizamos la prueba de Shapiro.\n\n\nCodigo\nshapiro.test(Mg2)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  Mg2\nW = 0.97269, p-value = 0.9146\n\n\nCodigo\nshapiro.test(control)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  control\nW = 0.93886, p-value = 0.5404\n\n\n\n\nAnálisis Visual de la Normalidad\nLa verificación visual de la premisa de normalidad se realiza con qqplot (QQ-Plot), que permite verificar si una muestra sigue una distribución gaussiana. Podemos simplemente usar las funciones qqnorm() y qqline() para cada una de las variables analizadas.\n##qqnorm() ##qqline()\n\n\nCodigo\n# Crear el QQ plot para la variable Mg2 usando ggplot2\nggplot(data_mg2, aes(sample = Mg2)) +\n  stat_qq() +\n  stat_qq_line() +\n  labs(title = \"QQ Plot para Mg2\", x = \"Cuantiles teóricos\", y = \"Cuantiles muestrales\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Crear el QQ plot para la variable Mg2 usando ggplot2\nggplot(data_mg2, aes(sample = control)) +\n  stat_qq() +\n  stat_qq_line() +\n  labs(title = \"QQ Plot para control\", x = \"Cuantiles teóricos\", y = \"Cuantiles muestrales\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\n\nDos Tratamientos Dependientes\nSi no se cumplen las premisas de normalidad, ¿qué prueba podría usarse? En el caso de dos grupos, hay dos posibilidades: una es usar una prueba no paramétrica o una prueba basada en remuestreo (bootstrap) de los datos, las cuales no dependen del modelo de distribución. Veamos un ejemplo.\nSituación: Se realizó un experimento para evaluar el efecto del uso de una escala en la precisión y exactitud de evaluaciones visuales de severidad por evaluadores. La hipótesis a probar fue que las evaluaciones utilizando una escala diagramática como ayuda son más precisas que sin el uso de la ayuda. Se eligieron aleatoriamente diez evaluadores y cada uno hizo dos evaluaciones. Se obtuvieron cinco variables que componen la medida de la concordancia de las estimaciones. Dado que las medidas se repitieron en el tiempo para cada evaluador, las muestras son del tipo dependientes.\n\nPreparo Pre-Análisis\nImportación de datos y preparación del conjunto.\n\n\nCodigo\nescala &lt;- read_excel(\"dados-diversos.xlsx\", \"escala\")\nhead(escala)\n\n\n# A tibble: 6 × 7\n  assessment rater acuracia precisao vies_geral vies_sistematico vies_constante\n  &lt;chr&gt;      &lt;chr&gt;    &lt;dbl&gt;    &lt;dbl&gt;      &lt;dbl&gt;            &lt;dbl&gt;          &lt;dbl&gt;\n1 Unaided    A        0.809    0.826      0.979            1.19         0.112  \n2 Unaided    B        0.722    0.728      0.991            0.922       -0.106  \n3 Unaided    C        0.560    0.715      0.783            1.16         0.730  \n4 Unaided    D        0.818    0.819      0.999            0.948       -0.00569\n5 Unaided    E        0.748    0.753      0.993            1.10         0.0719 \n6 Unaided    F        0.695    0.751      0.925            0.802        0.336  \n\n\nCodigo\nescala2 &lt;- escala |&gt; \n  select(assessment, rater, acuracia)\n\nescala3 &lt;- escala2 |&gt;\n  pivot_wider(names_from = assessment, values_from = acuracia)\n\nescala3 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(c('Unaided','Aided1'), 2)\n\n\n\n\n\n\n\n\nVerificación de Premisas\n\nHomocedasticidad\nPodemos confirmar la premisa de homocedasticidad con la prueba F.\n\n\nCodigo\nattach(escala3)\nvar.test(Aided1, Unaided)\n\n\n\n    F test to compare two variances\n\ndata:  Aided1 and Unaided\nF = 0.17041, num df = 9, denom df = 9, p-value = 0.01461\nalternative hypothesis: true ratio of variances is not equal to 1\n95 percent confidence interval:\n 0.04232677 0.68605885\nsample estimates:\nratio of variances \n         0.1704073 \n\n\n\n\nNormalidad\nRealizamos la prueba de Shapiro para cada variable.\n\n\nCodigo\nshapiro.test(Aided1)$p.value\n\n\n[1] 0.4260888\n\n\nCodigo\nshapiro.test(Unaided)$p.value\n\n\n[1] 0.1131276\n\n\n\n\nAnálisis Visual de la Normalidad\n\n\nCodigo\n# Crear el QQ plot para la variable Mg2 usando ggplot2\nggplot(escala3, aes(sample = Aided1)) +\n  stat_qq() +\n  stat_qq_line() +\n  labs(title = \"QQ Plot para Aided1\", x = \"Cuantiles teóricos\", y = \"Cuantiles muestrales\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Crear el QQ plot para la variable Mg2 usando ggplot2\nggplot(escala3, aes(sample = Unaided)) +\n  stat_qq() +\n  stat_qq_line() +\n  labs(title = \"QQ Plot para Unaided\", x = \"Cuantiles teóricos\", y = \"Cuantiles muestrales\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\n\n\nPrueba t Paramétrica\nRealizamos la prueba t para muestras pareadas.\n\n\nCodigo\nt_escala &lt;- t.test(escala3$Aided1, escala3$Unaided , paired = TRUE, var.equal = FALSE)\nt_escala\n\n\n\n    Paired t-test\n\ndata:  escala3$Aided1 and escala3$Unaided\nt = 5.9364, df = 9, p-value = 0.000219\nalternative hypothesis: true mean difference is not equal to 0\n95 percent confidence interval:\n 0.1144707 0.2554241\nsample estimates:\nmean difference \n      0.1849474 \n\n\n\n\nPrueba para Datos No Paramétricos\nLa prueba t paramétrica es una herramienta estadística utilizada para comparar las medias de dos grupos independientes y determinar si existen diferencias significativas entre ellas.\n\n\nFuncionamiento de la Prueba t Paramétrica\nLa prueba t se basa en calcular la diferencia entre las medias de dos grupos y determinar si esta diferencia es estadísticamente significativa o si podría haber ocurrido debido al azar.\n\nHipótesis Nula (H0): Afirma que no hay diferencia significativa entre las medias de los dos grupos.\nHipótesis Alternativa (H1): Afirma que hay una diferencia significativa entre las medias de los dos grupos.\n\n\n\nPasos para realizar la prueba t en R\nVamos a suponer que tienes dos grupos de datos, y quieres aplicar una prueba t para determinar si las medias de estos grupos son significativamente diferentes.\n\nEjemplo\nSupongamos que tienes dos vectores grupo1 y grupo2 con los datos de ambos grupos. Aquí te muestro cómo realizar una prueba t de dos muestras en R:\n\n\nCodigo\n# Ejemplo de datos de dos grupos\ngrupo1 &lt;- c(12, 14, 18, 16, 20)\ngrupo2 &lt;- c(15, 17, 16, 19, 22)\n\n\n\n\nCodigo\n# Realizar la prueba t de dos muestras (asumiendo varianzas iguales)\nresultado &lt;- t.test(grupo1, grupo2)\n\n# Mostrar el resultado\nprint(resultado)\n\n\n\n    Welch Two Sample t-test\n\ndata:  grupo1 and grupo2\nt = -0.95669, df = 7.8672, p-value = 0.3672\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -6.151506  2.551506\nsample estimates:\nmean of x mean of y \n     16.0      17.8 \n\n\n\n\nExplicación\n\nDefinición de datos: Creamos dos vectores grupo1 y grupo2 que contienen las observaciones de cada grupo.\nPrueba t: Utilizamos la función t.test() en R para realizar la prueba t. En este caso, asumimos que las varianzas de ambos grupos son iguales (var.equal = TRUE por defecto en t.test()).\nInterpretación del resultado: El objeto resultado contiene todos los resultados de la prueba t, incluyendo el valor de t, el valor p y las medias de ambos grupos.\n\n\n\n\nInterpretación del Resultado\n\nValor p: Es el valor de probabilidad asociado con la prueba t. Si el valor p es menor que el nivel de significancia (usualmente 0.05), se rechaza la hipótesis nula y se concluye que hay una diferencia significativa entre las medias de los dos grupos.\nIntervalo de Confianza: También se proporciona un intervalo de confianza que indica el rango dentro del cual se espera que se encuentre la diferencia real entre las medias poblacionales.\n\n\n\nConsideraciones\n\nAsegúrate de entender bien las condiciones bajo las cuales se puede aplicar la prueba t, como la normalidad de los datos y la igualdad de varianzas entre los grupos.\nEn casos donde no se cumplan estas condiciones, es recomendable utilizar pruebas no paramétricas u otras técnicas estadísticas apropiadas.\n\nEsta es una manera básica de realizar una prueba t de dos muestras en R. ¡Espero que te sea útil para entender cómo funciona y cómo aplicarla en tus propios análisis de datos!\n\n\nEjemplo Escala\nUna prueba no paramétrica no hace ninguna suposición sobre la distribución de la población o el tamaño de la muestra. La wilcox.test es la prueba para datos no paramétricos equivalente a la prueba t para datos paramétricos. La prueba de Wilcoxon se usa para probar si las medianas de las muestras son iguales en los casos en que la suposición de normalidad no se satisface o cuando no es posible verificar esa suposición.\n\n\nCodigo\nwilcox.test(escala3$Aided1, escala3$Unaided, paired = TRUE)\n\n\n\n    Wilcoxon signed rank exact test\n\ndata:  escala3$Aided1 and escala3$Unaided\nV = 55, p-value = 0.001953\nalternative hypothesis: true location shift is not equal to 0\n\n\n\nEste script explica cómo realizar análisis estadísticos básicos comparando dos grupos, tanto para muestras dependientes como independientes, utilizando pruebas t y pruebas no paramétricas, con énfasis en la verificación de las premisas necesarias para aplicar estos métodos."
  },
  {
    "objectID": "Aula15.html",
    "href": "Aula15.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula15.html#análisis-de-variables-categóricas-y-tablas-de-contingencia-1",
    "href": "Aula15.html#análisis-de-variables-categóricas-y-tablas-de-contingencia-1",
    "title": "",
    "section": "Análisis de Variables Categóricas y Tablas de Contingencia",
    "text": "Análisis de Variables Categóricas y Tablas de Contingencia\n\nCargar Datos\nPrimero, cargamos los datos desde un archivo Excel:\n\n\nCodigo\nsurvey &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"survey\")\n\nsurvey|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCrear una Tabla de Contingencia\nUtilizamos la función table() para crear una tabla de contingencia:\n\n\nCodigo\nq &lt;- table(survey$residue, survey$species)\n\nq |&gt; \n   DT::datatable(\n   extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n        buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nInterpretación de la Tabla de Contingencia\nAl observar la tabla de contingencia, podemos: - Verificar las frecuencias de cada combinación de residue y species. - Evaluar si ciertos especies de fusarium predominan en ciertos cultivos. - Identificar si hay alguna combinación de residue y species que es particularmente común o rara.\n\n\nCalcular Porcentajes\nUtilizamos la función adorn_percentages() del paquete janitor para obtener porcentajes:\n\n\nCodigo\nsurvey1&lt;-survey |&gt; \n            tabyl(year, species) |&gt; \n            adorn_percentages()\n\nsurvey1 |&gt; \n   DT::datatable(\n   extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n        buttons = c('excel', \"csv\")))|&gt; \n                            formatRound(c('Fgra','Fspp'), 2)\n\n\n\n\n\n\n\n\nVisualización de Datos\nPodemos visualizar la tabla de contingencia con un gráfico de barras:\n\n\nCodigo\nsurvey |&gt;\n  filter(residue != \"NA\") |&gt;\n  count(residue, species) |&gt;\n  ggplot(aes(residue, n, fill = species)) +\n  geom_col() +\n  labs(title = \"Distribución de Residuos por Especies\",\n       x = \"Residuos\",\n       y = \"Frecuencia\",\n       fill = \"Especies\")+\n  theme_few()+\n  scale_fill_few()"
  },
  {
    "objectID": "Aula15.html#teste-de-independencia",
    "href": "Aula15.html#teste-de-independencia",
    "title": "",
    "section": "Teste de Independencia",
    "text": "Teste de Independencia\n\nTeste de Chi-cuadrado\nEl test de chi-cuadrado se utiliza para evaluar la independencia entre dos variables categóricas:\n\n\nCodigo\nchisq.test(q)\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  q\nX-squared = 1.1997, df = 1, p-value = 0.2734\n\n\nEste test nos dirá si la asociación observada entre el tipo de cultivo y el tipo de especie de fusarium es significativa, ayudándonos a entender si existe una relación no aleatoria entre estas variables.\n\n\nTest de Fisher\nPara tablas de contingencia 2x2 o con pocas observaciones, utilizamos el test de Fisher:\n\n\nCodigo\nq &lt;- table(survey$residue, survey$inc_class)\nfisher.test(q)\n\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  q\np-value = 0.09855\nalternative hypothesis: true odds ratio is not equal to 1\n95 percent confidence interval:\n 0.4492084 1.0721250\nsample estimates:\nodds ratio \n  0.696718"
  },
  {
    "objectID": "Aula11.html",
    "href": "Aula11.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula11.html#preparación-pre-análisis",
    "href": "Aula11.html#preparación-pre-análisis",
    "title": "",
    "section": "Preparación Pre-Análisis",
    "text": "Preparación Pre-Análisis\n\nCargar Paquetes e Importar Datos\nPrimero, cargamos los paquetes necesarios y el conjunto de datos.\n\n\nCodigo\n# Cargar paquetes\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggthemes)\nlibrary(emmeans)\nlibrary(DT)\nlibrary(multcompView)\nlibrary(multcomp)\n\n\n\n\nCodigo\n# Cargar datos desde un archivo Excel\ndat &lt;- read_excel(\"dados-diversos.xlsx\", \"fungicida_vaso\")\n\ndat |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCrear Nueva Columna con Porcentaje de Espigas con Enfermedad\nCalculamos el porcentaje de espigas con enfermedad y creamos una nueva columna en el conjunto de datos.\n\n\nCodigo\ndat2 &lt;- dat |&gt;\n  mutate(inc = dis_sp / n_sp * 100)\n  \ndat2|&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))|&gt; \n                formatRound('inc', 2)\n\n\n\n\n\n\n\n\nCodigo\n# Visualización inicial de los datos\ndat2 |&gt;\n  ggplot(aes(x = treat, y = inc, color=treat)) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~dose)+\n  theme_few()+\n  scale_color_few()"
  },
  {
    "objectID": "Aula11.html#modelo-anova-datos-cualitativos",
    "href": "Aula11.html#modelo-anova-datos-cualitativos",
    "title": "",
    "section": "Modelo ANOVA: Datos Cualitativos",
    "text": "Modelo ANOVA: Datos Cualitativos\n\nGenerar Modelo ANOVA\nCreamos el modelo ANOVA considerando la interacción entre los tratamientos y las dosis.\n\n\nCodigo\nm1 &lt;- aov(inc ~ treat * dose, data = dat2)\nsummary(m1)\n\n\n            Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ntreat        1  919.5   919.5   24.31 0.000151 ***\ndose         1  920.9   920.9   24.34 0.000150 ***\ntreat:dose   1  747.7   747.7   19.76 0.000407 ***\nResiduals   16  605.3    37.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nChequear Premisas del Modelo\nUtilizamos los paquetes performance y DHARMa para verificar las premisas de normalidad y homocedasticidad.\n\n\nCodigo\nlibrary(performance)\ncheck_normality(m1) \n\n\nWarning: Non-normality of residuals detected (p = 0.018).\n\n\nCodigo\ncheck_heteroscedasticity(m1)\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nCodigo\nlibrary(DHARMa)\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n\n\n\n\nTransformación de Datos\nSi los datos no cumplen con las premisas, intentamos transformar los datos.\n\n\nCodigo\nm1 &lt;- aov(log(inc + 0.5) ~ treat * dose, data = dat2)\nsummary(m1)\n\n\n            Df Sum Sq Mean Sq F value  Pr(&gt;F)   \ntreat        1 12.928  12.928  13.980 0.00179 **\ndose         1  5.663   5.663   6.124 0.02491 * \ntreat:dose   1  5.668   5.668   6.129 0.02486 * \nResiduals   16 14.796   0.925                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCodigo\ncheck_normality(m1) \n\n\nWarning: Non-normality of residuals detected (p = 0.050).\n\n\nCodigo\ncheck_heteroscedasticity(m1) \n\n\nOK: Error variance appears to be homoscedastic (p = 0.180).\n\n\nCodigo\nplot(simulateResiduals(m1))\n\n\n\n\n\n\n\n\n\n\n\nEstimación de Medias de Tratamientos\nUsamos el paquete emmeans para calcular las medias de los tratamientos.\n\n\nCodigo\nmeans_m1&lt;- cld(emmeans(m1, ~ treat | dose, type = \"response\"),alpha = 0.05, Letters = LETTERS,reverse=T)\n\nmeans_m1|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('response','SE','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\n\n\nCoeficiente de Variación\nCalculamos el coeficiente de variación usando el paquete agricolae.\n\n\nCodigo\nlibrary(agricolae)\ncv.model(m1) \n\n\n[1] 65.04818"
  },
  {
    "objectID": "Aula11.html#anova-con-tres-factores",
    "href": "Aula11.html#anova-con-tres-factores",
    "title": "",
    "section": "ANOVA con Tres Factores",
    "text": "ANOVA con Tres Factores\n\nImportar y Visualizar Datos\nImportamos otro conjunto de datos y visualizamos la interacción entre el tipo de almacenamiento y la humedad.\n\n\nCodigo\nmilho &lt;- read_excel(\"dados-diversos.xlsx\", \"armazena\")\n\nmilho |&gt;\n  filter(tempo == 8) |&gt;\n  ggplot(aes(factor(tipo), peso_mil, color = factor(umidade))) +\n  geom_jitter(width = 0.1) +\n  facet_wrap(~ umidade) +\n  theme_few()+\n  scale_color_few()\n\n\n\n\n\n\n\n\n\n\n\nGenerar Modelo ANOVA\nCreamos el modelo ANOVA considerando la interacción entre el tipo de almacenamiento y la humedad.\n\n\nCodigo\nmilho2 &lt;- milho |&gt;\n  filter(tempo == 8)\n\nm2 &lt;- aov(peso_mil ~ factor(tipo) * factor(umidade), data = milho2)\nsummary(m2) \n\n\n                             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \nfactor(tipo)                  1  11215   11215  2375.8 3.64e-15 ***\nfactor(umidade)               2  42814   21407  4534.8  &lt; 2e-16 ***\nfactor(tipo):factor(umidade)  2   2329    1165   246.7 1.79e-10 ***\nResiduals                    12     57       5                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Aula11.html#datos-no-paramétricos-con-dos-o-más-factores",
    "href": "Aula11.html#datos-no-paramétricos-con-dos-o-más-factores",
    "title": "",
    "section": "Datos No Paramétricos con Dos o Más Factores",
    "text": "Datos No Paramétricos con Dos o Más Factores\n\nImportar Datos y Crear Columna de Rango\nImportamos los datos y creamos una columna de rango para el análisis no paramétrico.\n\n\nCodigo\nfung &lt;- read_excel(\"dados-diversos.xlsx\", \"fungicida_vaso\")\n\nfung2 &lt;- fung |&gt;\n  mutate(inc = inf_seeds / n_seeds * 100, rank_inc = rank(inc))\n\nfung2 |&gt; \n      DT::datatable(\n      extensions = 'Buttons', \n      options = list(dom = 'Bfrtip', \n       buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCodigo\n# Generar modelo ANOVA con datos de rango\nm3 &lt;- aov(rank_inc ~ treat * dose, data = fung2)\n\nsummary(m3)\n\n\n            Df Sum Sq Mean Sq F value  Pr(&gt;F)   \ntreat        1 220.00  220.00  14.204 0.00168 **\ndose         1 105.34  105.34   6.801 0.01904 * \ntreat:dose   1  80.34   80.34   5.187 0.03684 * \nResiduals   16 247.82   15.49                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nEstimación de Medias con Datos de Rango\nUsamos emmeans para calcular las medias con los datos de rango.\n\n\nCodigo\nmeans_rank&lt;- cld(emmeans(m3, ~ treat | dose ),alpha = 0.05, Letters = LETTERS,reverse=T)\n\nmeans_rank |&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('emmean','SE','lower.CL','upper.CL'), 2)"
  },
  {
    "objectID": "Aula11.html#interpretación-de-resultados",
    "href": "Aula11.html#interpretación-de-resultados",
    "title": "",
    "section": "Interpretación de Resultados",
    "text": "Interpretación de Resultados\n\nResultados del Modelo ANOVA\nEl resumen del modelo ANOVA nos proporciona los valores F y los p-valores para los efectos principales y las interacciones. Un p-valor menor a 0.05 indica una diferencia significativa entre los grupos.\n\n\nPremisas del Modelo\n\nNormalidad: Se comprueba con pruebas de normalidad de los residuos. Si los residuos no son normales, se puede considerar transformar los datos.\nHomocedasticidad: Se comprueba si las variancias de los residuos son constantes. Si no se cumple, se puede considerar usar métodos robustos o transformaciones de datos.\n\n\n\nTransformación de Datos\nSi la transformación de los datos (por ejemplo, usando logaritmos) mejora la normalidad y homocedasticidad, se puede proceder con la ANOVA transformada.\n\n\nComparaciones de Medias\nEl paquete emmeans facilita la comparación de medias ajustadas. Los resultados se pueden visualizar con cld() para ver las diferencias significativas entre los grupos.\n\n\nCoeficiente de Variación\nEl coeficiente de variación proporciona una medida de la variabilidad relativa de los datos."
  },
  {
    "objectID": "Aula11.html#aprendizaje-del-día",
    "href": "Aula11.html#aprendizaje-del-día",
    "title": "",
    "section": "Aprendizaje del día",
    "text": "Aprendizaje del día\nEsta guía ha proporcionado una explicación detallada de cómo realizar ANOVA con múltiples factores en RStudio, incluyendo la preparación de datos, la verificación de premisas, la transformación de datos y la interpretación de resultados. Utilizar los paquetes tidyverse, readxl, performance, DHARMa, emmeans, multcomp, agricolae y DT facilita la ejecución y análisis de ANOVA de manera efectiva."
  },
  {
    "objectID": "Aula12.html",
    "href": "Aula12.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula12.html#preparación-pre-análisis",
    "href": "Aula12.html#preparación-pre-análisis",
    "title": "",
    "section": "Preparación Pre-Análisis",
    "text": "Preparación Pre-Análisis\n\nCargar Paquetes y Cargar Datos\nPrimero, cargamos los paquetes necesarios y luego importamos nuestros datos desde un archivo Excel.\n\n\nCodigo\n# Cargar paquetes necesarios\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(DT)\nlibrary(patchwork)\nlibrary(lme4)\n\n# Importar datos: fungicida_campo desde el archivo dados-diversos.xlsx\nfungicidas &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"fungicida_campo\")\n\nfungicidas|&gt; \n          DT::datatable(\n          extensions = 'Buttons', \n          options = list(dom = 'Bfrtip', \n           buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nModelo ANOVA con Bloque\nEn el diseño de bloques completamente aleatorizados, usamos el símbolo + para incluir el efecto del bloque.\n\n\nCodigo\naov_fung &lt;- aov(sev ~ trat + rep, data = fungicidas)\nsummary(aov_fung)\n\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \ntrat         7   7135  1019.3 287.661 &lt;2e-16 ***\nrep          1     19    18.6   5.239 0.0316 *  \nResiduals   23     81     3.5                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nInterpretación de Resultados: - El resumen nos muestra los estadísticos F, los p-valores y las medias para cada tratamiento y bloque. - Si un p-valor es menor que 0.05, hay evidencia suficiente para rechazar la hipótesis nula de que las medias son iguales.\n\n\nChequeo de Premisas\nUtilizamos performance y DHARMa para verificar la normalidad y homogeneidad de varianzas de los residuos.\n\n\nCodigo\nlibrary(performance)\nlibrary(DHARMa)\n\ncheck_normality(aov_fung)\n\n\nOK: residuals appear as normally distributed (p = 0.230).\n\n\n\n\nCodigo\ncheck_heteroscedasticity(aov_fung)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.484).\n\n\n\n\nCodigo\nplot(simulateResiduals(aov_fung))\n\n\n\n\n\n\n\n\n\n\n\nEstimación de Medias\nCalculamos las medias de los tratamientos usando emmeans y mostramos las diferencias significativas con cld.\n\n\nCodigo\nlibrary(emmeans)\nlibrary(multcomp)\nlibrary(multcompView)\n\n\nmeans_fung&lt;- cld(emmeans(aov_fung, ~trat),alpha = 0.05, Letters = LETTERS,reverse=F)\n\nmeans_fung|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('emmean','SE','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\n\n\nCodigo\n# Visualización gráfica de las medias\nlibrary(ggthemes)\nplot(means_fung) +\n  coord_flip() +\n  theme_few()"
  },
  {
    "objectID": "Aula12.html#diseño-en-parcela-subdividida-split-plot",
    "href": "Aula12.html#diseño-en-parcela-subdividida-split-plot",
    "title": "",
    "section": "Diseño en Parcela Subdividida (Split-plot)",
    "text": "Diseño en Parcela Subdividida (Split-plot)\n\nPreparación Pre-Análisis: Importación de Datos\nImportamos los datos del conjunto de datos de milho para un diseño en parcela subdividida.\n\n\nCodigo\nmilho &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"milho\")\n\nmilho|&gt; \n          DT::datatable(\n          extensions = 'Buttons', \n          options = list(dom = 'Bfrtip', \n           buttons = c('excel', \"csv\"))) |&gt; \n                formatRound('index', 2)\n\n\n\n\n\n\n\n\nvisualizar indx e produtividade\n\n\nCodigo\nindex &lt;- milho |&gt; \n  ggplot(aes(method,index))+\n  geom_jitter(width = 0.05, colour= \"gray\")+\n  stat_summary(fun.data = \"mean_cl_boot\",color=\"#9cc414\")+\n  facet_wrap(~hybrid)+\n  theme_clean()\n\n\nProd&lt;- milho |&gt; \n  ggplot(aes(method,yield))+\n  geom_jitter(width = 0.05, colour= \"gray\")+\n  stat_summary(fun.data = \"mean_cl_boot\",color=\"#8b0000\")+ \n  facet_wrap(~hybrid)+\n  theme_clean()\n\n\n\n\nCodigo\n(index | Prod ) + \n  plot_layout(guides = \"collect\" )+\n  plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\n\n\n\n\n\nAjuste del Modelo ANOVA\nPara un diseño de parcela subdividida, especificamos el efecto del bloque y las interacciones.\n\n\nCodigo\naov_milho_bloco &lt;- aov(index ~ factor(block) + hybrid*method + \n                         Error(factor(block)/hybrid/method), data = milho)\n\nsummary(aov_milho_bloco)\n\n\n\nError: factor(block)\n              Df Sum Sq Mean Sq\nfactor(block)  3  592.2   197.4\n\nError: factor(block):hybrid\n          Df Sum Sq Mean Sq F value Pr(&gt;F)  \nhybrid     5  974.2  194.84    3.14 0.0389 *\nResiduals 15  930.9   62.06                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nError: factor(block):hybrid:method\n              Df Sum Sq Mean Sq F value Pr(&gt;F)  \nmethod         1  79.61   79.61   4.726 0.0433 *\nhybrid:method  5 265.28   53.06   3.150 0.0324 *\nResiduals     18 303.18   16.84                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nInterpretación de Resultados: - El modelo ANOVA nos proporciona información sobre las interacciones entre el bloque, el híbrido y el método, así como los efectos principales.\n\n\nChequeo de Premisas con Modelo Mixto (lme4)\nEn parcelas subdivididas, usamos modelos mixtos para comprobar las premisas estadísticas.\n\n\nCodigo\nlibrary(lme4)\nlibrary(car)\n\n# Convertir el bloque en factor\nmilho$block &lt;- as.factor(milho$block)\n\nmix2 &lt;- lmer(index ~ block + hybrid*method + (1|block/hybrid), data = milho)\nAnova(mix2)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: index\n                Chisq Df Pr(&gt;Chisq)   \nblock          0.3192  3   0.956380   \nhybrid        15.6987  5   0.007759 **\nmethod         4.7262  1   0.029706 * \nhybrid:method 15.7498  5   0.007596 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nCodigo\ncheck_normality(mix2)\n\n\nOK: residuals appear as normally distributed (p = 0.621).\n\n\n\n\nCodigo\ncheck_heteroscedasticity(mix2)\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.009).\n\n\n\n\nCodigo\ncheck_model(mix2)\n\n\n\n\n\n\n\n\n\n\n\nTransformación de Datos para Cumplir Premisas\nSi los datos no cumplen con las premisas, consideramos transformaciones como la raíz cuadrada.\n\n\nCodigo\nmilho$block &lt;- as.factor(milho$block)\n\nmix2 &lt;- lmer(sqrt(index) ~ block + hybrid*method + (1|block/hybrid), data = milho)\nAnova(mix2)\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: sqrt(index)\n                Chisq Df Pr(&gt;Chisq)   \nblock          0.0764  3   0.994506   \nhybrid        15.4171  5   0.008721 **\nmethod         3.9239  1   0.047605 * \nhybrid:method 13.3025  5   0.020703 * \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nCodigo\ncheck_normality(mix2)\n\n\nOK: residuals appear as normally distributed (p = 0.422).\n\n\n\n\nCodigo\ncheck_heteroscedasticity(mix2)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.970).\n\n\n\n\nComparación de Medias\nCalculamos y comparamos las medias utilizando emmeans para cada interacción de híbrido y método.\n\n\nCodigo\nmeans_mix2&lt;- cld(emmeans(mix2, ~hybrid | method),alpha = 0.05, Letters = LETTERS,reverse=T)\n\nmeans_mix2|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('emmean','SE','df','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\nCodigo\n# Si queremos comparar métodos dentro de cada híbrido:\n# means_mix2 &lt;- emmeans(mix2, ~ method | hybrid)"
  },
  {
    "objectID": "Aula12.html#aprendizaje-del-día",
    "href": "Aula12.html#aprendizaje-del-día",
    "title": "",
    "section": "Aprendizaje del día",
    "text": "Aprendizaje del día\nEsta guía te ha mostrado cómo realizar análisis de varianza (ANOVA) en RStudio para diferentes diseños experimentales, desde bloques completamente aleatorizados hasta parcelas subdivididas. Utilizando paquetes como tidyverse, readxl, performance, DHARMa, emmeans, multcomp, multcompView, lme4 y car, puedes realizar análisis estadísticos avanzados y asegurarte de cumplir con las premisas necesarias para interpretar correctamente tus resultados."
  },
  {
    "objectID": "Aula13.html",
    "href": "Aula13.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source\n\n\n\n\n\nAnálisis de Regresión Lineal\nEl análisis de regresión lineal es una técnica estadística fundamental utilizada para entender la relación entre una variable dependiente (también conocida como variable respuesta) y una o más variables independientes (también conocidas como predictores o variables explicativas). La premisa básica de la regresión lineal es que esta relación puede ser representada por una línea recta.\n\n¿Qué es la Regresión Lineal?\nLa regresión lineal busca ajustar la mejor línea recta (llamada línea de regresión) que describe cómo la variable dependiente cambia en función de las variables independientes. La ecuación de una regresión lineal simple (con una sola variable independiente) se expresa de la siguiente manera:\ny = ß0 + ß1x + €\nDonde:\n\ny es la variable dependiente.\nx es la variable independiente.\nß0 es el intercepto de la línea de regresión, que representa el valor de y cuando x es cero.\nß1 es la pendiente de la línea de regresión, que indica el cambio esperado en y por cada unidad de cambio en x.\n€ es el término de error que representa la variabilidad en y que no puede ser explicada por x.\n\n\n\nImportancia del Análisis de Regresión Lineal\n\nPredicción: Uno de los usos más comunes del análisis de regresión lineal es la predicción de valores futuros. Por ejemplo, un análisis de regresión puede predecir las ventas futuras de un producto en función de factores como el precio y la publicidad.\nComprensión de Relaciones: Ayuda a entender la naturaleza y la fuerza de la relación entre las variables. Esto es crucial en investigación y en la toma de decisiones basada en datos.\nIdentificación de Factores Clave: Permite identificar qué factores (variables independientes) tienen un impacto significativo en el resultado (variable dependiente). Esto es útil para optimizar procesos y recursos.\nEvaluación de Modelos: A través de estadísticas como el coeficiente de determinación (( R^2 )), el análisis de regresión permite evaluar qué tan bien el modelo se ajusta a los datos observados.\nSimplicidad y Aplicabilidad: La regresión lineal es relativamente simple de entender e implementar. Sus aplicaciones son amplias y se utilizan en campos tan diversos como economía, biología, ingeniería, y ciencias sociales.\n\n\n\nEjemplo Práctico\nA continuación, se presenta un ejemplo práctico de cómo se realiza un análisis de regresión lineal en R, utilizando un conjunto de datos de ejemplo.\nPreparación Pre-Análisis\nPrimero, cargamos los paquetes necesarios y los datos:\n\n\nCodigo\n# Cargar paquetes necesarios\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(DT)\n\n\n\n\nCodigo\n# Importar datos desde un archivo Excel\ndatos &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"estande\")\n\n# Mostrar los datos en una tabla interactiva\ndatos |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n    buttons = c('excel', \"csv\")))      \n\n\n\n\n\n\nVisualización de Datos\nVisualizamos los datos para obtener una idea preliminar de la relación entre las variables:\n\n\nCodigo\ndatos |&gt;\n  ggplot(aes(x = trat, y = nplants)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE)+\n  theme_few()\n\n\n\n\n\n\n\n\n\nAjuste del Modelo de Regresión Lineal\nAjustamos un modelo de regresión lineal simple:\n\n\nCodigo\nmodelo &lt;- lm(nplants ~ trat, data = datos)\nsummary(modelo)\n\n\n\nCall:\nlm(formula = nplants ~ trat, data = datos)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-42.745 -12.303  -2.391  15.684  40.961 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  69.7452     3.4156  20.420  &lt; 2e-16 ***\ntrat         -0.5687     0.1510  -3.766 0.000343 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 21.11 on 70 degrees of freedom\nMultiple R-squared:  0.1684,    Adjusted R-squared:  0.1566 \nF-statistic: 14.18 on 1 and 70 DF,  p-value: 0.0003426\n\n\nIncluir la Ecuación en el Gráfico\nExtraemos los coeficientes del modelo y creamos el gráfico con la ecuación de la regresión lineal anotada:\n\n\nCodigo\n# Extraer coeficientes del modelo\nintercepto &lt;- coef(modelo)[1]\npendiente &lt;- coef(modelo)[2]\n\n\n\n\nCodigo\n# Crear la ecuación en formato de texto\necuacion &lt;- paste(\"y =\", round(intercepto, 2), \"+\", round(pendiente, 2), \"* x\")\n\n\n\n\nCodigo\n# Crear el gráfico con la ecuación del modelo lineal\nggplot(datos, aes(x = trat, y = nplants)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  annotate(\"text\", x = max(datos$trat) * 0.7, y = max(datos$nplants) * 0.9, \n           label = ecuacion, color = \"blue\", size = 5) +\n  labs(title = \"Relación entre Tratamiento y Número de Plantas\",\n       x = \"Tratamiento\",\n       y = \"Número de Plantas\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nInterpretación del Modelo\nEl resumen del modelo (summary(modelo)) proporciona información sobre los coeficientes estimados ß0 y ß1, así como estadísticas importantes como el valor p y el coeficiente de determinación R^2, que nos indican qué tan bien el modelo se ajusta a los datos.\nConclusión\nEl análisis de regresión lineal es una herramienta poderosa y versátil que permite a los investigadores y profesionales de diversas disciplinas comprender y predecir comportamientos y tendencias. Su simplicidad y eficacia lo convierten en un componente esencial del análisis estadístico y la modelización de datos."
  },
  {
    "objectID": "FIP606-Proyect_CLR4.html",
    "href": "FIP606-Proyect_CLR4.html",
    "title": "FIP606-Proyecto: Interpretación de Resultados",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"Pn_PAT104022.csv\")\n\ndat |&gt;\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCodigo\ndat %&gt;% \n  ggplot(aes(mean_inc, mean_def, size = Pn.Lote., color = Parcela))+\n  geom_point()+ \n  facet_wrap(~Evaluacion)+\n  theme_clean()+\n  theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"top\" ) +\n  ylim(50,80)+\n  xlim(0,50)+\n  scale_color_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs( x= \"% Incidencia\",\n              y = \"% Defoliación\",\n              title = \"Interacción Incidencia-Defoliación-Pn\",subtitle =\"\"\n            )"
  },
  {
    "objectID": "FIP606-Proyect_CLR4.html#preparación-base-de-datos",
    "href": "FIP606-Proyect_CLR4.html#preparación-base-de-datos",
    "title": "FIP606-Proyecto: Interpretación de Resultados",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"Pn_PAT104022.csv\")\n\ndat |&gt;\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCodigo\ndat %&gt;% \n  ggplot(aes(mean_inc, mean_def, size = Pn.Lote., color = Parcela))+\n  geom_point()+ \n  facet_wrap(~Evaluacion)+\n  theme_clean()+\n  theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"top\" ) +\n  ylim(50,80)+\n  xlim(0,50)+\n  scale_color_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs( x= \"% Incidencia\",\n              y = \"% Defoliación\",\n              title = \"Interacción Incidencia-Defoliación-Pn\",subtitle =\"\"\n            )"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n  \n \n \n  \n   \n  \n    \n     Instagram\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Github\n  \n  \n    \n     Email\n  \n\n\n\n!Hola! Soy Gustavo Marín, doctorando en el programa de posgrado en Fitopatología de la Universidad Federal de Viçosa , Brasil. Soy Ingeniero Agrónomo por la Universidad Nacional de Colombia (Palmira) y obtuve mi Maestría en Fitopatología en 2015 en la Universidad Federal de Viçosa. Ahora hago parte del grupo de trabajo en el Laboratorio de genómica y genética de interacciones planta-patógeno coordinado por el profesor Sérgio H. Brommonshenckel.\n\nBienvenidos a mi sitio web\nEste sitio fue creado con mucho entusiasmo utilizando Quarto Markdown para la asignatura FIP606 - Análisis y visualización de datos en Fitopatología, impartida por el profesor Emerson Del Ponte. Aquí encontrarás material de las clases, organizado de manera temática y pensado especialmente para facilitar el aprendizaje.\n\n\n¿Qué encontrarás en este sitio?\n\nMaterial de clase: Documentos, presentaciones y recursos utilizados durante las clases.\nTutoriales en R: Guías paso a paso para el análisis y visualización de datos fitopatológicos utilizando R.\nProyectos y ejemplos: Casos prácticos que te ayudarán a comprender mejor el uso de herramientas de análisis en el campo de la fitopatología.\n\n\n\nExplorando el fascinante mundo del análisis de datos fitopatológicos\nEste sitio está diseñado para principiantes en R y aquellos interesados en el análisis de datos fitopatológicos. A medida que navegues por las diferentes secciones, encontrarás información y recursos que te ayudarán a desarrollar tus habilidades en R y aplicar estos conocimientos a la fitopatología.\n\n\n¡Contáctame!\nSi tienes alguna duda o necesitas más información, no dudes en ponerte en contacto conmigo. Estoy aquí para ayudarte en tu camino de aprendizaje.\n\nExplora, aprende y disfruta del fascinante mundo del análisis de datos fitopatológicos. ¡Bienvenido a bordo!"
  },
  {
    "objectID": "Aula0.html",
    "href": "Aula0.html",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Editar el documento:\n\nEn el archivo Untitled.qmd, puedes comenzar a escribir contenido utilizando Markdown y agregar bloques (chunck) de código R para realizar análisis, generar gráficos y más.\nDentro de cada chunk o bloque de trabajo podemos escrbir cualquier comando y ejecutar con el simblo de play o command + enter\n-inmediatamente el resultado obtenido o la gráfica aparecerá abajo.\n\n\n\n\ncommand + shift + m operador pipe (|&gt; o %&gt;%)\ncommand + option + i nuevo chunk de código interactivos\n\n\n\n\n\n\n\nR puede ser usado como una calculadora básica:\n\n\nCodigo\n# Suma\n2 + 3\n\n\n[1] 5\n\n\nCodigo\n# Resta\n5 - 2\n\n\n[1] 3\n\n\nCodigo\n# Multiplicación\n4 * 3\n\n\n[1] 12\n\n\nCodigo\n# División\n10 / 2\n\n\n[1] 5\n\n\n\n\n\nLas variables son contenedores para almacenar datos. Puedes crear variables usando el símbolo &lt;-.\n\n\nCodigo\n# Asignando valores a variables\nx &lt;- 5\ny &lt;- 10\n\n# Operaciones con variables\nz &lt;- x + y\nz\n\n\n[1] 15\n\n\n\n\n\nR maneja diferentes tipos de datos, incluyendo numéricos, caracteres y lógicos.\n\n\nCodigo\n# Número entero\nnumero &lt;- 10\n\n# Número decimal\ndecimal &lt;- 3.14\n\n# Cadena de caracteres\ntexto &lt;- \"Hola, mundo\"\n\n# Valor lógico\nlogico &lt;- TRUE\n\n\n\n\n\nLas estructuras de datos más comunes en R son vectores, matrices, data frames y listas.\n\n\nUn vector es una secuencia de datos del mismo tipo.\n\n\nCodigo\n# Creando un vector\nnumeros &lt;- c(1, 2, 3, 4, 5)\nnumeros\n\n\n[1] 1 2 3 4 5\n\n\n\n\n\nUna matriz es una colección bidimensional de datos del mismo tipo.\n\n\nCodigo\n# Creando una matriz\nmatriz &lt;- matrix(1:9, nrow = 3, ncol = 3)\nmatriz\n\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\n\n\nUn data frame es una tabla de datos donde cada columna puede contener diferentes tipos de datos.\n\n\nCodigo\n# Creando un data frame\ndata &lt;- data.frame(\n  nombres = c(\"Ana\", \"Luis\", \"Marta\"),\n  edades = c(23, 30, 25)\n)\ndata\n\n\n  nombres edades\n1     Ana     23\n2    Luis     30\n3   Marta     25\n\n\n\n\n\nUna lista puede contener diferentes tipos de datos y estructuras de datos.\n\n\nCodigo\n# Creando una lista\nlista &lt;- list(\n  numeros = numeros,\n  matriz = matriz,\n  data = data\n)\nlista\n\n\n$numeros\n[1] 1 2 3 4 5\n\n$matriz\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n$data\n  nombres edades\n1     Ana     23\n2    Luis     30\n3   Marta     25\n\n\n\n\n\n\n\nR tiene una vasta colección de paquetes que extienden su funcionalidad. Puedes instalar y cargar paquetes con las funciones install.packages() y library().\n\n\n\n\nCodigo\n# Instalando el paquete ggplot2 para visualización de datos\n#install.packages(\"ggplot2\")\n\n\n\n\n\n\n\nCodigo\n# Cargando el paquete ggplot2\nlibrary(ggplot2)\n\n\n\nggplot2: Esta librería es parte del tidyverse y se utiliza para crear gráficos de alta calidad y altamente personalizables. Facilita la creación de una amplia variedad de gráficos, desde gráficos de dispersión hasta gráficos de barras, utilizando una gramática de gráficos coherente.\n\n\n\n\n\n\n\nUsaremos el paquete ggplot2 para crear un gráfico sencillo.\n\n\nCodigo\n# Cargando el paquete ggplot2\nlibrary(ggplot2)\n\n# Creando un data frame\ndata &lt;- data.frame(\n  x = c(1, 2, 3, 4, 5),\n  y = c(2, 4, 6, 8, 10)\n)\n\n# Creando un gráfico de puntos\nggplot(data, aes(x = x, y = y)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\n\n\nEsta guía cubre los fundamentos básicos de R. Con práctica y exploración, te familiarizarás más con el lenguaje y sus capacidades. ¡Buena suerte en tu viaje de aprendizaje con R!"
  },
  {
    "objectID": "Aula0.html#empezando-con-r-en-este-enlace",
    "href": "Aula0.html#empezando-con-r-en-este-enlace",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "R puede ser usado como una calculadora básica:\n\n\nCodigo\n# Suma\n2 + 3\n\n\n[1] 5\n\n\nCodigo\n# Resta\n5 - 2\n\n\n[1] 3\n\n\nCodigo\n# Multiplicación\n4 * 3\n\n\n[1] 12\n\n\nCodigo\n# División\n10 / 2\n\n\n[1] 5\n\n\n\n\n\nLas variables son contenedores para almacenar datos. Puedes crear variables usando el símbolo &lt;-.\n\n\nCodigo\n# Asignando valores a variables\nx &lt;- 5\ny &lt;- 10\n\n# Operaciones con variables\nz &lt;- x + y\nz\n\n\n[1] 15\n\n\n\n\n\nR maneja diferentes tipos de datos, incluyendo numéricos, caracteres y lógicos.\n\n\nCodigo\n# Número entero\nnumero &lt;- 10\n\n# Número decimal\ndecimal &lt;- 3.14\n\n# Cadena de caracteres\ntexto &lt;- \"Hola, mundo\"\n\n# Valor lógico\nlogico &lt;- TRUE\n\n\n\n\n\nLas estructuras de datos más comunes en R son vectores, matrices, data frames y listas.\n\n\nUn vector es una secuencia de datos del mismo tipo.\n\n\nCodigo\n# Creando un vector\nnumeros &lt;- c(1, 2, 3, 4, 5)\nnumeros\n\n\n[1] 1 2 3 4 5\n\n\n\n\n\nUna matriz es una colección bidimensional de datos del mismo tipo.\n\n\nCodigo\n# Creando una matriz\nmatriz &lt;- matrix(1:9, nrow = 3, ncol = 3)\nmatriz\n\n\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n\n\n\n\nUn data frame es una tabla de datos donde cada columna puede contener diferentes tipos de datos.\n\n\nCodigo\n# Creando un data frame\ndata &lt;- data.frame(\n  nombres = c(\"Ana\", \"Luis\", \"Marta\"),\n  edades = c(23, 30, 25)\n)\ndata\n\n\n  nombres edades\n1     Ana     23\n2    Luis     30\n3   Marta     25\n\n\n\n\n\nUna lista puede contener diferentes tipos de datos y estructuras de datos.\n\n\nCodigo\n# Creando una lista\nlista &lt;- list(\n  numeros = numeros,\n  matriz = matriz,\n  data = data\n)\nlista\n\n\n$numeros\n[1] 1 2 3 4 5\n\n$matriz\n     [,1] [,2] [,3]\n[1,]    1    4    7\n[2,]    2    5    8\n[3,]    3    6    9\n\n$data\n  nombres edades\n1     Ana     23\n2    Luis     30\n3   Marta     25"
  },
  {
    "objectID": "Aula0.html#trabajando-con-paquetes",
    "href": "Aula0.html#trabajando-con-paquetes",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "R tiene una vasta colección de paquetes que extienden su funcionalidad. Puedes instalar y cargar paquetes con las funciones install.packages() y library().\n\n\n\n\nCodigo\n# Instalando el paquete ggplot2 para visualización de datos\n#install.packages(\"ggplot2\")\n\n\n\n\n\n\n\nCodigo\n# Cargando el paquete ggplot2\nlibrary(ggplot2)\n\n\n\nggplot2: Esta librería es parte del tidyverse y se utiliza para crear gráficos de alta calidad y altamente personalizables. Facilita la creación de una amplia variedad de gráficos, desde gráficos de dispersión hasta gráficos de barras, utilizando una gramática de gráficos coherente."
  },
  {
    "objectID": "Aula0.html#visualización-de-datos",
    "href": "Aula0.html#visualización-de-datos",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Usaremos el paquete ggplot2 para crear un gráfico sencillo.\n\n\nCodigo\n# Cargando el paquete ggplot2\nlibrary(ggplot2)\n\n# Creando un data frame\ndata &lt;- data.frame(\n  x = c(1, 2, 3, 4, 5),\n  y = c(2, 4, 6, 8, 10)\n)\n\n# Creando un gráfico de puntos\nggplot(data, aes(x = x, y = y)) +\n  geom_point()"
  },
  {
    "objectID": "Aula0.html#aprendizaje-del-día",
    "href": "Aula0.html#aprendizaje-del-día",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Esta guía cubre los fundamentos básicos de R. Con práctica y exploración, te familiarizarás más con el lenguaje y sus capacidades. ¡Buena suerte en tu viaje de aprendizaje con R!"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html",
    "href": "FIP606-Proyect_CLR2.html",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\n\nCodigo\nDB_original &lt;- read_excel(\"DB_floración_01.xlsx\")\n\n# Convertir la columna de fecha a formato POSIXct\nDB_original$Fecha &lt;- as.POSIXct(DB_original$Fecha, format = \"%Y-%m-%dT%H:%M:%SZ\", tz = \"UTC\") \n  \n# Convertir la columna de fecha a factor\nDB_original$Fecha &lt;- as.factor(DB_original$Fecha)\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))  \n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Seleccionar las columnas cuyo encabezado comienza con \"S\"\nHojas_Roya &lt;- DB_original |&gt;  \n          select(starts_with(\"S\"))\n\n# Convertir las columnas seleccionadas a numéricas\nHojas_Roya&lt;- Hojas_Roya |&gt; \n              mutate(across(everything(), as.numeric))\n\n# Crear una nueva columna que cuente cuántas columnas \"S\" tienen valores (no NA)\nDB_original$Hojas_Roya &lt;- rowSums(!is.na(Hojas_Roya))\n\n# Crear una nueva columna que sume los valores de las columnas \"S\" por fila\nDB_original$Severidad_total &lt;- rowSums(Hojas_Roya, na.rm = TRUE)\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))     \n\n\n\n\n\n\n\n\n\nUsar la funcion Mutate para crear nuevas columnas para crear una categoria para agrupar los arboles por tratamiento\n\n\nCodigo\n# Asignar nombres en función del rango de la columna Arbol\nDB_original &lt;- DB_original %&gt;%\n                  mutate(Parcela = case_when(\n                    Arbol &gt;= 1 & Arbol &lt;= 80 ~ \"Tto Fungicida\",\n                    Arbol &gt;= 81 & Arbol &lt;= 160 ~ \"Tto Nuevo\",\n                    Arbol &gt;= 161 & Arbol &lt;= 240 ~ \"Tto Testigo SA\",\n                    TRUE ~ NA_character_  # Asignar NA para valores fuera de los rangos especificados\n                  ))\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))    \n\n\n\n\n\n\n\n\n\n\n\nCodigo\nDB_original &lt;- DB_original |&gt; \n                  mutate(Incidencia = ((Nudos*2)/Hojas_Roya),\n                         Severidad = (Severidad_total/Hojas_Roya),\n                         Defoliacion = ( 100-((HP*100) / (Nudos*2))))\n\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\"))) \n\n\n\n\n\n\n\n\n\n\n\nCodigo\nDB_analisis &lt;-DB_original |&gt; \n                  select(Fecha,Parcela,Arbol,Rama,Nudos,Incidencia,Severidad,Defoliacion)\n\nDB_analisis |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))  |&gt; \n                            formatRound(c('Incidencia','Severidad','Defoliacion'), 2)\n\n\n\n\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"DB_PAT104022.csv\")\n\ndat |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)\n\n\n\n\n\n\nUso de la funcion select para convertir una tabla resumida\n\n\nCodigo\nCLR_ &lt;-dat |&gt; \n      select(Evaluacion,Time_,Time_E,Eva_E,Eva_,Parcela,Surco,Arbol_1,Arbol,Rep,Htotal,Inc_promedio,Def_calculada,Severidad,Sev_condicional)\n\nCLR_ |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html#preparación-base-de-datos",
    "href": "FIP606-Proyect_CLR2.html#preparación-base-de-datos",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\n\nCodigo\nDB_original &lt;- read_excel(\"DB_floración_01.xlsx\")\n\n# Convertir la columna de fecha a formato POSIXct\nDB_original$Fecha &lt;- as.POSIXct(DB_original$Fecha, format = \"%Y-%m-%dT%H:%M:%SZ\", tz = \"UTC\") \n  \n# Convertir la columna de fecha a factor\nDB_original$Fecha &lt;- as.factor(DB_original$Fecha)\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))  \n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Seleccionar las columnas cuyo encabezado comienza con \"S\"\nHojas_Roya &lt;- DB_original |&gt;  \n          select(starts_with(\"S\"))\n\n# Convertir las columnas seleccionadas a numéricas\nHojas_Roya&lt;- Hojas_Roya |&gt; \n              mutate(across(everything(), as.numeric))\n\n# Crear una nueva columna que cuente cuántas columnas \"S\" tienen valores (no NA)\nDB_original$Hojas_Roya &lt;- rowSums(!is.na(Hojas_Roya))\n\n# Crear una nueva columna que sume los valores de las columnas \"S\" por fila\nDB_original$Severidad_total &lt;- rowSums(Hojas_Roya, na.rm = TRUE)\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))     \n\n\n\n\n\n\n\n\n\nUsar la funcion Mutate para crear nuevas columnas para crear una categoria para agrupar los arboles por tratamiento\n\n\nCodigo\n# Asignar nombres en función del rango de la columna Arbol\nDB_original &lt;- DB_original %&gt;%\n                  mutate(Parcela = case_when(\n                    Arbol &gt;= 1 & Arbol &lt;= 80 ~ \"Tto Fungicida\",\n                    Arbol &gt;= 81 & Arbol &lt;= 160 ~ \"Tto Nuevo\",\n                    Arbol &gt;= 161 & Arbol &lt;= 240 ~ \"Tto Testigo SA\",\n                    TRUE ~ NA_character_  # Asignar NA para valores fuera de los rangos especificados\n                  ))\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))    \n\n\n\n\n\n\n\n\n\n\n\nCodigo\nDB_original &lt;- DB_original |&gt; \n                  mutate(Incidencia = ((Nudos*2)/Hojas_Roya),\n                         Severidad = (Severidad_total/Hojas_Roya),\n                         Defoliacion = ( 100-((HP*100) / (Nudos*2))))\n\n\n\nDB_original |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\"))) \n\n\n\n\n\n\n\n\n\n\n\nCodigo\nDB_analisis &lt;-DB_original |&gt; \n                  select(Fecha,Parcela,Arbol,Rama,Nudos,Incidencia,Severidad,Defoliacion)\n\nDB_analisis |&gt; \n            DT::datatable(\n            extensions = 'Buttons', \n            options = list(dom = 'Bfrtip', \n            buttons = c('excel', \"csv\")))  |&gt; \n                            formatRound(c('Incidencia','Severidad','Defoliacion'), 2)\n\n\n\n\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"DB_PAT104022.csv\")\n\ndat |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)\n\n\n\n\n\n\nUso de la funcion select para convertir una tabla resumida\n\n\nCodigo\nCLR_ &lt;-dat |&gt; \n      select(Evaluacion,Time_,Time_E,Eva_E,Eva_,Parcela,Surco,Arbol_1,Arbol,Rep,Htotal,Inc_promedio,Def_calculada,Severidad,Sev_condicional)\n\nCLR_ |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html#evaluaciones",
    "href": "FIP606-Proyect_CLR2.html#evaluaciones",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "Evaluaciones",
    "text": "Evaluaciones\n\nEvaluacion 1 = (Mitaca_2021) Historico Sep/21\nEvaluacion 2 = (Principal_2022) Feb/22\nEvaluacion 3 = (Mitaca_2022) Floración Sep/22"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html#tratamientos",
    "href": "FIP606-Proyect_CLR2.html#tratamientos",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "Tratamientos",
    "text": "Tratamientos\n\nParcela =\n\n1-Tto Fungicida\n2- Tto Fungicida Nuevo\n3- Tto Testigo SA (Sin aplicación)"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html#variables",
    "href": "FIP606-Proyect_CLR2.html#variables",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "Variables",
    "text": "Variables\n\nArbol= 1- 80\nRep= 1-3\nNudos = Número de nudos totales\nHtotal = Número de hojas totales presentes\nHtotal_t= Número de hojas totales teóricas (Nudos X 2)\nInc_promedio = Porcentaje de hojas afectados por roya\nDef_calculada = Porcentaje de hojas faltantes en cada rama a partir de la marcación inicial y su conteo progresivo\nSev_total = Sumatoria de valores de severidad de todas las hojas afectadas por la enfermedad\nSeveridad = Proporcion de severidad total (sev_total) / Número de hojas totales presentes (Htotal)\nSev_condicional = Proporcion de severidad total (sev_total) / Número de hojas afectadas por la enfermedad (Hroya)\nTx_Def = (% de hojas que caen/día) = 0.0144 x incidencia"
  },
  {
    "objectID": "FIP606-Proyect_CLR2.html#análisis-exploratorios",
    "href": "FIP606-Proyect_CLR2.html#análisis-exploratorios",
    "title": "FIP606-Proyecto: Análisis Exploratorio",
    "section": "Análisis Exploratorios",
    "text": "Análisis Exploratorios\n\nVisualización de Datos\nEvaluación por fecha\n\nComportamiento de las variables evaluadas sobre cada parcela en cada parcela de validación a través del tiempo.\n\nDatabase\n\n\n\nCodigo\ndat_ave&lt;- CLR_ |&gt; \n             group_by(Evaluacion,Time_,Time_E,Eva_E,Eva_,Parcela,Surco,Arbol_1,Arbol)|&gt; \n             summarize(\n              Htotal= mean(Htotal,na.rm=TRUE),\n              Incidencia = mean(Inc_promedio,na.rm=TRUE),\n              Severidad = mean(Severidad,na.rm=TRUE), \n              Defoliacion = mean(Def_calculada,na.rm=TRUE))\n\ndat_ave %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))%&gt;%\n                        formatRound(c('Htotal','Incidencia','Severidad','Defoliacion'), 2)\n\n\n\n\n\n\n\nEvaluación (Tiempo)\n\n\n\nCodigo\nIncidencia&lt;-dat_ave %&gt;%\n                ggplot(aes(Arbol_1,Surco,label = Arbol))+\n                geom_point(size = 5,shape=10,stroke = 1)+\n                geom_point(size = 5,alpha=1, aes(colour= Incidencia))+\n                scale_colour_distiller(palette =  \"Spectral\",direction = -1,limits = c(0,100)) +\n                 scale_y_discrete(limits=c(\"J\",\"I\",\"H\",\"G\",\"F\",\"E\",\"D\",\"C\",\"B\",\"A\"))+\n                scale_x_discrete(limits=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"),guide = guide_axis(position = \"top\")) +\n                 facet_wrap(Parcela~Time_,ncol=9) +\n                theme_clean() +\n                theme(axis.text.x=element_blank(), #remove x axis labels\n                      axis.ticks.x=element_blank(), #remove x axis ticks\n                      axis.text.y=element_blank(),  #remove y axis labels\n                      axis.ticks.y=element_blank(),  #remove y axis ticks\n                      legend.title = element_text( face=\"bold\",size = 20),\n                      strip.text = element_text(size =15,face = \"bold\"),\n                      plot.title = element_text(size =30,face=\"bold\"),\n                      plot.subtitle = element_text(size = 20),\n                      plot.background = element_rect(colour = \"white\"),\n                    legend.background = element_rect(colour = \"white\"),\n                    legend.text = element_text(size = 15,face = c(rep(\"italic\", 2), rep(\"plain\", 2))),legend.position = \"none\") +\n                geom_text(size = 3,alpha=.9)+\n                labs(title = \"A.Evaluación de Incidencia\",x=\"Tiempo (ddfp)\",y=\"Parcelas (Tratamientos)\",\n                     subtitle =\"\",caption =\"\")\n\nIncidencia\n\n\n\n\n\n\n\n\n\n\n\nCodigo\nSeveridad&lt;-dat_ave  %&gt;%\n            ggplot(aes(Arbol_1,Surco,label = Arbol))+\n            geom_point(size = 5,shape=10,stroke = 1)+\n            geom_point(size = 5,alpha=1, aes(colour= Severidad))+\n            scale_colour_distiller(palette =  \"Spectral\",direction = -1,limits = c(0,5)) +\n             scale_y_discrete(limits=c(\"J\",\"I\",\"H\",\"G\",\"F\",\"E\",\"D\",\"C\",\"B\",\"A\"))+\n            scale_x_discrete(limits=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"),guide = guide_axis(position = \"top\")) +\n             facet_wrap(Parcela~Time_,ncol=9) +\n            theme_clean() +\n            theme(axis.text.x=element_blank(), #remove x axis labels\n                      axis.ticks.x=element_blank(), #remove x axis ticks\n                      axis.text.y=element_blank(),  #remove y axis labels\n                      axis.ticks.y=element_blank(),  #remove y axis ticks\n                      legend.title = element_text( face=\"bold\",size = 20),\n                      strip.text = element_text(size =15,face = \"bold\"),\n                      plot.title = element_text(size =30,face=\"bold\"),\n                      plot.subtitle = element_text(size = 20),\n                      plot.background = element_rect(colour = \"white\"),\n                    legend.background = element_rect(colour = \"white\"),\n                    legend.text = element_text(size = 15,face = c(rep(\"italic\", 2), rep(\"plain\", 2))),legend.position = \"none\") +\n                geom_text(size = 3,alpha=.9)+\n                labs(title = \"A.Evaluación de Severidad\",x=\"Tiempo (ddfp)\",y=\"Parcelas (Tratamientos)\",\n                     subtitle =\"\",caption =\"\")\n\n\nSeveridad\n\n\n\n\n\n\n\n\n\n\n\nCodigo\nDefoliacion&lt;-dat_ave  %&gt;%\n            ggplot(aes(Arbol_1,Surco,label = Arbol))+\n            geom_point(size = 5,shape=10,stroke = 1)+\n            geom_point(size = 5,alpha=1, aes(colour= Defoliacion))+\n            scale_colour_distiller(palette =  \"Spectral\",direction = -1,limits = c(0,100)) +\n             scale_y_discrete(limits=c(\"J\",\"I\",\"H\",\"G\",\"F\",\"E\",\"D\",\"C\",\"B\",\"A\"))+\n            scale_x_discrete(limits=c(\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"),guide = guide_axis(position = \"top\")) +\n             facet_wrap(Parcela~Time_,ncol=9) +\n            theme_clean() +\n            theme(axis.text.x=element_blank(), #remove x axis labels\n                      axis.ticks.x=element_blank(), #remove x axis ticks\n                      axis.text.y=element_blank(),  #remove y axis labels\n                      axis.ticks.y=element_blank(),  #remove y axis ticks\n                      legend.title = element_text( face=\"bold\",size = 20),\n                      strip.text = element_text(size =15,face = \"bold\"),\n                      plot.title = element_text(size =30,face=\"bold\"),\n                      plot.subtitle = element_text(size = 20),\n                      plot.background = element_rect(colour = \"white\"),\n                    legend.background = element_rect(colour = \"white\"),\n                    legend.text = element_text(size = 15,face = c(rep(\"italic\", 2), rep(\"plain\", 2))),legend.position = \"none\") +\n                geom_text(size = 3,alpha=.9)+\n                labs(title = \"A.Evaluación de Defoliación\",x=\"Tiempo (ddfp)\",y=\"Parcelas (Tratamientos)\",\n                     subtitle =\"\",caption =\"\")\n\nDefoliacion\n\n\n\n\n\n\n\n\n\n\nEvaluación (Dinámica)\n\n\n\nCodigo\nPlot1a&lt;-dat %&gt;%\n            group_by(Time_,Parcela)%&gt;%\n            summarise(Incidencia=mean(Inc_promedio,na.rm=TRUE),sd=sd(Inc_promedio,na.rm=TRUE))%&gt;%\n            mutate( se = sd / sqrt(length(Incidencia)))%&gt;% \n            ggplot(aes(Time_,Incidencia, fill  = Parcela, group= Parcela)) +\n            geom_rect(aes(xmin = 120 , xmax = 210, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_rect(aes(xmin = 280 , xmax = 370, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_area(position=position_identity(),alpha= 0.5)+\n            geom_errorbar(aes(ymin=Incidencia-se, ymax=Incidencia+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+\n            geom_hline(yintercept=15,linetype=\"dashed\", color = \"blue\",size=1) +\n            facet_wrap(~Parcela,ncol =3) +\n            theme_clean() +\n            theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10,angle = 90),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" )  +\n            scale_fill_manual(values = c( \"Tto Fungicida\"=\"#669933\", \"Tto Nuevo\"=\"#FFCC66\",\"Tto Testigo SA\"=\"#990000\"))+ \n             scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+\n            ylim(-5, 100) +\n            labs(\n              fill = \"Tratamiento\", x = \"Días de Evaluación (ddfp)\",\n              y = \"% Incidencia\",\n              title = \"A. Dinámica Incidencia\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nPlot2a&lt;-dat %&gt;%\n            group_by(Time_,Parcela)%&gt;%\n            summarise(Severidad=mean(Sev_condicional,na.rm=TRUE),sd=sd(Sev_condicional,na.rm=TRUE))%&gt;%\n            mutate( se = sd / sqrt(length(Severidad)))%&gt;% \n            ggplot(aes(Time_,Severidad, fill  = Parcela, group= Parcela)) +\n            geom_rect(aes(xmin = 120 , xmax = 210, ymin = 0, ymax =7),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_rect(aes(xmin = 280 , xmax = 370, ymin = 0, ymax =7),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_area(position=position_identity(),alpha= 0.5)+\n            geom_errorbar(aes(ymin=Severidad-se, ymax=Severidad+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+\n            geom_hline(yintercept=2,linetype=\"dashed\", color = \"blue\",size=1) +\n            facet_wrap(~Parcela,ncol =3) +\n            theme_clean() +\n            theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10,angle = 90),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" )  +\n            scale_fill_manual(values = c( \"Tto Fungicida\"=\"#669933\", \"Tto Nuevo\"=\"#FFCC66\",\"Tto Testigo SA\"=\"#990000\"))+ \n            scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+\n            ylim(-1, 7) +\n            labs(\n              fill = \"Tratamiento\", x = \"Días de Evaluación (ddfp)\",\n              y = \"% Severidad\",\n              title = \"B. Dinámica Severidad\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nPlot3a&lt;-dat %&gt;%\n            group_by(Time_,Parcela)%&gt;%\n            summarise(Defoliacion= median(Def_calculada,na.rm=TRUE),sd=sd(Def_calculada,na.rm=TRUE))%&gt;%\n            mutate( se = sd / sqrt(length(Defoliacion)))%&gt;% \n            ggplot(aes(Time_,Defoliacion, fill  = Parcela, group= Parcela)) +\n            geom_rect(aes(xmin = 120 , xmax = 210, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_rect(aes(xmin = 280 , xmax = 370, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha= 0.1) +\n            geom_area(position=position_identity(),alpha= 0.5)+\n            geom_errorbar(aes(ymin=Defoliacion-se, ymax=Defoliacion+se), width=0.4, alpha=0.9, size=.8,position=position_dodge(0.05))+\n            geom_hline(yintercept=50,linetype=\"dashed\", color = \"blue\",size=1) +\n            facet_wrap(~Parcela,ncol =3) +\n            theme_clean() +\n            theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10,angle = 90),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" )  +\n            scale_fill_manual(values = c( \"Tto Fungicida\"=\"#669933\", \"Tto Nuevo\"=\"#FFCC66\",\"Tto Testigo SA\"=\"#990000\"))+ \n            scale_x_continuous(breaks=c(0,30,60,90,120,150,180,210,240,270,300,330,360,390,420,450))+\n            ylim(0, 100) +\n            labs(\n              fill = \"Tratamiento\", x = \"Días de Evaluación (ddfp)\",\n              y = \"% Defoliación\",\n              title = \"C. Dinamica Defoliación\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nPlot_Lote&lt;- (Plot1a + Plot2a + Plot3a +  plot_layout(ncol = 1))\nPlot_Lote\n\n\n\n\n\n\n\n\n\nCodigo\n#ggexport(Plot_Lote,filename = \"Fig1_MQR104024_Dinamic-_lote_full.pdf\", width = 25 , height = 15)\n\n\n\nDispersión (Incidencia)\n\n\n\nCodigo\nlibrary(ggthemes)\n\ndat_ave |&gt;\n  ggplot(aes(Eva_, Incidencia, color = Parcela))+\n  geom_rect(aes(xmin = 4 , xmax = 7, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha = 0.3,color = NA) +\n  geom_rect(aes(xmin = 9 , xmax = 12, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha = 0.3,color = NA) +\n  geom_jitter(size=2,alpha=0.3)+\n  geom_hline(yintercept=30,linetype=\"dashed\", color = \"blue\",size=1) +\n  stat_summary(fun.data = mean_se,size=.2,\n               color = \"black\")+\n  theme_clean()+\n  theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n  scale_color_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n  facet_wrap(~Parcela, nrow = 3,)+\n  ylim(0,100)+\n  scale_x_continuous(breaks = seq(from = 1, to = 15, by = 1))+\n  labs(\n              x = \"Evaluaciónes\",\n              y = \"% Incidencia\",\n              title = \"A. Dispersión Incidencia\",subtitle =\"\"\n            )\n\n\n\n\n\n\n\n\n\n\nDispersión (Severidad)\n\n\n\nCodigo\ndat_ave |&gt;\n  ggplot(aes(Eva_, Severidad, color = Parcela))+\n  geom_rect(aes(xmin = 4 , xmax = 7, ymin = 0, ymax =10),fill = \"#f7d8d8\",alpha = 0.1,color = NA) +\n  geom_rect(aes(xmin = 9 , xmax = 12, ymin = 0, ymax =10),fill = \"#f7d8d8\",alpha = 0.1,color = NA) +\n  geom_jitter(size=2,alpha=0.3)+\n  geom_hline(yintercept=5,linetype=\"dashed\", color = \"blue\",size=1) +\n  stat_summary(fun.data = mean_se,size=.2,\n               color = \"black\")+\n  theme_clean()+\n  theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n  scale_color_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n  facet_wrap(~Parcela, nrow = 3,)+\n  ylim(0,10)+\n  scale_x_continuous(breaks = seq(from = 1, to = 15, by = 1))+\n  labs(\n              x = \"Evaluaciónes\",\n              y = \"% Severidad\",\n              title = \"B. Dispersión Severidad\",subtitle =\"\"\n            )\n\n\n\n\n\n\n\n\n\n\nDispersión (Defoliación)\n\n\n\nCodigo\ndat_ave |&gt;\n  ggplot(aes(Eva_, Defoliacion, color = Parcela))+\n  geom_rect(aes(xmin = 4 , xmax = 7, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha = 0.1,color = NA) +\n  geom_rect(aes(xmin = 9 , xmax = 12, ymin = 0, ymax =100),fill = \"#f7d8d8\",alpha = 0.1,color = NA) +\n  geom_jitter(size=2,alpha=0.3)+\n  geom_hline(yintercept=50,linetype=\"dashed\", color = \"blue\",size=1) +\n  stat_summary(fun.data = mean_se,size=.2,\n               color = \"black\")+\n  theme_clean()+\n  theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n  scale_color_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n  facet_wrap(~Parcela, nrow = 3,)+\n  ylim(0,100)+\n  scale_x_continuous(breaks = seq(from = 1, to = 15, by = 1))+\n  labs(\n              x = \"Evaluaciónes\",\n              y = \"% Defoliación\",\n              title = \"C. Dispersión Defoliación\",subtitle =\"\"\n            )\n\n\n\n\n\n\n\n\n\n\nDescriptiva Incidencia (Periodo Critico)\n\n\n\nCodigo\nCLR_descriptivas_inc &lt;-dat_ave |&gt;\n                          filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;   \n                          group_by(Parcela,Evaluacion) |&gt; \n                          summarise(\n                            mean_inc = mean(Incidencia,na.rm=TRUE),\n                            sd_inc = sd(Incidencia,na.rm=TRUE),\n                            var_inc = var(Incidencia,na.rm=TRUE),\n                            n = n(),\n                            se_inc = sd_inc / sqrt(n - 1),\n                            ci = se_inc * qt(0.05, df = n - 1)\n                          )\n\n\nCLR_descriptivas_inc |&gt; \n                    DT::datatable(\n                    extensions = 'Buttons', \n                    options = list(dom = 'Bfrtip', \n                     buttons = c('excel', \"csv\"))) |&gt; \n                    formatRound(c('mean_inc', 'sd_inc', 'var_inc','se_inc','ci'), 2)\n\n\n\n\n\n\n\nDescriptiva Severidad (Periodo Critico)\n\n\n\nCodigo\nCLR_descriptivas_sev &lt;-dat_ave |&gt;\n                          filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;   \n                          group_by(Parcela,Evaluacion) |&gt; \n                          summarise(\n                            mean_sev = mean(Severidad,na.rm=TRUE),\n                            sd_sev = sd(Severidad,na.rm=TRUE),\n                            var_sev = var(Severidad,na.rm=TRUE),\n                            n = n(),\n                            se_sev = sd_sev / sqrt(n - 1),\n                            ci = se_sev * qt(0.05, df = n - 1)\n                          )\n\n\nCLR_descriptivas_sev |&gt; \n                    DT::datatable(\n                    extensions = 'Buttons', \n                    options = list(dom = 'Bfrtip', \n                     buttons = c('excel', \"csv\"))) |&gt; \n                    formatRound(c('mean_sev', 'sd_sev', 'var_sev','se_sev','ci'), 2)\n\n\n\n\n\n\n\nDescriptiva Defoliación(Periodo Critico)\n\n\n\nCodigo\nCLR_descriptivas_def &lt;-dat_ave |&gt;\n                          filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;   \n                          group_by(Parcela,Evaluacion) |&gt; \n                          summarise(\n                            mean_def = mean(Defoliacion,na.rm=TRUE),\n                            sd_def = sd(Defoliacion,na.rm=TRUE),\n                            var_def = var(Defoliacion,na.rm=TRUE),\n                            n = n(),\n                            se_def = sd_def / sqrt(n - 1),\n                            ci = se_def * qt(0.05, df = n - 1)\n                          )\n\n\nCLR_descriptivas_def |&gt; \n                    DT::datatable(\n                    extensions = 'Buttons', \n                    options = list(dom = 'Bfrtip', \n                     buttons = c('excel', \"csv\"))) |&gt; \n                    formatRound(c('mean_def', 'sd_def', 'var_def','se_def','ci'), 2)\n\n\n\n\n\n\n\n\nCodigo\nCLR_inc &lt;-CLR_  |&gt;\n              filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;\n              group_by(Arbol) |&gt; \n              ggplot(aes(Parcela, Inc_promedio, fill = Parcela)) +\n              geom_boxplot(alpha = .5)+\n              stat_summary(fun.data = \"mean_se\",colour = \"red\")+\n              facet_wrap(~Evaluacion)+\n              theme_clean()+\n              theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n              scale_fill_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs(\n              y = \"% Incidencia\",\n              title = \"A. Boxplot Incidencia\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nCLR_sev &lt;-CLR_  |&gt;\n              filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;\n              group_by(Arbol) |&gt; \n              ggplot(aes(Parcela, Sev_condicional, fill = Parcela)) +\n              geom_boxplot(alpha = .5)+\n              stat_summary(fun.data = \"mean_se\",colour = \"red\")+\n              facet_wrap(~Evaluacion)+\n              theme_clean()+\n              theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n              scale_fill_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs(\n              y = \"% Severidad\",\n              title = \"B. Boxplot Severidad\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nCLR_def &lt;-CLR_  |&gt;\n              filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12)) |&gt;\n              group_by(Arbol) |&gt; \n              ggplot(aes(Parcela, Def_calculada, fill = Parcela)) +\n              geom_boxplot(alpha = .5)+\n              stat_summary(fun.data = \"mean_se\",colour = \"red\")+\n              facet_wrap(~Evaluacion)+\n              theme_clean()+\n              theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n              scale_fill_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs(\n              y = \"% Defoliaci\",\n              title = \"C. Boxplot Defoliación\",subtitle =\"\"\n            )\n\n\n\n\nCodigo\nPlot_Boxplot&lt;- (CLR_inc + CLR_sev + CLR_def +  plot_layout(ncol = 1))\nPlot_Boxplot\n\n\n\n\n\n\n\n\n\nCodigo\n#ggexport(Plot_Lote,filename = \"Fig1_MQR104024_Dinamic-_lote_full.pdf\", width = 25 , height = 15)\n\n\nAnalysis carried out in the FIP606 Copyrigth Gustavo Marin / Gabriela Rivadeneira © 2024\nいいですか、私たちの神は主おひとりです。\nº"
  },
  {
    "objectID": "Aula18.html",
    "href": "Aula18.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source\n\n\n\n\n\nTransformación de Variable Tipo Box-Cox en R Quarto\nLa transformación de variable tipo Box-Cox es una técnica utilizada en análisis estadístico para mejorar la adecuación de los datos a los supuestos de normalidad y homogeneidad de varianza. Esta transformación es especialmente útil para variables continuas positivas que presentan asimetría o heterogeneidad de varianza. La transformación de Box-Cox se define mediante la siguiente ecuación:\n                    y ( λ ) = (x^(λ) - 1) / λ \nDonde:\n\nλ es lambda.\nx es la variable original.\ny(λ) es la variable transformada para un valor determinado de λ.\nλ es el parámetro de transformación que puede variar desde -∞ hasta +∞.\n\nEl valor de λ determina el tipo de transformación aplicada:\n\nSi λ = 0 , la transformación de Box-Cox es equivalente al logaritmo natural (ln).\nSi λ = 1 , la transformación de Box-Cox es equivalente a una transformación lineal (sin transformación).\nSi λ &lt; 0 , se aplica una transformación inversa.\n\n\n\nPreparo Pre-análisis\nPara realizar este tipo de transformación, se utiliza el paquete MASS en R.\n\n\nCodigo\nlibrary(MASS)\nlibrary(ggthemes)\nlibrary(ggplot2)\n\n\n\n\nEjemplo con Datos: InsectSprays\nUtilizaremos el conjunto de datos InsectSprays disponible en R para ilustrar la transformación de Box-Cox. La función boxcox() se utiliza para calcular la transformación de Box-Cox y encontrar el valor óptimo de λ para una variable específica. Esta función devuelve una lista de resultados, incluyendo el valor óptimo de λ y gráficos de diagnóstico.\n\n\n1. Cargar los datos de InsectSprays:\n\n\nCodigo\ninsects &lt;- InsectSprays\n\n\n\n\n2. Aplicar la transformación de Box-Cox:\nPrimero, se ajusta un modelo lineal simple para la variable count con un ajuste adicional de 0.1 para evitar valores cero.\n\n\nCodigo\nb &lt;- boxcox(lm(insects$count + 0.1 ~ 1))\n\n\n\n\n\n\n\n\n\n\n\n3. Encontrar el valor óptimo de λ:\nEl valor óptimo de λ se encuentra seleccionando el valor de λ que maximiza la log-verosimilitud devuelta por boxcox().\n\n\nCodigo\nlambda &lt;- b$x[which.max(b$y)]\nlambda\n\n\n[1] 0.4242424\n\n\n\n\nCodigo\n# Crear DataFrame a partir de los resultados de boxcox\nboxcox_df &lt;- data.frame(\n  lambda = b$x,\n  log_likelihood = b$y\n)\n\n# Graficar con ggplot2\nggplot(boxcox_df, aes(x = lambda, y = log_likelihood)) +\n  geom_line(color = \"blue\", size = 1) +\n  geom_vline(xintercept = lambda, linetype = \"dashed\", color = \"red\") +\n  geom_point(aes(x = lambda, y = max(log_likelihood)), color = \"red\", size = 1) +\n  annotate(\"text\", x = lambda + 0.2, y = -130,\n           label = paste(\"Lambda =\", round(lambda, 3)),color = \"black\") +\n  labs(title = \"Transformación de Box-Cox\",\n       x = \"λ Lambda\",\n       y = \"Log-Verosimilitud\") +\n  theme_few()+\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\n    axis.title = element_text(face = \"bold\", size = 12),\n    axis.text = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\n4. Transformar la variable count:\nUtilizando el valor óptimo de λ, se transforma la variable count y se almacena en una nueva variable count2.\n\n\nCodigo\ninsects$count2 &lt;- (insects$count ^ lambda - 1) / lambda\n\n\n\n\n5. Visualizar la distribución antes y después de la transformación:\nSe crean histogramas para comparar la distribución de la variable original y la transformada.\n\n\nCodigo\npar(mfrow = c(1, 2))  # Dividir la ventana gráfica en 2 columnas\nhist(insects$count, main = \"'Count' Original\", xlab = \"count\")\nhist(insects$count2, main = \" 'Count' Transformado\", xlab = \"count2\")\n\n\n\n\n\n\n\n\n\n\n\nAprendizaje del día\nLa transformación de Box-Cox es una herramienta útil para transformar datos y cumplir con los supuestos de normalidad y homogeneidad de varianza necesarios en muchos métodos estadísticos. Mediante el ajuste del parámetro λ, se pueden lograr distribuciones de datos más simétricas y con varianza constante, facilitando análisis más precisos y válidos."
  },
  {
    "objectID": "Aula4.html",
    "href": "Aula4.html",
    "title": "Visualización de Datos con ggplot",
    "section": "",
    "text": "El paquete ggplot2 es fundamental en R para la visualización de datos, ofreciendo herramientas poderosas para crear gráficos estéticamente atractivos y claros. Puede ser cargado tanto de manera independiente como como parte del conjunto de paquetes tidyverse, que facilita el flujo de trabajo en análisis de datos. Para iniciar la creación de visualizaciones con ggplot2, se utiliza la función ggplot, que permite definir la estructura básica del gráfico y especificar los mapeos estéticos entre los datos y los elementos visuales del gráfico.\nCodigo\nlibrary(datapasta)   # Para facilitar la importación de datos desde el portapapeles\nlibrary(r4pde)       # Paquete específico para realizar ajustes de modelos\nlibrary(janitor)     # Para operaciones de limpieza y manipulación de datos\nlibrary(gsheet)      # Para acceder y manipular hojas de cálculo de Google Sheets\nlibrary(googlesheets4)  # Para interactuar con Google Sheets directamente desde R\nlibrary(ggplot2)     # Para visualizaciones gráficas avanzadas\nlibrary(tidyverse)"
  },
  {
    "objectID": "Aula4.html#importar-datos",
    "href": "Aula4.html#importar-datos",
    "title": "Visualización de Datos con ggplot",
    "section": "Importar datos",
    "text": "Importar datos\nCargar los datos desde cualquier origen para empezar a visualizar usando ggplot\n\n\nCodigo\n# Cargar los datos desde el archivo CSV\nmg &lt;- read_csv(\"dados-diversos.csv\")"
  },
  {
    "objectID": "Aula4.html#creación-de-gráficos-con-ggplot",
    "href": "Aula4.html#creación-de-gráficos-con-ggplot",
    "title": "Visualización de Datos con ggplot",
    "section": "Creación de Gráficos con ggplot",
    "text": "Creación de Gráficos con ggplot\nEn ggplot2, los gráficos se construyen en capas, usando el operador + para añadir cada capa al gráfico. Se utiliza el operador pipe (%&gt;% o |&gt;) para encadenar comandos de manera eficiente.\n\nGráfico de Puntos\nPara crear un gráfico de dispersión con puntos translúcidos:\n\n\nCodigo\nmg %&gt;%\n  ggplot(aes(Irrigation, severity, color = Irrigation)) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\nggplot(): Inicializa un objeto de gráfico en ggplot2 con los datos especificados y los mapeos estéticos.\ngeom_point(): Agrega puntos al gráfico con transparencia controlada por alpha.\n\n\n\nGráfico de Puntos con Formas Diferentes\nPara usar formas diferentes según la variable Irrigation:\n\n\nCodigo\nmg %&gt;%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\n\ngeom_point(): Además de color, shape se utiliza para asignar diferentes formas a los puntos según los valores de Irrigation.\n\n\n\nGráfico de Líneas\nCambiar a la variable day y añadir líneas conectando los puntos:\n\n\nCodigo\nmg %&gt;%\n  ggplot(aes(day, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5) +\n  geom_line()\n\n\n\n\n\n\n\n\n\n\ngeom_line(): Añade líneas al gráfico para conectar los puntos definidos por geom_point().\n\n\n\nFacetas\nCrear gráficos separados por la variable rep:\n\n\nCodigo\nmg %&gt;%\n  ggplot(aes(day, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~rep)\n\n\n\n\n\n\n\n\n\n\nfacet_wrap(): Divide el gráfico en múltiples paneles según la variable rep, facilitando la comparación entre diferentes grupos.\n\n\n\nOtras Funciones\n\n\nCodigo\n# Selección de columnas y gráfico de puntos\nmg %&gt;%\n  select(Irrigation, severity) %&gt;%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCodigo\n# Gráfico de cajas y puntos\nmg %&gt;%\n  select(day, severity) %&gt;%\n  ggplot(aes(day, severity)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\nCodigo\n# Agrupación por día y gráfico de puntos\nmg %&gt;%\n  select(day, rep, severity) %&gt;%\n  group_by(day) %&gt;%\n  summarise(sev = mean(severity)) %&gt;%\n  ggplot(aes(day, sev)) +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\nGráfico de Cajas y Puntos\n\n\nCodigo\n# Gráfico de cajas, puntos y cambio de variable a day\nmg %&gt;%\n  select(Irrigation, severity) %&gt;%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_boxplot() +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCodigo\n# Cambio de variable a day y gráfico de cajas\nmg %&gt;%\n  select(day, severity) %&gt;%\n  ggplot(aes(day, severity)) +\n  geom_boxplot() +\n  geom_point(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCodigo\n# Separación por grupo\nmg %&gt;%\n  select(day, severity) %&gt;%\n  ggplot(aes(day, severity, group = day)) +\n  geom_boxplot() +\n  geom_point()\n\n\n\n\n\n\n\n\n\n\n\nCrear un Nuevo Conjunto y Graficar\n\n\nCodigo\nmg2 &lt;- mg %&gt;%\n  select(day, rep, severity) %&gt;%\n  group_by(day) %&gt;%\n  summarise(sev = mean(severity)) %&gt;%\n  ggplot(aes(day, sev)) +\n  geom_point()\n\n\n\nselect(): Se utiliza para seleccionar columnas específicas del data frame antes de pasarlo a ggplot().\ngroup_by() y summarise(): Agrupa los datos por una variable (day en este caso) y calcula un resumen estadístico (mean(severity)).\ngeom_boxplot(): Crea gráficos de cajas y bigotes para visualizar la distribución de los datos.\ngeom_point(): Añade puntos a los gráficos de cajas para mostrar los valores individuales.\n\nEste script proporciona un conjunto completo de comandos para visualizar datos utilizando ggplot2 en R, utilizando diversas técnicas gráficas como gráficos de puntos, líneas, facetas y gráficos de cajas con puntos superpuestos. Cada función y operador se adapta para mostrar y explorar datos de manera efectiva según los requisitos específicos del análisis."
  },
  {
    "objectID": "Aula4.html#ejemplo",
    "href": "Aula4.html#ejemplo",
    "title": "Visualización de Datos con ggplot",
    "section": "Ejemplo",
    "text": "Ejemplo\n\n1. Carga de Paquetes\n\n\nCodigo\nlibrary(datapasta)   # Para facilitar la importación de datos desde el portapapeles\nlibrary(r4pde)       # Paquete específico para realizar ajustes de modelos\nlibrary(janitor)     # Para operaciones de limpieza y manipulación de datos\nlibrary(gsheet)      # Para acceder y manipular hojas de cálculo de Google Sheets\nlibrary(googlesheets4)  # Para interactuar con Google Sheets directamente desde R\nlibrary(ggplot2)     # Para visualizaciones gráficas avanzadas\nlibrary(ggthemes)   #Para visualización de temas de graficos asociados a ggplot\n\n\n\n\n2. Creación de Dataframe pepper\n\n\nCodigo\npepper &lt;- tibble::tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  )\n\n\n\nSe crea un dataframe pepper utilizando tibble::tribble con datos de incidencia de enfermedades en diferentes días (t), para tres tipos diferentes de enfermedades representadas por las columnas 1, 2 y 3.\n\n\n\n3. Visualización Interactiva con DT::datatable\n\n\nCodigo\npepper |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\"))) \n\n\n\n\n\n\n\nDT::datatable: Esta función de DT permite visualizar el dataframe pepper como una tabla interactiva en HTML, con opciones para exportar a Excel o CSV.\n\n\n\n4. Transformación de Datos con pivot_longer\n\n\nCodigo\npepper_dat &lt;- pepper |&gt; \n              pivot_longer(2:4, names_to = \"epidemic\", values_to = \"inc\")\npepper_dat \n\n\n# A tibble: 24 × 3\n       t epidemic   inc\n   &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt;\n 1     0 1        0.08 \n 2     0 2        0.001\n 3     0 3        0.001\n 4     7 1        0.13 \n 5     7 2        0.01 \n 6     7 3        0.001\n 7    14 1        0.78 \n 8    14 2        0.09 \n 9    14 3        0.01 \n10    21 1        0.92 \n# ℹ 14 more rows\n\n\n\npivot_longer: Del paquete tidyr, esta función reorganiza el dataframe pepper de un formato ancho a uno largo, donde cada fila ahora representa una observación única de incidencia (inc) para cada día (t) y tipo de enfermedad (epidemic).\n\n\n\n5. Visualización con ggplot2\n\n\nCodigo\npepper_dat |&gt; \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic,\n             color = epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_point(size = 3, shape = 16) +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n\n\n\n\n\n\n\n\n\n\nggplot: Crea un gráfico utilizando los datos transformados pepper_dat. Utiliza diferentes estilos y formas para representar cada tipo de enfermedad a lo largo del tiempo (t).\n\n\n\n6. Anotaciones en el Gráfico con annotate\n\n\nCodigo\npepper_dat |&gt; \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic, \n             color=epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_line(linewidth = 1) +\n  geom_point(size = 3, shape = 16) +\n  annotate(geom = \"text\", x = 10, y = 0.75, label = \"1\") +\n  annotate(geom = \"text\", x = 23, y = 0.6, label = \"2\") +\n  annotate(geom = \"text\", x = 32, y = 0.35, label = \"3\") +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n\n\n\n\n\n\n\n\n\n\nannotate: Esta función añade etiquetas de texto (label) a puntos específicos del gráfico (x y y), indicando momentos clave o valores importantes en la serie temporal de incidencia de enfermedades.\n\n\n\n6. Facetas en el Gráfico con facet_wrap\n\n\nCodigo\npepper_dat |&gt; \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic, \n             color=epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_line(linewidth = 1) +\n  facet_wrap(~epidemic)+\n  geom_point(size = 3, shape = 16) +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n\n\n\n\n\n\n\n\n\n\nfacet_wrap: se usa para crear una cuadrícula de gráficos, donde cada subgráfico representa un subconjunto de los datos. Esto se logra especificando una fórmula con la variable según la cual se desea dividir los datos.\n\n\n\nParámetros Importantes\n\n~ factor_var: La variable categórica por la cual se desea dividir los datos.\nncol: Especifica el número de columnas en la cuadrícula de facetas.\nnrow: Especifica el número de filas en la cuadrícula de facetas.\nscales: Permite ajustar las escalas de los ejes. \"fixed\" (por defecto, las mismas escalas para todos los subgráficos), \"free\"(escalas independientes para cada subgráfico), \"free_x\" (eje x independiente) \"free_y\" (eje y independiente)."
  },
  {
    "objectID": "Aula4.html#aprendizaje-del-día",
    "href": "Aula4.html#aprendizaje-del-día",
    "title": "Visualización de Datos con ggplot",
    "section": "Aprendizaje del día",
    "text": "Aprendizaje del día\nEste script utiliza paquetes como tidyr, ggplot2, y DT para importar, manipular, visualizar y presentar datos de incidencia de enfermedades en pimientos de manera efectiva y visualmente atractiva. Cada paso está diseñado para optimizar el análisis y la comprensión de los datos, facilitando la interpretación de tendencias y patrones en la incidencia de enfermedades a lo largo del tiempo."
  },
  {
    "objectID": "Aula6.html",
    "href": "Aula6.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source\n\n\n\n\n\nGráficos de dispersión, histogramas y densidad\nEste script en R se centra en la visualización y análisis de datos utilizando diversas técnicas gráficas. A continuación se explica paso a paso cada sección del script, resaltando las funciones importantes utilizadas y su propósito.\n\nImportación de Datos\nPrimero, se importan los datos desde un archivo de Excel utilizando la función read_excel() del paquete readxl. Los datos se leen desde la hoja “fungicida_campo” del archivo “dados-diversos.xlsx” y se asignan al data frame fungicida_campo.\n\n\nCodigo\nlibrary(tidyverse)\nlibrary(readxl)\n\nfungicida_campo &lt;- read_excel(\"dados-diversos.xlsx\", \"fungicida_campo\")\n\n\n\n\nScatterplots\nLos scatterplots son gráficos que muestran la relación entre dos variables numéricas. Se utilizan para identificar patrones o correlaciones entre ellas.\n\nScatterplot básico con geom_jitter() y stat_summary()\nEn este bloque de código, se crea un scatterplot que muestra la dispersión de los datos de sev (severidad) versus trat (tratamiento), con puntos distribuidos de manera jittered para evitar superposiciones y se añade la media utilizando stat_summary().\n\n\nCodigo\nfungicida_campo |&gt; \n  ggplot(aes(trat, sev)) +\n  geom_jitter(width = 0.1, color = \"gray60\") +\n  stat_summary(fun = mean, color = \"red\")+\n  theme_few() \n\n\n\n\n\n\n\n\n\n\n\nScatterplot con intervalo de confianza\nEste scatterplot añade un intervalo de confianza alrededor de la media utilizando stat_summary() con fun.data = mean_se.\n\n\nCodigo\nfungicida_campo |&gt; \n  ggplot(aes(trat, sev)) +\n  geom_jitter(width = 0.1, color = \"gray60\") +\n  stat_summary(fun.data = mean_se, color = \"red\")+\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nScatterplot cambiando variables y estética\nEn este ejemplo, se cambia la variable sev al eje x y yld (rendimiento) al eje y, y se colorea por trat utilizando scale_color_colorblind(). Además, se ajusta la transparencia de los puntos usando alpha.\n\n\nCodigo\nlibrary(ggthemes)\n\nfungicida_campo |&gt; \n  ggplot(aes(sev, yld, color = trat)) +\n  geom_point(size = 3, alpha = 0.8) +\n  scale_color_colorblind()+\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nScatterplot con línea de tendencia\nAquí se añade una línea de tendencia lineal utilizando geom_smooth() con method = \"lm\" y se = FALSE para eliminar la visualización del intervalo de confianza.\n\n\nCodigo\nfungicida_campo |&gt; \n  ggplot(aes(sev, yld)) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", linetype = \"solid\", size = 2) +\n  scale_color_colorblind()+\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\n\nGráficos de dispersión para análisis factorial\nEn esta sección, se cambia el subconjunto de datos a milho y se crea un scatterplot que muestra la variación del rendimiento (yield) de diferentes híbridos de maíz (hybrid) según el método de inoculación (method). Se utiliza facet_wrap() para separar los gráficos por hybrid.\n\n\nCodigo\nmilho &lt;- read_excel(\"dados-diversos.xlsx\", \"milho\")\n\nmilho |&gt; \n  ggplot(aes(hybrid, yield, color = method)) +\n  geom_jitter(size = 2) +\n  facet_wrap(~hybrid)+\n  theme_few()+\n  scale_color_few()\n\n\n\n\n\n\n\n\n\n\n\nHistogramas\nLos histogramas se utilizan para visualizar la distribución de una variable numérica. Se construyen con geom_histogram().\n\nHistograma de yield\nEn este ejemplo, se crea un histograma para la variable yield con 10 bins, y se cambia el color del borde (color) y el color de relleno (fill) de las barras.\n\n\nCodigo\np_yield &lt;- milho |&gt; \n  ggplot(aes(x = yield)) +\n  geom_histogram(bins = 10, color = \"black\", fill = \"green\")+\n  theme_few()+\n  scale_color_few()\n\np_yield \n\n\n\n\n\n\n\n\n\n\n\nHistograma de index\nSe crea un histograma similar para la variable index, cambiando los colores de las barras.\n\n\nCodigo\np_index &lt;- milho |&gt; \n  ggplot(aes(x = index)) +\n  geom_histogram(bins = 10, color = \"black\", fill = \"blue\")+\n  theme_few()+\n  scale_color_few()\np_index \n\n\n\n\n\n\n\n\n\n\n\nCombinación de histogramas con patchwork\nSe combinan los histogramas de yield y index utilizando patchwork, organizándolos en una única visualización.\n\n\nCodigo\nlibrary(patchwork)\n\n(p_yield + p_index) +\n  plot_annotation(tag_levels = \"A\")\n\n\n\n\n\n\n\n\n\nCodigo\nggsave(\"figs/histograms.png\", bg = \"white\")\n\n\n\n\n\nGráfico de densidad\nLos gráficos de densidad muestran la distribución de probabilidad de una variable continua. Se utilizan geom_density().\n\nGráfico de densidad de index\nEn este ejemplo, se crea un gráfico de densidad para la variable index.\n\n\nCodigo\nmilho |&gt; \n  ggplot(aes(x = index)) +\n  geom_density()+\n  theme_few()+\n  scale_color_few()\n\n\n\n\n\n\n\n\n\n\n\n\nGráfico de columnas\nSe utiliza un nuevo subconjunto de datos (insect) para crear un gráfico de columnas (geom_col()), donde inseticida está en el eje x y value en el eje y. Se convierte el formato de ancho a largo con pivot_longer().\n\n\nCodigo\ninsect &lt;- read_excel(\"dados-diversos.xlsx\", \"mortalidade\")\n\ninsect |&gt; \n  pivot_longer(2:3, names_to = \"status\", values_to = \"value\") |&gt; \n  ggplot(aes(inseticida, value, fill = status)) +\n  geom_col()+\n  theme_few()+\n  scale_fill_manual(values = c(\"#669933\", \"#FFCC66\")) \n\n\n\n\n\n\n\n\n\n\n\nAprendizaje del día\nEste script en R demuestra cómo importar datos desde Excel, realizar visualizaciones como scatterplots, histogramas, gráficos de densidad y gráficos de columnas utilizando el paquete ggplot2 y otras herramientas como patchwork y tidyverse. Cada sección utiliza diferentes funciones y estéticas para explorar y visualizar datos de manera efectiva y clara."
  },
  {
    "objectID": "Paquetes_.html",
    "href": "Paquetes_.html",
    "title": "Paquetes",
    "section": "",
    "text": "Introducción a los Paquetes Utilizados\nEn el análisis de datos, el uso de paquetes específicos de R es esencial para facilitar y optimizar el proceso. A continuación, se presenta una introducción a los paquetes utilizados en este script, junto con las razones para emplearlos.\n\nManejo y Limpieza de Datos\n\ntidyverse: Este conjunto de paquetes es fundamental para la manipulación y visualización de datos en R. Incluye herramientas como dplyr para la manipulación de datos, ggplot2 para la creación de gráficos y tidyr para la organización de datos, entre otros. Su uso es crucial para asegurar un flujo de trabajo coherente y eficiente.\njanitor: Proporciona funciones para la limpieza de datos, incluyendo la normalización de nombres de columnas y la eliminación de filas duplicadas, lo que es esencial para preparar datos antes del análisis.\nlubridate: Facilita el manejo y la manipulación de datos de fechas y horas, simplificando tareas comunes como la extracción de componentes de fechas y la realización de cálculos temporales.\n\n\n\nImportación de Datos\n\ngsheet y googlesheets4: Estos paquetes permiten importar datos directamente desde Google Sheets, lo que es especialmente útil cuando se trabaja con datos almacenados en la nube y se requiere acceso actualizado y colaborativo.\n\n\n\nVisualización de Datos\n\nggplot2: Parte del tidyverse, ggplot2 es el estándar de facto para la visualización de datos en R. Permite crear gráficos de alta calidad y altamente personalizables.\nggthemes: Añade temas adicionales a ggplot2, permitiendo mejorar la estética de los gráficos.\ncowplot y patchwork: Extienden las capacidades de ggplot2 permitiendo combinar múltiples gráficos en uno solo, facilitando la comparación y presentación de resultados.\nggh4x: Proporciona extensiones adicionales para ggplot2, mejorando la personalización y funcionalidad de los gráficos.\nggpubr: Facilita la creación y publicación de gráficos hechos con ggplot2, ofreciendo herramientas adicionales para anotaciones y disposición de gráficos.\nggridges: Permite la creación de gráficos de densidad en forma de crestas, útiles para visualizar la distribución de múltiples variables en un solo gráfico.\n\n\n\nAnálisis Estadístico\n\nrstatix: Simplifica la ejecución de análisis estadísticos comunes y la obtención de resultados de una manera clara y fácil de interpretar.\nnlme y lme4: Proporcionan herramientas para el ajuste de modelos de efectos mixtos, útiles para analizar datos que incluyen efectos aleatorios.\nDHARMa: Ofrece métodos para el diagnóstico de modelos estadísticos mediante simulaciones, ayudando a validar los supuestos de los modelos.\nperformance: Evalúa el rendimiento de los modelos ajustados, proporcionando métricas de ajuste y diagnóstico.\nreport: Automatiza la generación de informes de análisis estadísticos, facilitando la presentación de resultados.\nemmeans: Estima medias marginales y realiza contrastes, útil para interpretar efectos en modelos complejos.\nmultcomp y multcompView: Facilitan las pruebas de comparaciones múltiples y la visualización de resultados.\n\n\n\nTablas Interactivas\n\nDT: Permite la creación de tablas interactivas en HTML, con opciones de exportación a Excel y CSV, mejorando la presentación y la exploración de datos.\n\n\n\nOtras Herramientas\n\ndatapasta: Facilita el copiado y pegado de datos entre R y otras aplicaciones.\nsf: Proporciona herramientas para la manipulación y análisis de datos espaciales simples.\nbroom: Convierte modelos estadísticos en tibbles ordenados, facilitando su manipulación y visualización.\nstringr: Herramientas para la manipulación de cadenas de caracteres, esenciales para el procesamiento de texto.\n\nCada uno de estos paquetes ha sido seleccionado para abordar tareas específicas dentro del análisis de datos, desde la importación y limpieza de datos hasta la visualización y análisis estadístico, asegurando un flujo de trabajo integral y eficiente.\n\n\nCodigo\n# Paquete para copiar y pegar datos\nlibrary(datapasta)\n\n# Herramientas para trabajar con ecuaciones diferenciales parciales (PDE)\nlibrary(r4pde)\n\n# Limpieza y organización de datos\nlibrary(janitor)\n\n# Importación de datos desde Google Sheets\nlibrary(gsheet)\n\n# Manejo avanzado de Google Sheets\nlibrary(googlesheets4)\n\n# Conjunto de paquetes para manipulación y visualización de datos\nlibrary(tidyverse)\n\n# Extensiones y mejoras para ggplot2\nlibrary(cowplot)\n\n# Combinación de múltiples gráficos de ggplot2\nlibrary(patchwork)\n\n# Temas adicionales para ggplot2\nlibrary(ggthemes)\n\n# Herramientas para el ajuste de modelos epidemiológicos\nlibrary(epifitter)\n\n# Creación de gráficos\nlibrary(ggplot2)\n\n# Modelos de efectos mixtos no lineales\nlibrary(nlme)\n\n# Modelos de efectos mixtos lineales\nlibrary(lme4)\n\n# Diagnóstico de modelos estadísticos mediante simulaciones\nlibrary(DHARMa)\n\n# Evaluación del rendimiento de los modelos\nlibrary(performance)\n\n# Generación de informes de análisis estadísticos\nlibrary(report)\n\n# Estimación de medias marginales y contrastes\nlibrary(emmeans)\n\n# Visualización de resultados de comparaciones múltiples\nlibrary(multcompView)\n\n# Pruebas de comparaciones múltiples\nlibrary(multcomp)\n\n# Visualización de matrices de correlación\nlibrary(corrplot)\n\n# Visualizaciones adicionales para la evaluación de modelos\nlibrary(see)\n\n# Manejo y análisis de datos de fechas y horas\nlibrary(lubridate)\n\n# Conjunto de datos agrícolas para investigación y análisis\nlibrary(agridat)\n\n# Métodos estadísticos para la investigación agrícola\nlibrary(agricolae)\n\n# Manipulación y análisis de datos espaciales simples\nlibrary(sf)\n\n# Convierte modelos estadísticos en tibbles ordenados\nlibrary(broom)\n\n# Gráficos trellis para visualización de datos multivariados\nlibrary(lattice)\n\n# Herramientas para regresión y gráficos asociados\nlibrary(car)\n\n# Escalas y transformaciones para gráficos\nlibrary(scales)\n\n# Importación de datos desde archivos Excel\nlibrary(readxl)\n\n# Herramientas para generar informes dinámicos\nlibrary(knitr)\n\n# Extiende knitr::kable() para formatear tablas\nlibrary(kableExtra)\n\n# Análisis de varianza simplificado\nlibrary(easyanova)\n\n# Análisis de rendimiento de portafolios financieros\nlibrary(PerformanceAnalytics)\n\n# Proporciona operadores de tubería (%&gt;%) para encadenar operaciones\nlibrary(magrittr)\n\n# Facilita la publicación de gráficos creados con ggplot2\nlibrary(ggpubr)\n\n# Análisis estadísticos comunes\nlibrary(rstatix)\n\n# Herramientas para reestructurar y transformar datos\nlibrary(reshape)\n\n# Formateo de tablas para informes\nlibrary(formattable)\n\n# Herramientas para visualización de datos de modelos\nlibrary(sjPlot)\n\n# Etiquetado de variables en data frames\nlibrary(sjlabelled)\n\n# Manipulación de datos\nlibrary(sjmisc)\n\n# Extensiones para ggplot2\nlibrary(ggh4x)\n\n# Disposición de gráficos en una cuadrícula\nlibrary(gridExtra)\n\n# Manipulación de cadenas de caracteres\nlibrary(stringr)\n\n# Herramientas para epidemiología\nlibrary(epiR)\n\n# Creación de gráficos de densidad en forma de crestas\nlibrary(ggridges)\n\n# Creación de tablas interactivas en HTML\nlibrary(DT)"
  },
  {
    "objectID": "Aula7.html",
    "href": "Aula7.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula7.html#transformación-de-datos-log-y-sqrt",
    "href": "Aula7.html#transformación-de-datos-log-y-sqrt",
    "title": "",
    "section": "Transformación de Datos (log) y (sqrt)",
    "text": "Transformación de Datos (log) y (sqrt)\n\nTransformación Logarítmica (log):\n\nÚtil para datos que varían en varios órdenes de magnitud o que están muy sesgados a la derecha.\nFórmula: ( (X + 1) ) (se suma 1 para evitar problemas con valores de 0).\n\nRaíz Cuadrada (sqrt):\n\nAyuda con datos que tienen una distribución de Poisson o donde la variabilidad crece con el valor de la variable.\nFórmula: ( ).\n\n\n\nEjemplo Práctico en Fitopatología\nImagina que tienes datos de la severidad de una enfermedad en diferentes cultivos y notas que los datos están muy sesgados a la derecha (hay muchos cultivos con baja severidad y pocos con alta severidad).\n\nExplora tus Datos:\n\nHistograma muestra datos sesgados a la derecha.\nPrueba de normalidad muestra que los datos no son normales.\n\nElige la Transformación:\n\nDecides usar la transformación logarítmica porque ayuda a normalizar datos sesgados.\n\nAplica la Transformación:\n\nTransformas los datos usando ( ( + 1) ).\n\nRevisa:\n\nVuelves a hacer un histograma y notas que los datos transformados se parecen más a una distribución normal.\n\nRealiza el Análisis:\n\nAhora haces tu ANOVA o regresión con los datos transformados y obtienes resultados más válidos.\n\nDocumenta:\n\nEscribes en tus notas que transformaste los datos de severidad usando ( (X + 1) ) porque los datos originales estaban sesgados y no eran normales.\n\n\nTransformar datos puede parecer complicado, pero es una herramienta muy útil para asegurar que tus análisis estadísticos sean válidos y significativos.\n\n\nPaso a Paso\nAntes de realizar un análisis estadístico en R, puede ser necesario transformar los datos dependiendo de la naturaleza de los datos y los requisitos del análisis. Las transformaciones pueden ayudar a cumplir con los supuestos de los análisis estadísticos, como la normalidad y la homogeneidad de variancias."
  },
  {
    "objectID": "Aula7.html#exploración-de-los-datos",
    "href": "Aula7.html#exploración-de-los-datos",
    "title": "",
    "section": "Exploración de los Datos",
    "text": "Exploración de los Datos\nAntes de realizar transformaciones, necesitamos entender la naturaleza de los datos. Vamos a familiarizarnos con un conjunto de datos, en este caso, el conjunto de datos mofo, presente dentro del archivo de datos datos-diversos.xlsx.\nAquí tienes el código ajustado con el texto añadido para cada paso del análisis de datos, siguiendo la guía proporcionada:\n\nCargando las Librerías Necesarias\n\n\nCodigo\n# Evita que se muestren advertencias y mensajes\n#| warning: false\n#| message: false\n\n# Cargar librerías necesarias\nlibrary(tidyverse)  # Para manipulación y visualización de datos\nlibrary(readxl)     # Para leer archivos de Excel\nlibrary(DT)         # Para visualizar tablas dinámicas\nlibrary(patchwork)  # Para juntar gráficos\n\n\n\n\nCargando el Conjunto de Datos\n\n\nCodigo\n# Leer el conjunto de datos 'mofo' desde el archivo 'dados-diversos.xlsx'\nmofo &lt;- read_excel(\"dados-diversos.xlsx\", \"mofo\")\n\n# Mostrar los datos en una tabla interactiva\nmofo %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))\n  )"
  },
  {
    "objectID": "Aula7.html#explora-tus-datos",
    "href": "Aula7.html#explora-tus-datos",
    "title": "",
    "section": "Explora tus Datos",
    "text": "Explora tus Datos\nPara entender mejor nuestros datos, comenzamos con una exploración inicial. Esta fase incluye visualizar los datos y realizar pruebas de normalidad.\n\nVisualización Inicial de los Datos\nPodemos visualizar los datos de diferentes maneras, como gráficos de dispersión, histogramas y boxplots. Inicialmente, visualizaremos los datos de incidencia (inc) por tratamientos y por estudio.\n\n\nCodigo\n# Gráfico de dispersión de la incidencia por tratamientos y estudios\nmofo |&gt; \n  ggplot(aes(treat, inc)) +\n  facet_wrap(~study) +  # Facetas por estudio\n  geom_point()          # Puntos de dispersión\n\n\n\n\n\n\n\n\n\n\n\nHistograma de Incidencia y Escleródio\nLos histogramas nos permiten ver la distribución de nuestros datos. Aquí, creamos histogramas para las variables inc y scl.\n\n\nCodigo\n# Histograma de incidencia\ninc &lt;- mofo |&gt; \n  ggplot(aes(inc)) +\n  geom_histogram()\ninc"
  },
  {
    "objectID": "Aula7.html#prueba-de-normalidad",
    "href": "Aula7.html#prueba-de-normalidad",
    "title": "",
    "section": "1. Prueba de Normalidad",
    "text": "1. Prueba de Normalidad\nPodemos usar pruebas estadísticas como la prueba de Shapiro-Wilk para verificar la normalidad de nuestros datos.\n\n\nCodigo\n# Prueba de Shapiro-Wilk para la normalidad\nshapiro.test(mofo$scl)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  mofo$scl\nW = 0.89096, p-value = 0.0001851"
  },
  {
    "objectID": "Aula7.html#elige-la-transformación",
    "href": "Aula7.html#elige-la-transformación",
    "title": "",
    "section": "2. Elige la Transformación",
    "text": "2. Elige la Transformación\nDado que los datos están sesgados a la derecha y no son normales, decidimos usar la transformación logarítmica porque ayuda a normalizar datos sesgados.\n\nCálculo de la Media\nAntes de aplicar la transformación, calculamos la media de la columna scl.\n\n\nCodigo\n# Calcular la media de la columna 'scl'\nmean(mofo$scl)\n\n\n[1] 1639.096"
  },
  {
    "objectID": "Aula7.html#aplica-la-transformación",
    "href": "Aula7.html#aplica-la-transformación",
    "title": "",
    "section": "3. Aplica la Transformación",
    "text": "3. Aplica la Transformación\nAplicamos la transformación logarítmica a nuestros datos. La fórmula usada es (( + 1)) para evitar problemas con valores cero.\n\nTransformación Logarítmica\n\n\nCodigo\n# Transformar los datos usando logaritmo\nmofo2 &lt;- mofo |&gt; \n  mutate(scl2 = log(scl + 1))  # Crear nueva columna 'scl2' con el logaritmo de 'scl'\n\n# Mostrar los datos transformados en una tabla interactiva\nmofo2 %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))\n  ) |&gt; \n  formatRound(\"scl2\", 2)\n\n\n\n\n\n\n\n\nHistograma de Datos Transformados\nRevisamos la distribución de los datos transformados mediante un histograma.\n\n\nCodigo\n# Visualizar los datos transformados en logaritmo con un histograma\nmofo2 |&gt; \n  ggplot(aes(scl2)) +\n  geom_histogram(bins = 10)\n\n\n\n\n\n\n\n\n\n\n\nPrueba de Normalidad en Datos Transformados\nVerificamos si la transformación logarítmica ha mejorado la normalidad de los datos.\n\n\nCodigo\n# Prueba de Shapiro-Wilk para la normalidad en datos transformados\nshapiro.test(mofo2$scl2)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  mofo2$scl2\nW = 0.96708, p-value = 0.1585"
  },
  {
    "objectID": "Aula7.html#revisa",
    "href": "Aula7.html#revisa",
    "title": "",
    "section": "4. Revisa",
    "text": "4. Revisa\nVuelves a hacer un histograma y notas que los datos transformados se parecen más a una distribución normal. Esto sugiere que la transformación ha sido efectiva."
  },
  {
    "objectID": "Aula7.html#realiza-el-análisis",
    "href": "Aula7.html#realiza-el-análisis",
    "title": "",
    "section": "5. Realiza el Análisis",
    "text": "5. Realiza el Análisis\nAhora que los datos están transformados y tienen una distribución más normal, puedes proceder a realizar el análisis estadístico, como ANOVA o regresión.\n\nANOVA con Datos Transformados\n\n\nCodigo\n# Realizar ANOVA con los datos transformados\nanova_result &lt;- aov(scl2 ~ treat, data = mofo2)\nsummary(anova_result)\n\n\n            Df Sum Sq Mean Sq F value  Pr(&gt;F)   \ntreat        1   6.92   6.915   8.924 0.00435 **\nResiduals   50  38.75   0.775                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "Aula7.html#documenta",
    "href": "Aula7.html#documenta",
    "title": "",
    "section": "6. Documenta",
    "text": "6. Documenta\nEs importante documentar que transformaste los datos de scl usando (( + 1)) porque los datos originales estaban sesgados y no eran normales. Esto garantiza la transparencia y reproducibilidad de tu análisis.\n\nDocumentación\n\n\nCodigo\n# Documentación del proceso\nnotas &lt;- \"Transformamos los datos de severidad usando log(scl + 1) porque los datos originales estaban sesgados y no eran normales.\"\nwriteLines(notas, \"documentacion.txt\")"
  },
  {
    "objectID": "Aula7.html#transformación-de-raíz-cuadrada-opcional",
    "href": "Aula7.html#transformación-de-raíz-cuadrada-opcional",
    "title": "",
    "section": "Transformación de Raíz Cuadrada (opcional)",
    "text": "Transformación de Raíz Cuadrada (opcional)\nComo comparación, también podemos aplicar la transformación de raíz cuadrada y revisar su efecto.\n\nTransformación de Raíz Cuadrada\n\n\nCodigo\n# Transformar los datos usando raíz cuadrada\nmofo2 &lt;- mofo |&gt; \n  mutate(scl2 = sqrt(scl))  # Crear nueva columna 'scl2' con la raíz cuadrada de 'scl'\n\n# Mostrar los datos transformados en una tabla interactiva\nmofo2 %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))\n  ) |&gt; \n  formatRound(\"scl2\", 2)\n\n\n\n\n\n\n\n\nCodigo\n# Visualizar los datos transformados en raíz cuadrada con un histograma\nmofo2 |&gt; \n  ggplot(aes(scl2)) +\n  geom_histogram(bins = 10)\n\n\n\n\n\n\n\n\n\n\n\nPrueba de Normalidad en Datos Transformados (Raíz Cuadrada)\n\n\nCodigo\n# Prueba de Shapiro-Wilk para la normalidad en datos transformados (raíz cuadrada)\nshapiro.test(mofo2$scl2)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  mofo2$scl2\nW = 0.97263, p-value = 0.2724\n\n\nEste enfoque completo asegura que cada fase del análisis de datos se realice de manera lógica y coherente, desde la exploración inicial hasta la documentación final."
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html",
    "href": "FIP606-Proyect_CLR3.html",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"DB_PAT104022.csv\")\n\ndat |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)\n\n\n\n\n\n\nUso de la funcion select para convertir una tabla resumida\n\n\nCodigo\nCLR_ &lt;-dat |&gt; \n      select(Evaluacion,Time_,Time_E,Eva_E,Eva_,Parcela,Surco,Arbol_1,Arbol,Rep,Htotal,Inc_promedio,Def_calculada,Severidad,Sev_condicional) |&gt; \n      filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12))\n  \n\nCLR_ |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#preparación-base-de-datos",
    "href": "FIP606-Proyect_CLR3.html#preparación-base-de-datos",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "",
    "text": "Codigo\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(viridis)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(\"writexl\")\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(lme4)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(RColorBrewer)\nlibrary(DT)\nlibrary(gsheet)\n\n\n\n\n\n\nCodigo\ndat&lt;-read.csv2(\"DB_PAT104022.csv\")\n\ndat |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('Inc_promedio','Def_calculada','Sev_total','Severidad','Sev_condicional'), 2)\n\n\n\n\n\n\nUso de la funcion select para convertir una tabla resumida\n\n\nCodigo\nCLR_ &lt;-dat |&gt; \n      select(Evaluacion,Time_,Time_E,Eva_E,Eva_,Parcela,Surco,Arbol_1,Arbol,Rep,Htotal,Inc_promedio,Def_calculada,Severidad,Sev_condicional) |&gt; \n      filter((Eva_ &gt;= 4 & Eva_ &lt;= 7) | (Eva_ &gt;= 9 & Eva_ &lt;= 12))\n  \n\nCLR_ |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   Buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#anova-prueba-de-supuestos",
    "href": "FIP606-Proyect_CLR3.html#anova-prueba-de-supuestos",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "ANOVA + Prueba de Supuestos",
    "text": "ANOVA + Prueba de Supuestos"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#incidencia",
    "href": "FIP606-Proyect_CLR3.html#incidencia",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "Incidencia",
    "text": "Incidencia\n\n\nCodigo\n# Crear el modelo ANOVA\naov_inc &lt;- aov(Inc_promedio~ Parcela, data = CLR_)\n\n# Resumen del modelo\nsummary(aov_inc)\n\n\n              Df  Sum Sq Mean Sq F value Pr(&gt;F)    \nParcela        2 1045239  522620    1015 &lt;2e-16 ***\nResiduals   5392 2776486     515                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n365 observations deleted due to missingness\n\n\n\nhomocedasticidad\n\n\n\nCodigo\ncheck_heteroscedasticity(aov_inc)\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\n\nNormalidad\n\n\n\nCodigo\ncheck_normality(aov_inc)\n\n\nWarning: Non-normality of residuals detected (p &lt; .001).\n\n\n\ncheck\n\n\n\nCodigo\nplot(simulateResiduals(aov_inc))\n\n\n\n\n\n\n\n\n\n\n\nCodigo\ncheck_model(aov_inc)\n\n\n\n\n\n\n\n\n\nNo cumplen con los supuestos de normalidad y homocedasticidad, hay varias alternativas que puedes considerar para realizar análisis estadísticos apropiados.\n\n\nTransformaciones de Datos\n\n\nPruebas No Paramétricas El análisis no paramétrico no asume una distribución específica para los datos y es más flexible en términos de los supuestos que hace.\n\n\nModelos Generalizados\n\n\nResampling Methods\n\n\nAnálisis Robustos\n\n\nAnálisis de Varianza no Paramétrico\n\nÁrea Bajo la Curva del Progreso de la Enfermedad (AUDPC)"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#area-bajo-la-curva-incidencia",
    "href": "FIP606-Proyect_CLR3.html#area-bajo-la-curva-incidencia",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "Area Bajo la curva Incidencia",
    "text": "Area Bajo la curva Incidencia\n\n\nCodigo\ndat_1&lt;-CLR_ |&gt; \n  group_by(Evaluacion,Time_E,Parcela,Arbol) |&gt; \n  summarize(Incidencia = mean(Inc_promedio,na.rm=TRUE))\n\n\ndat_1 |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound('Incidencia', 2)\n\n\n\n\n\n\n\n\nCodigo\ndat_audps &lt;- dat_1 |&gt; \n          group_by(Evaluacion,Parcela,Arbol) |&gt; \n          summarize(audps = AUDPS(Time_E,Incidencia,))\n\n\ndat_audps |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound('audps', 2)\n\n\n\n\n\n\n\n\nCodigo\nt&lt;-90\n\ndat1_audpc &lt;- dat_audps |&gt; \n  mutate(audpc2 = audps / t)\n\n\ndat1_audpc  %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c ('audps','audpc2'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f&lt;-  dat1_audpc  |&gt; \n                  group_by(Evaluacion,Parcela,Arbol) |&gt; \n                  summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))\n\ndat1_audpc_f  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('audpc','TPD'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f_&lt;-  dat1_audpc  |&gt; \n                  group_by(Parcela) |&gt; \n                  summarize(audpc = mean(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))\n\ndat1_audpc_f_  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('audpc','TPD'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f |&gt;\n            ggplot(aes(Parcela, audpc, fill = Parcela)) +\n            geom_boxplot() +\n            facet_wrap(~ Evaluacion)+\n            theme_clean()+\n              theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n              scale_fill_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs(\n              y = \"% Defoliaci\",\n              title = \"A. Boxplot ABCPE Incidencia\",subtitle =\"\"\n            )\n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Test de Kruskal-Wallis\nkruskal.test(audpc ~ Parcela, data = dat1_audpc_f)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  audpc by Parcela\nKruskal-Wallis chi-squared = 220.4, df = 2, p-value &lt; 2.2e-16\n\n\nInterpretación del Test de Kruskal-Wallis: Este test no requiere la asunción de normalidad. Si el p-valor es menor que 0.05, hay diferencias significativas entre los grupos.\n\n\nCodigo\nkruskal(dat1_audpc_f$audpc, dat1_audpc_f$Parcela, console = TRUE)\n\n\n\nStudy: dat1_audpc_f$audpc ~ dat1_audpc_f$Parcela\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 220.4003\nDegrees of freedom: 2\nPvalue Chisq  : 0 \n\ndat1_audpc_f$Parcela,  means of the ranks\n\n               dat1_audpc_f.audpc   r\nTto Fungicida            109.8937 160\nTto Nuevo                284.4688 160\nTto Testigo SA           327.1375 160\n\nPost Hoc Analysis\n\nt-Student: 1.96495\nAlpha    : 0.05\nMinimum Significant Difference: 22.43448 \n\nTreatments with the same letter are not significantly different.\n\n               dat1_audpc_f$audpc groups\nTto Testigo SA           327.1375      a\nTto Nuevo                284.4688      b\nTto Fungicida            109.8937      c\n\n\n\n\nCodigo\naov_inc2 &lt;- aov(audpc~ Parcela, data = dat1_audpc_f)\n\naov_inc2\n\n\nCall:\n   aov(formula = audpc ~ Parcela, data = dat1_audpc_f)\n\nTerms:\n                   Parcela  Residuals\nSum of Squares  3490469797 3788596830\nDeg. of Freedom          2        477\n\nResidual standard error: 2818.253\nEstimated effects may be unbalanced\n\n\n\n\nCodigo\naov_inc_means&lt;- cld(emmeans(aov_inc2, ~ Parcela),alpha = 0.05, Letters = LETTERS,reverse=F)\n\naov_inc_means|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('emmean','SE','lower.CL','upper.CL'), 2)"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#defoliación",
    "href": "FIP606-Proyect_CLR3.html#defoliación",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "Defoliación",
    "text": "Defoliación\n\n\nCodigo\n# Crear el modelo ANOVA\naov_def &lt;- aov(Def_calculada~ Parcela, data = CLR_)\n\n# Resumen del modelo\nsummary(aov_def)\n\n\n              Df  Sum Sq Mean Sq F value Pr(&gt;F)    \nParcela        2  252680  126340   445.5 &lt;2e-16 ***\nResiduals   5757 1632470     284                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nhomocedasticidad\n\n\n\nCodigo\ncheck_heteroscedasticity(aov_def)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.316).\n\n\n\nNormalidad\n\n\n\nCodigo\ncheck_normality(aov_def)\n\n\nWarning: Non-normality of residuals detected (p = 0.006).\n\n\n\ncheck\n\n\n\nCodigo\nplot(simulateResiduals(aov_def))\n\n\n\n\n\n\n\n\n\n\n\nCodigo\ncheck_model(aov_def)\n\n\n\n\n\n\n\n\n\nSe cumplen con el supuestos de normalidad, pero no con la homocedasticidad, hay varias alternativas que puedes considerar para realizar análisis estadísticos apropiados.\n\n\nTransformaciones de Datos\n\n\nPruebas No Paramétricas\n\n\nModelos Generalizados\n\n\nResampling Methods\n\n\nAnálisis Robustos\n\n\nAnálisis de Varianza no Paramétrico\n\n\nTransformaciones de Datos\n\n\nPruebas No Paramétricas El análisis no paramétrico no asume una distribución específica para los datos y es más flexible en términos de los supuestos que hace.\n\n\nModelos Generalizados\n\n\nResampling Methods\n\n\nAnálisis Robustos\n\n\nAnálisis de Varianza no Paramétrico\n\nÁrea Bajo la Curva del Progreso de la Enfermedad (AUDPC)"
  },
  {
    "objectID": "FIP606-Proyect_CLR3.html#area-bajo-la-curva-defoliación",
    "href": "FIP606-Proyect_CLR3.html#area-bajo-la-curva-defoliación",
    "title": "FIP606-Proyecto: Análisis Estadistico",
    "section": "Area Bajo la curva Defoliación",
    "text": "Area Bajo la curva Defoliación\n\n\nCodigo\ndat_1&lt;-CLR_ |&gt; \n  group_by(Evaluacion,Time_E,Parcela,Arbol) |&gt; \n  summarize(Defoliacion = mean(Def_calculada,na.rm=TRUE))\n\n\ndat_1 |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound('Defoliacion', 2)\n\n\n\n\n\n\n\n\nCodigo\ndat_audps &lt;- dat_1 |&gt; \n          group_by(Evaluacion,Parcela,Arbol) |&gt; \n          summarize(audps = AUDPS(Time_E,Defoliacion))\n\n\ndat_audps |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound('audps', 2)\n\n\n\n\n\n\n\n\nCodigo\nt&lt;-90\n\ndat1_audpc &lt;- dat_audps |&gt; \n  mutate(audpc2 = audps / t)\n\n\ndat1_audpc  %&gt;%\n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c ('audps','audpc2'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f&lt;-  dat1_audpc  |&gt; \n                  group_by(Evaluacion,Parcela,Arbol) |&gt; \n                  summarize(audpc = sum(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))\n\ndat1_audpc_f  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('audpc','TPD'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f_&lt;-  dat1_audpc  |&gt; \n                  group_by(Parcela) |&gt; \n                  summarize(audpc = mean(audps,na.rm=TRUE),TPD=mean(audpc2,na.rm=TRUE))\n\ndat1_audpc_f_  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n                        formatRound(c('audpc','TPD'), 2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f |&gt;\n            ggplot(aes(Parcela, audpc, fill = Parcela)) +\n            geom_boxplot() +\n            facet_wrap(~ Evaluacion)+\n            theme_clean()+\n              theme(axis.text = element_text(size = 8),\n                  axis.text.x = element_text( size =10),\n                  axis.title = element_text(size = 10),\n                  strip.text.x=element_text(face=\"bold\",size =10,margin=margin(1,0,1,0)),\n                  plot.background = element_rect(colour = \"white\"),\n                  legend.background = element_rect(colour = \"white\"),\n                  legend.title = element_text( face=\"bold\",size = 10),\n                  legend.text = element_text( size = 10),\n                  plot.title = element_text(size = 15,face=\"bold\"),\n                  plot.subtitle = element_text(size = 15),\n                  legend.position = \"none\" ) +\n              scale_fill_manual(values = c( \"#669933\",\"#FFCC66\",\"#990000\"))+ \n              labs(\n              y = \"% Defoliaci\",\n              title = \"B. Boxplot ABCPE Defoliación\",subtitle =\"\"\n            )\n\n\n\n\n\n\n\n\n\n\n\nCodigo\n# Test de Kruskal-Wallis\nkruskal.test(audpc ~ Parcela, data = dat1_audpc_f)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  audpc by Parcela\nKruskal-Wallis chi-squared = 220.4, df = 2, p-value &lt; 2.2e-16\n\n\nInterpretación del Test de Kruskal-Wallis: Este test no requiere la asunción de normalidad. Si el p-valor es menor que 0.05, hay diferencias significativas entre los grupos.\n\n\nCodigo\nkruskal(dat1_audpc_f$audpc, dat1_audpc_f$Parcela, console = TRUE)\n\n\n\nStudy: dat1_audpc_f$audpc ~ dat1_audpc_f$Parcela\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 220.4003\nDegrees of freedom: 2\nPvalue Chisq  : 0 \n\ndat1_audpc_f$Parcela,  means of the ranks\n\n               dat1_audpc_f.audpc   r\nTto Fungicida            109.8937 160\nTto Nuevo                284.4688 160\nTto Testigo SA           327.1375 160\n\nPost Hoc Analysis\n\nt-Student: 1.96495\nAlpha    : 0.05\nMinimum Significant Difference: 22.43448 \n\nTreatments with the same letter are not significantly different.\n\n               dat1_audpc_f$audpc groups\nTto Testigo SA           327.1375      a\nTto Nuevo                284.4688      b\nTto Fungicida            109.8937      c\n\n\n\n\nCodigo\naov_inc2 &lt;- aov(audpc~ Parcela, data = dat1_audpc_f)\n\naov_inc2\n\n\nCall:\n   aov(formula = audpc ~ Parcela, data = dat1_audpc_f)\n\nTerms:\n                   Parcela  Residuals\nSum of Squares  3490469797 3788596830\nDeg. of Freedom          2        477\n\nResidual standard error: 2818.253\nEstimated effects may be unbalanced\n\n\n\n\nCodigo\naov_inc_means&lt;- cld(emmeans(aov_inc2, ~ Parcela),alpha = 0.05, Letters = LETTERS,reverse=F)\n\naov_inc_means|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('emmean','SE','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\nAnalysis carried out in the FIP606 Copyrigth Gustavo Marin / Gabriela Rivadeneira © 2024\nいいですか、私たちの神は主おひとりです。\nº"
  },
  {
    "objectID": "Aula19.html",
    "href": "Aula19.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula19.html#análisis-de-área-bajo-la-curva-de-progreso-de-la-enfermedad-audpc",
    "href": "Aula19.html#análisis-de-área-bajo-la-curva-de-progreso-de-la-enfermedad-audpc",
    "title": "",
    "section": "Análisis de Área Bajo la Curva de Progreso de la Enfermedad (AUDPC)",
    "text": "Análisis de Área Bajo la Curva de Progreso de la Enfermedad (AUDPC)\n\n¿Qué es el AUDPC?\nEl Área Bajo la Curva de Progreso de la Enfermedad (AUDPC, por sus siglas en inglés) es una medida utilizada en fitopatología para cuantificar el progreso de enfermedades en plantas a lo largo del tiempo. Esta métrica es ampliamente utilizada para comparar la severidad y el impacto de enfermedades entre diferentes tratamientos, variedades de plantas, o condiciones ambientales.\n\n\n¿Cómo se Calcula el AUDPC?\nEl AUDPC se calcula a partir de observaciones repetidas de la severidad de la enfermedad en diferentes momentos del tiempo. La fórmula general para el cálculo del AUDPC es:\nAUDPC = sum_{i=1}^{n-1} ({y_{i+1} + y_i}{2}) (t_{i+1} - t_i)\nDonde: - y_i es la severidad de la enfermedad en el momento t_i. - t_i es el tiempo de la i-ésima observación. - n es el número total de observaciones.\n\n\nImportancia del AUDPC\n\nComparación de Tratamientos:\n\nPermite comparar la eficacia de diferentes tratamientos en el control de enfermedades.\nAyuda a identificar qué tratamiento ofrece la mejor protección contra una enfermedad específica.\n\nEvaluación de Variedades de Plantas:\n\nUtilizado para evaluar la resistencia de diferentes variedades de plantas a una enfermedad.\nAyuda a los fitomejoradores a seleccionar variedades más resistentes para programas de mejoramiento.\n\nMonitoreo del Progreso de la Enfermedad:\n\nProporciona una visión general del progreso de la enfermedad a lo largo del tiempo.\nPermite a los investigadores y agricultores tomar decisiones informadas sobre el manejo de la enfermedad.\n\nInvestigación y Desarrollo:\n\nFundamental en estudios de epidemiología vegetal y en la investigación sobre la dinámica de las enfermedades.\nAyuda a entender cómo diferentes factores (ambientales, genéticos, etc.) afectan el desarrollo de la enfermedad.\n\n\n\n\nEjemplo Práctico en R\nAquí hay un ejemplo práctico de cómo calcular el AUDPC utilizando R, usando un conjunto de datos ficticio sobre la severidad de una enfermedad en diferentes días.\nLa AUDPC es una medida utilizada para cuantificar el progreso de enfermedades en plantas a lo largo del tiempo.\n\n\nCargar Paquetes\n\n\nCodigo\nlibrary(datapasta)\nlibrary(janitor)\nlibrary(gsheet)\nlibrary(googlesheets4)\nlibrary(tidyverse)\nlibrary(gsheet)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(ggthemes)\nlibrary(epifitter)\nlibrary(ggplot2)\nlibrary(nlme)\nlibrary(lme4)\nlibrary(DHARMa)\nlibrary(performance)\nlibrary(report)\nlibrary(emmeans)\nlibrary(multcompView)\nlibrary(multcomp)\nlibrary(corrplot)\nlibrary(see)\nlibrary(lubridate)\nlibrary(agridat)\nlibrary(cowplot)\nlibrary(agricolae)\nlibrary(sf)\nlibrary(broom)\nlibrary(lattice)\nlibrary(car)\nlibrary(scales)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(knitr)\nlibrary(kableExtra)\nlibrary(easyanova)\nlibrary(tidyr)\nlibrary(PerformanceAnalytics)\nlibrary(magrittr)\nlibrary(car)\nlibrary(ggpubr)\nlibrary(rstatix)\nlibrary(reshape)\nlibrary(kableExtra)\nlibrary(formattable)\nlibrary(sjPlot)\nlibrary(sjlabelled)\nlibrary(sjmisc)\nlibrary(ggh4x)\nlibrary(gridExtra)\nlibrary(stringr)\nlibrary(epiR)\nlibrary(ggridges)\nlibrary(DT)\nlibrary(agricolae)\nlibrary(ec50estimator)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(report)\nlibrary(rstatix)\n\n\n\n\nCargar Datos y Agrupar\n\n\nCodigo\ncurve &lt;- read_excel(\"dados-diversos.xlsx\", sheet = \"curve\")\n\ncurve|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))\n\n\n\n\n\n\nVamos a cargar un archivo Excel que contiene los datos de severidad de la enfermedad y luego los agrupamos por tratamientos y días.\n\n\nCodigo\ncurve2 &lt;- curve |&gt; \n  group_by(Irrigation, day) |&gt;\n  summarize(mean_severity = mean(severity),\n            sd_severity = sd(severity))\n\n\ncurve2|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('mean_severity','sd_severity'), 2)\n\n\n\n\n\n\n\n\nVisualizar AUDPC\n\n\nCodigo\ncurve2 |&gt;\n  ggplot (aes(day, mean_severity, \n              linetype = Irrigation, \n              shape = Irrigation, \n              group = Irrigation, \n              color=Irrigation))+\n  geom_line(linewidth = 1)+\n  geom_point(size =3, shape = 16)+\n  geom_errorbar(aes(ymin = mean_severity - sd_severity, ymax = mean_severity + sd_severity), width = 0.1) +\n  labs(title = \"Severidad Media por Día e Irrigación\",\n       x = \"Día\",\n       y = \"Severidad (%)\")+\n  theme_few()+\n  scale_color_few()\n\n\n\n\n\n\n\n\n\n\n\nCalcular AUDPC y Comparar\n\n\nCodigo\ncurve3 &lt;- curve |&gt;\n  group_by(Irrigation, rep) |&gt;\n  summarise(audpc = AUDPC(day, severity, y_proportion = FALSE)) |&gt;\n  pivot_wider(names_from = Irrigation, values_from = audpc)\n\ncurve3|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))|&gt; \n                            formatRound(c('Drip','Furrow'), 2)\n\n\n\n\n\n\n\n\nCodigo\nt.test(curve3$Drip, curve3$Furrow)\n\n\n\n    Welch Two Sample t-test\n\ndata:  curve3$Drip and curve3$Furrow\nt = -1.3773, df = 3.079, p-value = 0.26\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -1.3421436  0.5231436\nsample estimates:\nmean of x mean of y \n 13.38983  13.79933 \n\n\n\n\nInterpretación de Resultados\n\nVisualización Gráfica:\n\nEl gráfico muestra la severidad media de la enfermedad a lo largo del tiempo para diferentes tratamientos de irrigación.\nLas barras de error indican la variabilidad de las observaciones.\n\nPrueba t:\n\nLa prueba t compara las medias de AUDPC entre dos tratamientos de irrigación (por ejemplo, riego por goteo y riego por surco).\nUn resultado significativo indicaría una diferencia estadísticamente significativa en el progreso de la enfermedad entre los dos tratamientos.\n\n\n\n\nEjercicio Práctico: irrigación\n\nCálculo del AUDPC:\n\nLa función AUDPC calcula el área bajo la curva de progreso de la enfermedad para cada combinación de tratamiento y repetición.\nValores más altos de AUDPC indican un mayor progreso de la enfermedad, mientras que valores más bajos indican un menor progreso.\n\n\n\n\nCodigo\nlibrary(epifitter)\ndat1 &lt;- curve |&gt; \n        group_by(Irrigation,rep) |&gt; \n        summarize( audpc= AUDPC(day,severity))\ndat1\n\n\n# A tibble: 6 × 3\n# Groups:   Irrigation [2]\n  Irrigation   rep audpc\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;\n1 Drip           1  13.0\n2 Drip           2  13.9\n3 Drip           3  13.3\n4 Furrow         1  13.5\n5 Furrow         2  14.0\n6 Furrow         3  13.9\n\n\nCodigo\nt&lt;-63\n\ndat1_audpc &lt;- dat1 |&gt; \n  mutate(audpc2 = audpc / t)\ndat1_audpc \n\n\n# A tibble: 6 × 4\n# Groups:   Irrigation [2]\n  Irrigation   rep audpc audpc2\n  &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;  &lt;dbl&gt;\n1 Drip           1  13.0  0.206\n2 Drip           2  13.9  0.220\n3 Drip           3  13.3  0.211\n4 Furrow         1  13.5  0.215\n5 Furrow         2  14.0  0.222\n6 Furrow         3  13.9  0.220\n\n\nCodigo\ndat1_audpc  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\")))|&gt; \n                              formatRound(c(\"audpc\",\"audpc2\"),2)\n\n\n\n\n\n\n\n\nCodigo\ndat1_audpc_f&lt;-  dat1_audpc |&gt; \n                  group_by(Irrigation) |&gt; \n                  summarize(audpc = sum(audpc),TPD=mean(audpc2))\n\ndat1_audpc_f  |&gt; \n  DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\")))|&gt; \n                              formatRound(c(\"audpc\",\"TPD\"),2)\n\n\n\n\n\n\n\n\nCodigo\nf_labels &lt;- data.frame(Irrigation = c(\"Drip\", \"Furrow\"), label = c(\"audpc=40.18\", \"audpc=41.37\"))\n\n\ncurve |&gt; \n    group_by(Irrigation,day) |&gt; \n    summarise(severity=mean(severity)) |&gt; \n    ggplot (aes(day, severity,  fill= Irrigation, group= Irrigation)) +\n    geom_area(stat = \"identity\",position=position_identity(),alpha= 0.5)+\n    scale_fill_manual(values=c(\"Drip\"=\"blue\",\"Furrow\"=\"orange\"))+\n    theme_few()+\n    facet_wrap(~Irrigation)+\n    labs(y = \"Disease severity (%)\",\n         x = \"Time (days)\")+\n    ylim(0,.5)+\n     geom_text(x = 50, y = .45, aes(label = label), data = f_labels)\n\n\n\n\n\n\n\n\n\n\n\nCodigo\nanova_curve&lt;- lm(audpc~ Irrigation + factor(rep), data = dat1_audpc )\n\nanova(anova_curve)\n\n\nAnalysis of Variance Table\n\nResponse: audpc\n            Df  Sum Sq  Mean Sq F value Pr(&gt;F)\nIrrigation   1 0.25154 0.251535  7.8839 0.1069\nfactor(rep)  2 0.46661 0.233303  7.3124 0.1203\nResiduals    2 0.06381 0.031905               \n\n\n\n\nCodigo\ncv.model(anova_curve)\n\n\n[1] 1.313906\n\n\n\n\nEjercicio Práctico: Lesion Size\n\n\nCargar y Manipular Datos\n\n\nCodigo\nlesion_size &lt;- read_excel(\"tan-spot-wheat.xlsx\", sheet = \"lesion_size\")\n\nlesion_size|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))|&gt; \n                            formatRound(\"lesion_size\", 2)\n\n\n\n\n\n\n\n\nCodigo\nlesion2 &lt;- lesion_size |&gt;\n  mutate(lesion_size = as.numeric(lesion_size)) |&gt;\n  group_by(cult, silicio, hai) |&gt;\n  summarise(mean_lesion = mean(lesion_size), sd_lesion = sd(lesion_size))\n\n\nlesion2|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))|&gt; \n                            formatRound(c('mean_lesion','sd_lesion'), 2)\n\n\n\n\n\n\n\n\nVisualizar Datos\n\n\nCodigo\nlesion2 |&gt;\n  ggplot(aes(hai, mean_lesion,\n             linetype = silicio, \n              shape = silicio, \n              group =silicio, \n             color = silicio)) +\n  geom_line(linewidth = 1)+\n  geom_point(size =3, shape = 16)+\n  geom_errorbar(aes(ymin = mean_lesion - sd_lesion, ymax = mean_lesion + sd_lesion), width = 0.1) +\n  facet_wrap(~cult) +\n  labs(y = \"Tamaño de Lesión (mm)\",\n       x = \"Horas Después de Inoculación (hai)\")+\n  theme_few()+\n  scale_color_few()\n\n\n\n\n\n\n\n\n\n\n\nCalcular AUDPC y Visualizar\n\n\nCodigo\nlesion3 &lt;- lesion_size |&gt;\n  mutate(lesion_size = as.numeric(lesion_size)) |&gt;\n  group_by(exp, cult, silicio, rep) |&gt;\n  summarise(audpc = AUDPC(lesion_size, hai))\n\nlesion3|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\")))|&gt; \n                            formatRound(\"audpc\", 2)\n\n\n\n\n\n\n\n\nCodigo\nlesion3 |&gt;\n  ggplot(aes(cult, audpc, fill = silicio)) +\n  geom_boxplot() +\n  facet_wrap(~ exp)+\n  theme_few()+\n  scale_fill_few()\n\n\n\n\n\n\n\n\n\n\n\nAnálisis ANOVA\n\nRealizar ANOVA\n\n\nCodigo\naov1 &lt;- aov(audpc ~ exp * cult * silicio, data = lesion3)\nsummary(aov1)\n\n\n                 Df  Sum Sq Mean Sq F value   Pr(&gt;F)    \nexp               1   54544   54544   0.533 0.470257    \ncult              1  751290  751290   7.335 0.010281 *  \nsilicio           1 9051552 9051552  88.377 3.15e-11 ***\nexp:cult          1   36717   36717   0.359 0.553089    \nexp:silicio       1      49      49   0.000 0.982615    \ncult:silicio      1 1412562 1412562  13.792 0.000689 ***\nexp:cult:silicio  1  143643  143643   1.403 0.244065    \nResiduals        36 3687093  102419                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\nChequear Premisas\n\n\nCodigo\ncheck_normality(aov1)\n\n\nWarning: Non-normality of residuals detected (p = 0.024).\n\n\n\n\nCodigo\ncheck_heteroscedasticity(aov1)\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p = 0.022).\n\n\n\n\nTransformar Datos (si es necesario) y Verificar Medias\n\n\nCodigo\naov1 &lt;- aov(sqrt(audpc) ~ cult * silicio, data = lesion3)\nsummary(aov1)\n\n\n             Df Sum Sq Mean Sq F value   Pr(&gt;F)    \ncult          1  294.0   294.0   13.51 0.000712 ***\nsilicio       1 2363.9  2363.9  108.65 7.81e-13 ***\ncult:silicio  1  526.5   526.5   24.20 1.62e-05 ***\nResiduals    39  848.6    21.8                     \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n1 observation deleted due to missingness\n\n\n\n\nCodigo\ncheck_normality(aov1)\n\n\nOK: residuals appear as normally distributed (p = 0.146).\n\n\n\n\nCodigo\ncheck_heteroscedasticity(aov1)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.638).\n\n\n\n\nCodigo\nm1 &lt;- cld(emmeans(aov1, ~ cult | silicio, type = \"response\"),alpha = 0.05, Letters = LETTERS,reverse=F)\n\nm1 |&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('response','SE','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\n\n\n\nAprendizaje del Día\nEsta guía te ha mostrado cómo visualizar los resultados y cómo llevar a cabo análisis adicionales como AUDPC y ANOVA. Utilizando estas herramientas, puedes analizar y entender mejor tus datos categóricos y sus relaciones.\nSi tienes alguna pregunta adicional o necesitas más ayuda con tu análisis, no dudes en preguntar."
  },
  {
    "objectID": "Aula5.html",
    "href": "Aula5.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula5.html#ejemplo-completo-de-visualización-de-datos",
    "href": "Aula5.html#ejemplo-completo-de-visualización-de-datos",
    "title": "",
    "section": "Ejemplo completo de Visualización de Datos",
    "text": "Ejemplo completo de Visualización de Datos\nA continuación se explica el paso a paso del script, describiendo las funciones importantes utilizadas y los paquetes empleados en cada paso.\n\n1. Cargar Paquetes\nEl primer paso es cargar los paquetes necesarios para la ejecución del script. Estos paquetes proporcionan diversas funciones para la manipulación, visualización y análisis de datos.\n\n\nCodigo\n# datapasta: Facilita el copiado y pegado de datos entre R y otras aplicaciones.\nlibrary(datapasta)\n\n# r4pde: Paquete específico para la resolución de ecuaciones en derivadas parciales (PDE).\nlibrary(r4pde)\n\n# janitor: Proporciona funciones para la limpieza de datos, como la normalización de nombres de columnas.\nlibrary(janitor)\n\n# gsheet: Permite importar datos desde Google Sheets.\nlibrary(gsheet)\n\n# googlesheets4: También permite importar datos desde Google Sheets con mayor funcionalidad.\nlibrary(googlesheets4)\n\n# tidyverse: Conjunto de paquetes para la manipulación y visualización de datos, incluyendo dplyr, ggplot2, tidyr, entre otros.\nlibrary(tidyverse)\n\n# cowplot: Extiende ggplot2 para combinar múltiples gráficos en uno solo.\nlibrary(cowplot)\n\n# patchwork: Facilita la creación de composiciones de múltiples gráficos.\nlibrary(patchwork)\n\n# ggthemes: Proporciona temas adicionales para ggplot2.\nlibrary(ggthemes)\n\n# epifitter: Herramientas para el ajuste de modelos epidemiológicos.\nlibrary(epifitter)\n\n# ggplot2: Parte del tidyverse, utilizado para crear visualizaciones gráficas.\nlibrary(ggplot2)\n\n# nlme: Proporciona herramientas para el ajuste de modelos de efectos mixtos.\nlibrary(nlme)\n\n# lme4: Similar a nlme, también se utiliza para el ajuste de modelos de efectos mixtos.\nlibrary(lme4)\n\n# DHARMa: Ofrece métodos para el diagnóstico de modelos estadísticos mediante simulaciones.\nlibrary(DHARMa)\n\n# performance: Evalúa el rendimiento de los modelos ajustados.\nlibrary(performance)\n\n# report: Automatiza la generación de informes de análisis estadísticos.\nlibrary(report)\n\n# emmeans: Estima medias marginales y realiza contrastes.\nlibrary(emmeans)\n\n# multcompView: Facilita la visualización de pruebas de comparaciones múltiples.\nlibrary(multcompView)\n\n# multcomp: Permite realizar pruebas de comparaciones múltiples.\nlibrary(multcomp)\n\n# corrplot: Herramientas para la visualización de matrices de correlación.\nlibrary(corrplot)\n\n# see: Proporciona funciones para la visualización de datos.\nlibrary(see)\n\n# lubridate: Facilita el manejo y la manipulación de datos de fechas y horas.\nlibrary(lubridate)\n\n# agridat: Datos agrícolas para el análisis estadístico.\nlibrary(agridat)\n\n# agricolae: Herramientas para el análisis estadístico en la agricultura.\nlibrary(agricolae)\n\n# sf: Proporciona herramientas para la manipulación y análisis de datos espaciales simples.\nlibrary(sf)\n\n# broom: Convierte modelos estadísticos en tibbles ordenados.\nlibrary(broom)\n\n# lattice: Permite la creación de gráficos multivariados.\nlibrary(lattice)\n\n# car: Proporciona herramientas para el análisis de regresión.\nlibrary(car)\n\n# scales: Herramientas para el manejo de escalas en ggplot2.\nlibrary(scales)\n\n# readxl: Permite importar datos desde archivos Excel.\nlibrary(readxl)\n\n# dplyr: Parte del tidyverse, utilizado para la manipulación de datos.\nlibrary(dplyr)\n\n# knitr: Herramientas para la generación de informes dinámicos.\nlibrary(knitr)\n\n# kableExtra: Extiende knitr para la creación de tablas dinámicas.\nlibrary(kableExtra)\n\n# easyanova: Herramientas para el análisis de varianza (ANOVA).\nlibrary(easyanova)\n\n# tidyr: Parte del tidyverse, utilizado para la organización de datos.\nlibrary(tidyr)\n\n# PerformanceAnalytics: Herramientas para el análisis de rendimiento financiero.\nlibrary(PerformanceAnalytics)\n\n# magrittr: Proporciona operadores de tuberías para mejorar la legibilidad del código.\nlibrary(magrittr)\n\n# ggpubr: Facilita la creación y publicación de gráficos hechos con ggplot2.\nlibrary(ggpubr)\n\n# rstatix: Simplifica la ejecución de análisis estadísticos comunes.\nlibrary(rstatix)\n\n# reshape: Herramientas para la reestructuración de datos.\nlibrary(reshape)\n\n# formattable: Permite la creación de tablas formateadas en HTML.\nlibrary(formattable)\n\n# sjPlot: Herramientas para la visualización de resultados estadísticos.\nlibrary(sjPlot)\n\n# sjlabelled: Herramientas para trabajar con etiquetas en datos.\nlibrary(sjlabelled)\n\n# sjmisc: Herramientas para la manipulación de datos.\nlibrary(sjmisc)\n\n# ggh4x: Extensiones adicionales para ggplot2.\nlibrary(ggh4x)\n\n# gridExtra: Permite la disposición de gráficos en una cuadrícula.\nlibrary(gridExtra)\n\n# stringr: Parte del tidyverse, utilizado para la manipulación de cadenas de caracteres.\nlibrary(stringr)\n\n# epiR: Herramientas para el análisis epidemiológico.\nlibrary(epiR)\n\n# ggridges: Permite la creación de gráficos de densidad en forma de crestas.\nlibrary(ggridges)\n\n# DT: Permite la creación de tablas interactivas en HTML.\nlibrary(DT)\n\n\n\n\n2. Importar Datos\nEn esta sección se importan los datos desde una hoja de cálculo de Google Sheets utilizando el paquete googlesheets4. Se convierte la variable prova en un factor y se muestra una tabla interactiva utilizando el paquete DT.\n\n\nCodigo\n# Importar datos desde Google Sheets\ndfprova &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1092065531\")\n\n# Convertir la variable 'prova' en un factor\ndfprova$prova &lt;- as.factor(dfprova$prova)\n\n# Mostrar los datos en una tabla interactiva\ndfprova |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\")))\n\n\n\n\n\n\nEste código importa los datos desde una URL específica de Google Sheets, convierte la columna prova en un factor (útil para análisis categóricos) y muestra los datos en una tabla interactiva que permite exportar a Excel o CSV.\n\n\n3. Resumen de Datos\nSe genera un resumen básico para todas las variables numéricas del data frame utilizando la función summary().\n\n\nCodigo\n# Generar un resumen de las variables numéricas\nSummarydb_all &lt;- dfprova |&gt; summary()\nSummarydb_all\n\n\n prova      pontos           nota       \n 1:22   Min.   : 6.00   Min.   : 42.90  \n 2:22   1st Qu.:10.00   1st Qu.: 68.75  \n        Median :12.50   Median : 85.70  \n        Mean   :11.91   Mean   : 79.40  \n        3rd Qu.:14.00   3rd Qu.:100.00  \n        Max.   :16.00   Max.   :100.00  \n\n\nLa función summary() proporciona estadísticas descriptivas como mínimo, máximo, mediana, y cuartiles para todas las variables numéricas del dataframe dfprova.\n\n\n4. Cálculo de Cuantiles\nSe calculan los cuantiles de la variable nota utilizando quantile() y se transforman en un data frame. Luego, se muestra en una tabla interactiva.\n\n\nCodigo\n# Calcular los cuantiles de la variable 'nota'\nQuantile_ &lt;- quantile(dfprova$nota)\nQuantile_ &lt;- as.data.frame(Quantile_)\n\n# Mostrar los cuantiles en una tabla interactiva\nQuantile_ |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(\"Quantile_\", 2)\n\n\n\n\n\n\nEl código calcula los cuantiles de la variable nota, los almacena en un dataframe y luego los muestra en una tabla interactiva que permite exportar los resultados.\n\n\n5. Histogramas\n\nHistograma General\nSe crea un histograma general de la variable nota usando ggplot2. Se utiliza geom_histogram() para crear el histograma y geom_vline() para añadir una línea que indica la media.\n\n\nCodigo\n# Crear un histograma general de la variable 'nota'\nProvas &lt;- dfprova |&gt; \n    ggplot(aes(x = nota)) +\n    geom_histogram(bins = 5, fill = \"#00489a\", color = \"white\") +\n    geom_vline(xintercept = 79.40, linetype = \"dashed\", color = \"red\", size = .8) +\n    theme_few() +\n    annotate(geom = \"text\", x = 82, y = 20, label = \"Mean\") +\n    labs(y = \"Frequency\", x = \"Value (%)\", title = \"Assessments\")\nProvas \n\n\n\n\n\n\n\n\n\nEste bloque de código genera un histograma de la variable nota, utilizando cinco bins (barras), con una línea punteada en color rojo que representa la media de las notas.\n\n\nHistogramas de Subconjuntos\nSe crean histogramas específicos para cada valor de la variable prova utilizando ggplot2 y dplyr para filtrar y resumir los datos.\n\n\nCodigo\n# Histograma y estadísticas descriptivas para 'prova' 1\nProva_1 &lt;- dfprova |&gt; \n    group_by(prova) |&gt; \n    filter(prova == \"1\") |&gt; \n    summarize(nota_mean = mean(nota), nota_med = median(nota), nota_sd = sd(nota))\n\nProva_1 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(c('nota_mean', 'nota_med', 'nota_sd'), 2)\n\n\n\n\n\n\nCodigo\nProva_1_p &lt;- dfprova |&gt; \n    filter(prova == \"1\") |&gt; \n    ggplot(aes(x = nota)) +\n    geom_histogram(bins = 5, fill = \"#9cc414\", color = \"white\") +\n    geom_vline(xintercept = Prova_1$nota_mean, linetype = \"dashed\", color = \"red\", size = .8) +\n    theme_few() +\n    annotate(geom = \"text\", x = 82, y = 7.5, label = \"Mean\") +\n    ylim(0, 10) +\n    labs(y = \"Frequency\", x = \"Value (%)\", title = \"Assessment 1\")\nProva_1_p \n\n\n\n\n\n\n\n\n\nCodigo\n# Histograma y estadísticas descriptivas para 'prova' 2\nProva_2 &lt;- dfprova |&gt; \n    group_by(prova) |&gt; \n    filter(prova == \"2\") |&gt; \n    summarize(nota_mean = mean(nota), nota_med = median(nota), nota_sd = sd(nota))\n\nProva_2 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n                   buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(c('nota_mean', 'nota_med', 'nota_sd'), 2)\n\n\n\n\n\n\nCodigo\nProva_2_p &lt;- dfprova |&gt; \n    filter(prova == \"2\") |&gt; \n    ggplot(aes(x = nota)) +\n    geom_histogram(bins = 5, fill = \"#ffcd38\", color = \"white\") +\n    geom_vline(xintercept = Prova_1$nota_mean, linetype = \"dashed\", color = \"red\", size = .8) +\n    theme_few() +\n    annotate(geom = \"text\", x = 82, y = 7.5, label = \"Mean\") +\n    ylim(0, 10) +\n    labs(y = \"Frequency\", x = \"Value (%)\", title = \"Assessment 2\")\nProva_2_p \n\n\n\n\n\n\n\n\n\nEstos bloques de código generan histogramas separados para cada valor único de la variable prova (en este caso, “1” y “2”). Se calculan las estadísticas descriptivas como la media, la mediana y la desviación estándar, que se muestran en tablas interactivas. Además, se crea un histograma para cada valor de prova con una línea punteada que indica la media.\n\n\n\n6. Combinar Histogramas\nContinuando con la explicación:\nSe combinan los histogramas en una sola visualización utilizando el paquete patchwork, que permite la creación de composiciones de múltiples gráficos.\n\n\nCodigo\n# Combinar los histogramas en una sola visualización\n(Provas | (Prova_1_p / Prova_2_p)) +\n    plot_layout(guides = \"collect\", axes = \"collect\") +\n    plot_annotation(tag_levels = \"A\", title = \"Grade distribution by assessment\")\n\n\n\n\n\n\n\n\n\nA tener en cuenta dentro del código:\n\n(Provas | (Prova_1_p / Prova_2_p)): Utiliza la operación | de patchwork para combinar los gráficos. Provas es el histograma general de todas las notas. (Prova_1_p / Prova_2_p) crea una composición de los histogramas específicos para prova 1 y prova 2.\nplot_layout(guides = \"collect\", axes = \"collect\"): Organiza los ejes y las leyendas para que se muestren de manera adecuada en la composición.\nplot_annotation(tag_levels = \"A\", title = \"Grade distribution by assessment\"): Añade un título principal a la visualización.\n\nEste código genera una sola visualización que muestra la distribución de las notas agrupadas por prova, proporcionando una comparación entre los histogramas general y específicos.\n\n\n7. Resumen de Notas Agrupado\nA continuación, se genera un resumen de las notas agrupado por prova utilizando group_by() y summarize(), y se muestra en una tabla interactiva.\n\n\nCodigo\n# Generar un resumen de las notas agrupado por 'prova'\ndata_nota &lt;- dfprova |&gt; \n    group_by(prova) |&gt; \n    summarize(nota_mean = mean(nota), nota_med = median(nota), nota_sd = sd(nota))\n\ndata_nota |&gt; \n    DT::datatable(\n    extensions = 'Buttons',\n    options = list(dom = 'Bfrtip',\n                   buttons = c('excel', \"csv\"))) |&gt; \n    formatRound(c('nota_mean', 'nota_med', 'nota_sd'), 2)\n\n\n\n\n\n\nEn este código:\n\ngroup_by(prova): Agrupa los datos por cada valor único de prova.\nsummarize(nota_mean = mean(nota), nota_med = median(nota), nota_sd = sd(nota)): Calcula la media, mediana y desviación estándar de la variable nota para cada grupo de prova.\nDT::datatable(): Muestra los resultados en una tabla interactiva utilizando el paquete DT, con opciones para exportar a Excel o CSV.\n\nEsta tabla proporciona un resumen estadístico clave que resume la distribución de las notas agrupadas por cada tipo de evaluación (prova).\n\n\n8. Boxplot de Notas\nFinalmente, se crea un boxplot para visualizar la distribución de las notas por prova utilizando geom_boxplot() y geom_jitter() para añadir puntos de dispersión.\n\n\nCodigo\n# Crear un boxplot de las notas por 'prova'\nP1 &lt;- dfprova |&gt; \n    group_by(prova) |&gt; \n    ggplot(aes(prova, nota, group = prova, fill = prova)) +\n    geom_boxplot()+\n    theme_few()+\n    scale_fill_manual(values = c(\"#669933\", \"#FFCC66\")) \n\nP1\n\n\n\n\n\n\n\n\n\nEn este bloque de código:\n\ngroup_by(prova): Agrupa los datos por cada valor único de prova.\nggplot(aes(prova, nota, group = prova, fill = prova)): Define prova como el eje x, nota como el eje y, y utiliza fill = prova para colorear los boxplots según prova.\ngeom_boxplot(): Crea los boxplots para visualizar la distribución de las notas.\n\nEste gráfico proporciona una representación visual de cómo se distribuyen las notas en cada tipo de evaluación, permitiendo identificar diferencias en la dispersión y la mediana entre los grupos.\n\n\nAprendizaje del día\nEl script proporciona un análisis detallado de los datos, incluyendo importación, resúmenes estadísticos, visualizaciones de distribución y comparación entre diferentes tipos de evaluación. Cada sección utiliza paquetes específicos de R para realizar operaciones estadísticas y generar visualizaciones interactivas y claras."
  },
  {
    "objectID": "Aula1.html",
    "href": "Aula1.html",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "¿Te imaginas dominar un lenguaje de programación que no solo te permita realizar análisis de datos avanzados, sino que también te proporcione una plataforma interactiva para documentar y compartir tus hallazgos de manera profesional? ¡Es posible con R y Quarto! R es un entorno de software estadístico increíblemente versátil que, junto con Quarto, una interfaz amigable y dinámica, hace que el análisis estadístico sea accesible y eficiente para todos. Imagina poder crear informes claros, visualizaciones detalladas y modelos complejos con una sintaxis intuitiva y una comunidad de apoyo inigualable. No solo estarás aprendiendo una habilidad valiosa, sino que te estarás alineando con las tendencias tecnológicas emergentes, preparando tus análisis para el futuro.\nAl entrar en el fascinante mundo del análisis de datos con RStudio, es importante saber por dónde empezar. Existen muchos materiales interesantes y extremadamente útiles disponibles, solo necesitas acceder a ellos y saber cómo usar la información a tu favor. Entre los materiales disponibles, libros como Introducción a la Ciencia de Datos en R, Introduction to R, y The Art of Data Science son esenciales para obtener una comprensión básica de la ciencia de datos y un entendimiento más profundo de cómo realizar exploración y análisis de datos correctamente en R.\nEs importante resaltar que los materiales presentados en este sitio son clases que fueron creadas con el objetivo de agregar conocimiento. Sin embargo, debido a la complejidad de los temas, no fue posible realizar anotaciones detalladas sobre todos los asuntos abordados, por lo tanto, este no debe ser tu punto de partida para el estudio de análisis. Estos materiales, por sí solos, no son capaces de elucidar cuestiones complejas del R, por eso es importante no enfocarse únicamente en este contenido. Así, comenzamos nuestra jornada de conocimiento en R presentando algunos de sus objetos y funciones más básicos.\n\n\n\nPara empezar a trabajar con R, necesitarás instalar R y RStudio:\n\nDescarga e instala R.\nDescarga e instala RStudio.\n\n\n\n\nObjeto: Un objeto es simplemente un nombre que guarda un valor y, para crearlo, utilizamos el operador &lt;-. Ej.: a &lt;- 1. En R, una base de datos es representada por objetos llamados data frames. Siempre que se ejecuta una función, el código que guarda será ejecutado y un resultado nos será devuelto. Entre paréntesis, después del nombre de la función, tenemos lo que llamamos argumentos. Una función puede tener cualquier número de argumentos y ellos siempre están separados por comas. Ej.: sum(1, 2). La función sum() recibió los argumentos 1 y 2.\nClases: Para crear texto en R, colocamos los caracteres entre comillas (” “). Las comillas sirven para diferenciar nombres (objetos, funciones, paquetes) de textos (letras y palabras). Los textos son muy comunes en variables categóricas. Las clases más básicas dentro de R son: numeric, character y logical.\nVectores: Los vectores en R son solo conjuntos indexados de valores. Para crearlos, solo necesitas poner los valores separados por comas dentro de un c(). Cada columna de un data frame será representada como un vector. Ej.: vector1 &lt;- c(1, 5, 3, -10). Una manera fácil de crear un vector con una secuencia de números es utilizar el operador :.\nTestes lógicos: Una operación lógica no es más que un test que retorna verdadero o falso. El verdadero en R será representado por el valor TRUE y el falso por el valor FALSE. Estos nombres en R son reservados, es decir, no puedes llamar a ningún objeto TRUE o FALSE. Ej.: para testar si un valor es igual a otro (operador ==) - 1 == 1 TRUE o 1 == 2 FALSE. Algunos de los principales operadores lógicos son:\n\nx &lt; y (¿x menor que y?)\nx &lt;= y (¿x menor o igual a y?)\nx &gt; y (¿x mayor que y?)\nx &gt;= y (¿x mayor o igual a y?)\nx == y (¿x igual a y?)\nx != y (¿x diferente de y?)\n!x (Negación de x)\nx | y (¿x o y son verdaderos?)\nx & y (¿x y y son verdaderos?)\nx %in% y (¿x pertenece a y?)\nxor(x, y) (¿x o y son verdaderos, pero no ambos?)\n\nValores especiales: NA - representa la ausencia de información, es decir, la información existe, pero nosotros (y R) no sabemos cuál es. El NA para R no es más que el valor faltante o omitido de la Estadística.\nOperador pipe: La idea del operador %&gt;% (pipe) es muy simple: usar el valor resultante de la expresión del lado izquierdo como primer argumento de la función del lado derecho. Se usa el pipe (|&gt; o %&gt;%) para enfatizar una secuencia de comandos o acciones en el chunk y para evitar agregar el nombre del data frame dentro de la función ggplot. El pipe debe tener siempre un espacio antes de él y, generalmente, debe ser seguido por una nueva línea. Después de la primera etapa, cada línea debe tener dos espacios, lo que facilita agregar otras etapas o reorganizar las ya existentes.\nOperador cifrón: Usar el comando cifrón permite acceder a columnas por el nombre. El uso es básicamente el siguiente - datos$cifra, donde datos especifica el conjunto de datos y cifra la variable que deseas extraer. Por ejemplo, para extraer los datos de macacos usa: macac$macacos.\n\n\n\nEsta guía cubre los fundamentos básicos de R. Con práctica y exploración, te familiarizarás más con el lenguaje y sus capacidades. ¡Buena suerte en tu viaje de aprendizaje con R!"
  },
  {
    "objectID": "Aula1.html#instalación-de-r-y-rstudio",
    "href": "Aula1.html#instalación-de-r-y-rstudio",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Para empezar a trabajar con R, necesitarás instalar R y RStudio:\n\nDescarga e instala R.\nDescarga e instala RStudio."
  },
  {
    "objectID": "Aula1.html#objetos-y-funciones",
    "href": "Aula1.html#objetos-y-funciones",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Objeto: Un objeto es simplemente un nombre que guarda un valor y, para crearlo, utilizamos el operador &lt;-. Ej.: a &lt;- 1. En R, una base de datos es representada por objetos llamados data frames. Siempre que se ejecuta una función, el código que guarda será ejecutado y un resultado nos será devuelto. Entre paréntesis, después del nombre de la función, tenemos lo que llamamos argumentos. Una función puede tener cualquier número de argumentos y ellos siempre están separados por comas. Ej.: sum(1, 2). La función sum() recibió los argumentos 1 y 2.\nClases: Para crear texto en R, colocamos los caracteres entre comillas (” “). Las comillas sirven para diferenciar nombres (objetos, funciones, paquetes) de textos (letras y palabras). Los textos son muy comunes en variables categóricas. Las clases más básicas dentro de R son: numeric, character y logical.\nVectores: Los vectores en R son solo conjuntos indexados de valores. Para crearlos, solo necesitas poner los valores separados por comas dentro de un c(). Cada columna de un data frame será representada como un vector. Ej.: vector1 &lt;- c(1, 5, 3, -10). Una manera fácil de crear un vector con una secuencia de números es utilizar el operador :.\nTestes lógicos: Una operación lógica no es más que un test que retorna verdadero o falso. El verdadero en R será representado por el valor TRUE y el falso por el valor FALSE. Estos nombres en R son reservados, es decir, no puedes llamar a ningún objeto TRUE o FALSE. Ej.: para testar si un valor es igual a otro (operador ==) - 1 == 1 TRUE o 1 == 2 FALSE. Algunos de los principales operadores lógicos son:\n\nx &lt; y (¿x menor que y?)\nx &lt;= y (¿x menor o igual a y?)\nx &gt; y (¿x mayor que y?)\nx &gt;= y (¿x mayor o igual a y?)\nx == y (¿x igual a y?)\nx != y (¿x diferente de y?)\n!x (Negación de x)\nx | y (¿x o y son verdaderos?)\nx & y (¿x y y son verdaderos?)\nx %in% y (¿x pertenece a y?)\nxor(x, y) (¿x o y son verdaderos, pero no ambos?)\n\nValores especiales: NA - representa la ausencia de información, es decir, la información existe, pero nosotros (y R) no sabemos cuál es. El NA para R no es más que el valor faltante o omitido de la Estadística.\nOperador pipe: La idea del operador %&gt;% (pipe) es muy simple: usar el valor resultante de la expresión del lado izquierdo como primer argumento de la función del lado derecho. Se usa el pipe (|&gt; o %&gt;%) para enfatizar una secuencia de comandos o acciones en el chunk y para evitar agregar el nombre del data frame dentro de la función ggplot. El pipe debe tener siempre un espacio antes de él y, generalmente, debe ser seguido por una nueva línea. Después de la primera etapa, cada línea debe tener dos espacios, lo que facilita agregar otras etapas o reorganizar las ya existentes.\nOperador cifrón: Usar el comando cifrón permite acceder a columnas por el nombre. El uso es básicamente el siguiente - datos$cifra, donde datos especifica el conjunto de datos y cifra la variable que deseas extraer. Por ejemplo, para extraer los datos de macacos usa: macac$macacos."
  },
  {
    "objectID": "Aula1.html#aprendizaje-del-día",
    "href": "Aula1.html#aprendizaje-del-día",
    "title": "R para Dummies en Fitopatología",
    "section": "",
    "text": "Esta guía cubre los fundamentos básicos de R. Con práctica y exploración, te familiarizarás más con el lenguaje y sus capacidades. ¡Buena suerte en tu viaje de aprendizaje con R!"
  },
  {
    "objectID": "Aula2.html",
    "href": "Aula2.html",
    "title": "Paquetes en RStudio",
    "section": "",
    "text": "Un paquete es como una colección de funciones, datos y archivos de ayuda agrupados en una estructura estándar bien definida que puede ser descargada e instalada en R. Se puede decir que los paquetes son códigos útiles e instalables que permiten extender las capacidades de R para realizar las funciones deseadas. Estos paquetes son compartidos y pueden ser descargados de varias fuentes, siendo las más populares el CRAN, Bioconductor y GitHub. CRAN es el repositorio oficial de R para paquetes creados por usuarios. Bioconductor proporciona software de código abierto orientado a la bioinformática. GitHub es un sitio que hospeda repositorios git para todo tipo de software y proyectos (no solo R). Aquí es donde se alojan las versiones de desarrollo más recientes de los paquetes de R.\nLos paquetes necesarios para ejecutar análisis en R dependen del objetivo del trabajo a realizar, pero algunos paquetes son básicos y esenciales para la mayoría de los análisis, como: Tidyverse, dplyr, readxl, ggplot2, etc. En las próximas clases, profundizaremos un poco más sobre estos paquetes."
  },
  {
    "objectID": "Aula2.html#instalación-y-carga-de-paquetes",
    "href": "Aula2.html#instalación-y-carga-de-paquetes",
    "title": "Paquetes en RStudio",
    "section": "Instalación y carga de paquetes",
    "text": "Instalación y carga de paquetes\nLa instalación y carga de paquetes se puede hacer desde el menú o con un comando en la consola. El flujo básico puede ser consultado en este enlace. La instalación se realiza a través del menú: tools &gt; install packages, yendo a packages &gt; install y escribiendo el nombre del paquete para descargar o usando la función install.packages(nombre_del_paquete) en la consola. Para cargar los paquetes, la función utilizada es library(nombre_del_paquete). El cargado puede hacerse tanto usando library, anotando entre paréntesis el nombre del paquete, como separando los programas por comas dentro del mismo paréntesis. Muchas veces, durante la carga de paquetes, usamos las etiquetas # seguidas por warning: false y message: false para desactivar la visualización de advertencias (warnings) y mensajes durante la ejecución del código, ya que muchos paquetes muestran mensajes y advertencias extensas después de la carga que llenan el archivo innecesariamente.\n\n\nCodigo\nlibrary(tidyverse)  # Conjunto de paquetes para manipulación de datos y gráficos\nlibrary(metafor)    # Paquete para meta-análisis\nlibrary(gsheet)     # Paquete para leer datos desde Google Sheets\nlibrary(remotes)    # Paquete para instalar paquetes desde GitHub y otras fuentes"
  },
  {
    "objectID": "Aula2.html#funciones-de-los-paquetes",
    "href": "Aula2.html#funciones-de-los-paquetes",
    "title": "Paquetes en RStudio",
    "section": "Funciones de los paquetes",
    "text": "Funciones de los paquetes\nLas funciones de los paquetes son variadas y se presentarán de forma más detallada en la próxima clase (Dataframe). Mientras tanto, veremos rápidamente cómo invocar una función de un paquete, específicamente la función arrange del paquete dplyr. Utilizaremos el conjunto de datos mtcars, un conjunto de datos incorporado en R. arrange() es una función del paquete dplyr que permite ordenar los datos en función de una o más variables. En este caso, la función arrange() se aplica al conjunto de datos mtcars, y la variable cyl se especifica como la variable de ordenación. Esto significa que los datos se reorganizarán de forma ascendente en función de la variable cyl. En las líneas siguientes, los comandos utilizados se refieren a la búsqueda de una hoja de cálculo específica en Google Sheets y la instalación de un paquete r4pde directamente desde el repositorio GitHub del usuario Emerson Del Ponte. El signo igual se utiliza para la asignación, que puede ser sustituido por &lt;-. La función head() devuelve las primeras líneas de un objeto de datos o de un conjunto de datos; en este caso, se utiliza para devolver las primeras líneas del conjunto mtcars.\n\n\n\nCodigo\nmtcars\n\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n\n\nCodigo\narrange(mtcars, cyl)\n\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\n\n\nCodigo\nurl &lt;- gsheet2tbl('docs.google.com/spreadsheets/d/1I9mJsS5QnXF2TNNntTy-HrcdHmIF9wJ8ONYvEJTXSNo') \n\nb &lt;- url\ninstall_github(\"emdelponte/r4pde\")\nhead(mtcars)\n\n\n                   mpg cyl disp  hp drat    wt  qsec vs am gear carb\nMazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2\nValiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1\n\n\nPaquete r4pde: En términos generales, la variable unit se crea y se asigna con los valores del 1 al 12 a través de la función c(1:12), luego se crea la variable class. Posteriormente, se crea un data frame ratings con estas variables y, a continuación, se aplica la función DSI del paquete r4pde a los datos. El bloque de comandos más abajo proporciona instrucciones para visualizar los valores, calcular la media (mean), el desvío estándar (sd) y obtener un resumen estadístico de la variable class del conjunto de datos ratings (función summary).\n\n\nCodigo\nlibrary(r4pde)\nunit &lt;- c(1:12)\nclass &lt;- c(2, 3, 1, 1, 3, 4, 5, 0, 2, 5, 2, 1)\nratings &lt;- data.frame(unit, class)\nDSI(unit = ratings$unit, class = ratings$class, max = 6)\n\n\n[1] 40.27778\n\n\nCodigo\nratings$class\n\n\n [1] 2 3 1 1 3 4 5 0 2 5 2 1\n\n\nCodigo\nmean(ratings$class)\n\n\n[1] 2.416667\n\n\nCodigo\nsd(ratings$class)\n\n\n[1] 1.621354\n\n\nCodigo\nsummary(ratings$class)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.000   2.000   2.417   3.250   5.000 \n\n\nCodigo\nsummary(class)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   1.000   2.000   2.417   3.250   5.000"
  },
  {
    "objectID": "Aula3.html",
    "href": "Aula3.html",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "La base de datos es representada por objetos llamados data frames. La principal característica de un data frame es poseer filas y columnas. Para la lectura de datos en R, debe guardarse el archivo en un formato adecuado.\n\n\nComo se mencionó en la clase anterior (Paquetes y carga de paquetes), existen algunos paquetes que son esenciales para realizar análisis en R y, tratándose de data frames, algunos de ellos se destacan.\nPara cargar el data frame, se pueden usar paquetes de R, como el paquete dataset, que tiene en sus funciones el paquete cars.\n\n\nCodigo\ncars\n\n\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85\n\n\nCodigo\ncars2 &lt;- cars\nspeed &lt;- cars2$speed\nspeed\n\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n\nPara crear un data frame de un paquete, basta con cargar el paquete y luego asignarlo. Como ya se mencionó, para asignar una función a otra, basta usar &lt;-. Ej.: buscar en packages el paquete r4pde y cargarlo (usando la función library), dentro del cuadro de ayuda de este paquete, es posible encontrar los data frames incorporados, como RustSoybean. Para usar este cuadro de datos, basta usar la función de asignación.\n\n\nCodigo\nlibrary(r4pde)\ndf &lt;- RustSoybean\ndf\n\n\n# A tibble: 34 × 7\n   epidemia latitude longitude local              planting   detection  severity\n      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;              &lt;date&gt;     &lt;date&gt;        &lt;dbl&gt;\n 1       23    -23.0     -50.1 Cambara            2003-11-25 2004-02-02     24  \n 2       24    -24.0     -52.4 Campo Mourao       2003-11-28 2004-02-02     21  \n 3       31    -15.5     -55.2 Campo Verde        2004-11-20 2005-01-25     78  \n 4        3    -13.3     -44.6 Correntina         2002-11-10 2003-01-03     85  \n 5       15    -13.3     -44.6 Correntina         2003-11-28 2004-01-31     25  \n 6       34    -25.4     -51.5 Guarapuava         2004-11-29 2005-03-14     32  \n 7        7    -29.2     -53.7 Julio Castilhos    2002-12-15 2003-04-10     40  \n 8       13    -12.1     -45.8 Luis Eduardo Maga… 2003-11-12 2004-02-15     39.2\n 9       33    -12.1     -45.8 Luis Eduardo Maga… 2004-11-19 2005-01-25     55  \n10        1    -23.3     -51.2 Londrina           2002-11-06 2003-02-03     45  \n# ℹ 24 more rows\n\n\nLa función para la lectura de datos en R es read.table. R posee un buen número de variantes de esta función, usadas para importar una variedad de formatos de archivos diferentes en R. Las variaciones de la función read.table más útiles son las funciones read.csv y read.csv2 y readxl.\nTidyverse: es un paquete que consolida una serie de herramientas. Forman parte del tidyverse los paquetes dplyr, tidyr, readr, ggplot2, entre muchos otros.\n\n\n\nPara importar datos directamente de otros softwares, es necesario instalar paquetes, como readxl, usado para la importación de hojas de cálculo de Excel. El paquete readxl permite generar data frames de hojas de cálculo Excel y es la forma más sencilla de cargar un archivo en este formato. El paquete readxl no es del conjunto tidyverse, por lo que necesita ser cargado siempre antes de usarlo. La mayoría de las funciones de readxl permiten leer datos de hojas de cálculo Excel, como read_excel. El primer argumento para read_excel es la ruta del archivo que debe ser leído. La ruta del archivo y el nombre del archivo (incluyendo la extensión del archivo) deben ser colocados entre comillas dobles, ya que la función espera que sea una función de carácter.\n\n\nCodigo\nlibrary(readxl)\nmagnesio &lt;- read_excel(\"dados-diversos.xlsx\")\nescala1 &lt;- read_excel(\"dados-diversos.xlsx\", \"escala\")\nescala2 &lt;- read_excel(\"dados-diversos.xlsx\", 2)\n\n\nEn Excel, un archivo puede tener varias hojas. Por defecto, las funciones de lectura traerán solo la primera hoja del archivo. Para traer otra hoja específica, basta con utilizar el argumento sheet seguido del número de la hoja (línea 3 del comando anterior), o añadir el nombre de la hoja deseada entre comillas dobles, separada del nombre de la hoja general por una coma (línea 2 del comando anterior).\n\n\nEl paquete readr del tidyverse es utilizado para importar archivos de texto, como .txt o .csv, para R y su carga se hace, al igual que los demás, con la función library. Readr transforma archivos de texto en tibbles usando funciones como: read.csv() o read_csv() - usadas para importar archivos de valores separados por comas y con la primera línea de los datos con los nombres de las variables. read.csv2 o read_csv2() - usada para importar bases de archivos separados por punto y coma en R. En algunos países, como Brasil, las comas se utilizan para separar las casas decimales de los números, haciendo inviable el uso de archivos .csv. En estos casos, cuando la coma es el separador decimal, los archivos .csv pasan a ser separados por punto y coma, así, esta función asume que los datos son separados por ; y que una coma es usada en lugar de un punto decimal.\nCSV:\n\n\nCodigo\nlibrary(tidyverse)\n\n\n# usando read_csv\nmagnesio3 &lt;- read_csv(\"dados-diversos.csv\")\nmagnesio3\n\n\n# A tibble: 60 × 4\n   Irrigation   rep   day severity\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 Furrow         1     0     0.01\n 2 Furrow         2     0     0.01\n 3 Furrow         3     0     0.01\n 4 Furrow         1     7     0.04\n 5 Furrow         2     7     0.04\n 6 Furrow         3     7     0.04\n 7 Furrow         1    14     0.1 \n 8 Furrow         2    14     0.1 \n 9 Furrow         3    14     0.11\n10 Furrow         1    21     0.11\n# ℹ 50 more rows\n\n\nTXT: Las funciones de readr se usan de forma similar a las de read.table, siendo que muchas veces usan los mismos argumentos. Archivos en formato txt pueden ser importados usando read.table.\n\n\nCodigo\n# usando read.table\nmagnesio4 &lt;-read.table(\"dados-diversos.txt\", header = TRUE)\nmagnesio4\n\n\n   Irrigation.rep.day.severity\n1              Furrow,1,0,0.01\n2              Furrow,2,0,0.01\n3              Furrow,3,0,0.01\n4              Furrow,1,7,0.04\n5              Furrow,2,7,0.04\n6              Furrow,3,7,0.04\n7             Furrow,1,14,0.10\n8             Furrow,2,14,0.10\n9             Furrow,3,14,0.11\n10            Furrow,1,21,0.11\n11            Furrow,2,21,0.10\n12            Furrow,3,21,0.10\n13            Furrow,1,28,0.15\n14            Furrow,2,28,0.17\n15            Furrow,3,28,0.15\n16            Furrow,1,35,0.18\n17            Furrow,2,35,0.19\n18            Furrow,3,35,0.19\n19            Furrow,1,42,0.34\n20            Furrow,2,42,0.38\n21            Furrow,3,42,0.34\n22            Furrow,1,49,0.38\n23            Furrow,2,49,0.39\n24            Furrow,3,49,0.38\n25            Furrow,1,56,0.40\n26            Furrow,2,56,0.41\n27            Furrow,3,56,0.43\n28            Furrow,1,63,0.46\n29            Furrow,2,63,0.46\n30            Furrow,3,63,0.43\n31               Drip,1,0,0.01\n32               Drip,2,0,0.01\n33               Drip,3,0,0.01\n34               Drip,1,7,0.03\n35               Drip,2,7,0.04\n36               Drip,3,7,0.04\n37              Drip,1,14,0.11\n38              Drip,2,14,0.11\n39              Drip,3,14,0.10\n40              Drip,1,21,0.13\n41              Drip,2,21,0.12\n42              Drip,3,21,0.10\n43              Drip,1,28,0.16\n44              Drip,2,28,0.15\n45              Drip,3,28,0.15\n46              Drip,1,35,0.18\n47              Drip,2,35,0.19\n48              Drip,3,35,0.17\n49              Drip,1,42,0.30\n50              Drip,2,42,0.33\n51              Drip,3,42,0.34\n52              Drip,1,49,0.33\n53              Drip,2,49,0.37\n54              Drip,3,49,0.37\n55              Drip,1,56,0.39\n56              Drip,2,56,0.46\n57              Drip,3,56,0.41\n58              Drip,1,63,0.43\n59              Drip,2,63,0.43\n60              Drip,3,63,0.43\n\n\nNota: El argumento header = TRUE especifica que la primera línea de los datos contiene el nombre de las variables (ej. magnesio, nitrogenio), si este no es el caso, solo usa el argumento header = FALSE.\n\n\n\n\nPara importar hojas de cálculo de Google, usa la función gsheet2tbl (read_sheet), presente en el paquete googlesheets4 o el paquete gsheet. Como estos paquetes tampoco son parte del conjunto tidyverse, necesitas cargarlos para usarlos. La función gsheet2tbl lee el archivo (hoja de cálculo de Google) a partir de una URL (copias y pegas el enlace de la hoja de cálculo deseada).\n\n\nCodigo\n# usando el paquete gsheet\nlibrary(gsheet)\nlibrary(car)\nlibrary(dplyr)\n\nsurvey &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\nsurvey \n\n\n# A tibble: 666 × 6\n    year state residue   inc inc_class species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;  \n 1  2011 RS    soybean     1 low       Fgra   \n 2  2011 RS    soybean     1 low       Fgra   \n 3  2011 RS    soybean     1 low       Fgra   \n 4  2011 RS    soybean     1 low       Fgra   \n 5  2011 RS    soybean     1 low       Fgra   \n 6  2011 RS    soybean     1 low       Fgra   \n 7  2011 RS    corn        1 low       Fgra   \n 8  2010 RS    soybean     2 low       Fspp   \n 9  2010 RS    corn        2 low       Fgra   \n10  2011 RS    soybean     2 low       Fgra   \n# ℹ 656 more rows\n\n\n\n\n\n\n\nEl paquete DT en R permite crear tablas interactivas a partir de data frames. Estas tablas son fáciles de explorar y personalizar, lo que facilita la visualización de datos en un formato tabular. DT se basa en la biblioteca JavaScript DataTables, que proporciona una variedad de funcionalidades como paginación, búsqueda, ordenación y mucho más.\n\n\nPrimero, necesitas instalar y cargar el paquete DT. Esto se puede hacer utilizando los siguientes comandos en R:\n\n\nCodigo\n# Instalación del paquete DT\n#install.packages(\"DT\")\n\n# Carga del paquete DT\nlibrary(DT)\n\n\n\n\n\nPara crear una tabla interactiva básica a partir de un data frame, puedes usar la función datatable(). Aquí hay un ejemplo utilizando el conjunto de datos mtcars que viene incorporado en R:\n\n\nCodigo\n# Crear una tabla interactiva con el conjunto de datos mtcars\ndatatable(magnesio3)\n\n\n\n\n\n\n\n\n\nPuedes personalizar la tabla interactiva de muchas maneras. Aquí hay algunos ejemplos de opciones comunes:\n\nPaginación: Controlar el número de filas que se muestran por página.\nOrdenación: Habilitar o deshabilitar la ordenación de columnas.\nBúsqueda: Añadir una barra de búsqueda para filtrar filas.\n\n\n\nCodigo\n# Tabla interactiva con opciones personalizadas\ndatatable(magnesio3, \n          options = list(\n            pageLength = 5,  # Número de filas por página\n            order = list(list(0, 'asc')),  # Ordenar por la primera columna en orden ascendente\n            searching = TRUE  # Habilitar la barra de búsqueda\n          ))\n\n\n\n\n\n\n\n\n\nPuedes utilizar opciones más avanzadas para personalizar el formato de la tabla, como colorear celdas basadas en valores:\n\n\nCodigo\n# Tabla interactiva con celdas coloreadas\ndatatable(magnesio3) %&gt;%\n  formatStyle(\n    'severity',  # Columna a formatear\n    backgroundColor = styleInterval(.4, c('lightgreen', 'lightcoral'))  # Colores basados en intervalos de valores\n  )\n\n\n\n\n\n\n\n\n\nEl paquete DT se integra perfectamente con documentos R Markdown y Quarto, permitiendo incluir tablas interactivas en tus informes y presentaciones.\n\n\nCodigo\nlibrary(DT)\ndatatable(magnesio3)\n\n\n\n\n\n\n\n\n\nEl paquete DT en R es una herramienta poderosa para crear tablas interactivas que son fáciles de usar y altamente personalizables. Con DT, puedes transformar simples data frames en visualizaciones interactivas y atractivas, mejorando la presentación de tus datos en informes y dashboards.\n\n\n\n\n\nPara exportar tablas interactivas en formato Excel y CSV utilizando el paquete DT, puedes usar la opción buttons en el parámetro extensions de la función datatable(). La librería DT permite añadir botones que facilitan la exportación de los datos en varios formatos, incluyendo Excel y CSV.\n\n\nPrimero, asegúrate de tener los paquetes necesarios instalados y cargados:\n\n\nCodigo\n# Instala el paquete DT si aún no lo has hecho\n#install.packages(\"DT\")\n\n# Carga el paquete DT\nlibrary(DT)\n\n\n\n\n\nAquí tienes un ejemplo completo de cómo crear una tabla interactiva con opciones para exportar en Excel y CSV:\n\n\nCodigo\n# Crear una tabla interactiva con botones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\n\nextensions = 'Buttons': Esta opción habilita la extensión de botones para DataTables.\ndom = 'Bfrtip': Controla la disposición de los elementos de la tabla. B es para los botones, f para la barra de búsqueda (filter), r para la información sobre el procesamiento (processing), t para la tabla (table), i para la información (information), y p para la paginación (pagination).\nbuttons = c('csv', 'excel'): Especifica que se deben incluir botones para exportar en formato CSV y Excel.\npageLength = 5: Opcional, establece el número de filas que se muestran por página.\n\n\n\n\nAquí tienes un ejemplo completo en un script que incluye la instalación, carga y creación de la tabla interactiva con los botones de exportación:\n\n\nCodigo\n# Instalar y cargar el paquete DT\n\nlibrary(DT)\n\n# Crear una tabla interactiva con botones de exportación\ndatatable(mtcars, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\nSi estás trabajando en un documento R Markdown o Quarto, puedes integrar la tabla interactiva de la siguiente manera:\n\n\nCodigo\nlibrary(DT)\n\n# Crear una tabla interactiva con botones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\n\nAsegúrate de tener acceso a internet cuando uses las extensiones de DT, ya que estas dependen de bibliotecas JavaScript externas.\nPuedes agregar más botones de exportación, como PDF e impresión, añadiéndolos en la lista de buttons.\n\n\n\nCodigo\n# Crear una tabla interactiva con más opciones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel', 'pdf', 'print'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\n\n\n\nDesde el plugging Addins busca paste as tibble y pega la base de datos que has copiado de un texto plano o de un documento .xls o .csv\n\n\nCodigo\nlibrary(tibble)\n\n# Crear el tibble con datos  de fitopatología\ndatos_fitopatologia &lt;- tibble::tribble(\n  ~cultivar,    ~parcela, ~incidencia,\n  \"Cultivar A\",  1,       15,\n  \"Cultivar A\",  2,       18,\n  \"Cultivar A\",  3,       12,\n  \"Cultivar B\",  1,       20,\n  \"Cultivar B\",  2,       22,\n  \"Cultivar B\",  3,       16,\n  \"Cultivar C\",  1,       14,\n  \"Cultivar C\",  2,       19,\n  \"Cultivar C\",  3,       13\n)\n\ndatos_fitopatologia\n\n\n# A tibble: 9 × 3\n  cultivar   parcela incidencia\n  &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Cultivar A       1         15\n2 Cultivar A       2         18\n3 Cultivar A       3         12\n4 Cultivar B       1         20\n5 Cultivar B       2         22\n6 Cultivar B       3         16\n7 Cultivar C       1         14\n8 Cultivar C       2         19\n9 Cultivar C       3         13\n\n\nEn este ejemplo, datos_fitopatologia es un tibble con tres columnas: cultivar, parcela, y incidencia. Cada fila representa la incidencia de una enfermedad en una parcela específica de un cultivar."
  },
  {
    "objectID": "Aula3.html#tipos-de-data-frames-y-las-funciones-de-paquetes",
    "href": "Aula3.html#tipos-de-data-frames-y-las-funciones-de-paquetes",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "Como se mencionó en la clase anterior (Paquetes y carga de paquetes), existen algunos paquetes que son esenciales para realizar análisis en R y, tratándose de data frames, algunos de ellos se destacan.\nPara cargar el data frame, se pueden usar paquetes de R, como el paquete dataset, que tiene en sus funciones el paquete cars.\n\n\nCodigo\ncars\n\n\n   speed dist\n1      4    2\n2      4   10\n3      7    4\n4      7   22\n5      8   16\n6      9   10\n7     10   18\n8     10   26\n9     10   34\n10    11   17\n11    11   28\n12    12   14\n13    12   20\n14    12   24\n15    12   28\n16    13   26\n17    13   34\n18    13   34\n19    13   46\n20    14   26\n21    14   36\n22    14   60\n23    14   80\n24    15   20\n25    15   26\n26    15   54\n27    16   32\n28    16   40\n29    17   32\n30    17   40\n31    17   50\n32    18   42\n33    18   56\n34    18   76\n35    18   84\n36    19   36\n37    19   46\n38    19   68\n39    20   32\n40    20   48\n41    20   52\n42    20   56\n43    20   64\n44    22   66\n45    23   54\n46    24   70\n47    24   92\n48    24   93\n49    24  120\n50    25   85\n\n\nCodigo\ncars2 &lt;- cars\nspeed &lt;- cars2$speed\nspeed\n\n\n [1]  4  4  7  7  8  9 10 10 10 11 11 12 12 12 12 13 13 13 13 14 14 14 14 15 15\n[26] 15 16 16 17 17 17 18 18 18 18 19 19 19 20 20 20 20 20 22 23 24 24 24 24 25\n\n\nPara crear un data frame de un paquete, basta con cargar el paquete y luego asignarlo. Como ya se mencionó, para asignar una función a otra, basta usar &lt;-. Ej.: buscar en packages el paquete r4pde y cargarlo (usando la función library), dentro del cuadro de ayuda de este paquete, es posible encontrar los data frames incorporados, como RustSoybean. Para usar este cuadro de datos, basta usar la función de asignación.\n\n\nCodigo\nlibrary(r4pde)\ndf &lt;- RustSoybean\ndf\n\n\n# A tibble: 34 × 7\n   epidemia latitude longitude local              planting   detection  severity\n      &lt;dbl&gt;    &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;              &lt;date&gt;     &lt;date&gt;        &lt;dbl&gt;\n 1       23    -23.0     -50.1 Cambara            2003-11-25 2004-02-02     24  \n 2       24    -24.0     -52.4 Campo Mourao       2003-11-28 2004-02-02     21  \n 3       31    -15.5     -55.2 Campo Verde        2004-11-20 2005-01-25     78  \n 4        3    -13.3     -44.6 Correntina         2002-11-10 2003-01-03     85  \n 5       15    -13.3     -44.6 Correntina         2003-11-28 2004-01-31     25  \n 6       34    -25.4     -51.5 Guarapuava         2004-11-29 2005-03-14     32  \n 7        7    -29.2     -53.7 Julio Castilhos    2002-12-15 2003-04-10     40  \n 8       13    -12.1     -45.8 Luis Eduardo Maga… 2003-11-12 2004-02-15     39.2\n 9       33    -12.1     -45.8 Luis Eduardo Maga… 2004-11-19 2005-01-25     55  \n10        1    -23.3     -51.2 Londrina           2002-11-06 2003-02-03     45  \n# ℹ 24 more rows\n\n\nLa función para la lectura de datos en R es read.table. R posee un buen número de variantes de esta función, usadas para importar una variedad de formatos de archivos diferentes en R. Las variaciones de la función read.table más útiles son las funciones read.csv y read.csv2 y readxl.\nTidyverse: es un paquete que consolida una serie de herramientas. Forman parte del tidyverse los paquetes dplyr, tidyr, readr, ggplot2, entre muchos otros."
  },
  {
    "objectID": "Aula3.html#datos-en-formato-excel-paquete-readxl",
    "href": "Aula3.html#datos-en-formato-excel-paquete-readxl",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "Para importar datos directamente de otros softwares, es necesario instalar paquetes, como readxl, usado para la importación de hojas de cálculo de Excel. El paquete readxl permite generar data frames de hojas de cálculo Excel y es la forma más sencilla de cargar un archivo en este formato. El paquete readxl no es del conjunto tidyverse, por lo que necesita ser cargado siempre antes de usarlo. La mayoría de las funciones de readxl permiten leer datos de hojas de cálculo Excel, como read_excel. El primer argumento para read_excel es la ruta del archivo que debe ser leído. La ruta del archivo y el nombre del archivo (incluyendo la extensión del archivo) deben ser colocados entre comillas dobles, ya que la función espera que sea una función de carácter.\n\n\nCodigo\nlibrary(readxl)\nmagnesio &lt;- read_excel(\"dados-diversos.xlsx\")\nescala1 &lt;- read_excel(\"dados-diversos.xlsx\", \"escala\")\nescala2 &lt;- read_excel(\"dados-diversos.xlsx\", 2)\n\n\nEn Excel, un archivo puede tener varias hojas. Por defecto, las funciones de lectura traerán solo la primera hoja del archivo. Para traer otra hoja específica, basta con utilizar el argumento sheet seguido del número de la hoja (línea 3 del comando anterior), o añadir el nombre de la hoja deseada entre comillas dobles, separada del nombre de la hoja general por una coma (línea 2 del comando anterior).\n\n\nEl paquete readr del tidyverse es utilizado para importar archivos de texto, como .txt o .csv, para R y su carga se hace, al igual que los demás, con la función library. Readr transforma archivos de texto en tibbles usando funciones como: read.csv() o read_csv() - usadas para importar archivos de valores separados por comas y con la primera línea de los datos con los nombres de las variables. read.csv2 o read_csv2() - usada para importar bases de archivos separados por punto y coma en R. En algunos países, como Brasil, las comas se utilizan para separar las casas decimales de los números, haciendo inviable el uso de archivos .csv. En estos casos, cuando la coma es el separador decimal, los archivos .csv pasan a ser separados por punto y coma, así, esta función asume que los datos son separados por ; y que una coma es usada en lugar de un punto decimal.\nCSV:\n\n\nCodigo\nlibrary(tidyverse)\n\n\n# usando read_csv\nmagnesio3 &lt;- read_csv(\"dados-diversos.csv\")\nmagnesio3\n\n\n# A tibble: 60 × 4\n   Irrigation   rep   day severity\n   &lt;chr&gt;      &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 Furrow         1     0     0.01\n 2 Furrow         2     0     0.01\n 3 Furrow         3     0     0.01\n 4 Furrow         1     7     0.04\n 5 Furrow         2     7     0.04\n 6 Furrow         3     7     0.04\n 7 Furrow         1    14     0.1 \n 8 Furrow         2    14     0.1 \n 9 Furrow         3    14     0.11\n10 Furrow         1    21     0.11\n# ℹ 50 more rows\n\n\nTXT: Las funciones de readr se usan de forma similar a las de read.table, siendo que muchas veces usan los mismos argumentos. Archivos en formato txt pueden ser importados usando read.table.\n\n\nCodigo\n# usando read.table\nmagnesio4 &lt;-read.table(\"dados-diversos.txt\", header = TRUE)\nmagnesio4\n\n\n   Irrigation.rep.day.severity\n1              Furrow,1,0,0.01\n2              Furrow,2,0,0.01\n3              Furrow,3,0,0.01\n4              Furrow,1,7,0.04\n5              Furrow,2,7,0.04\n6              Furrow,3,7,0.04\n7             Furrow,1,14,0.10\n8             Furrow,2,14,0.10\n9             Furrow,3,14,0.11\n10            Furrow,1,21,0.11\n11            Furrow,2,21,0.10\n12            Furrow,3,21,0.10\n13            Furrow,1,28,0.15\n14            Furrow,2,28,0.17\n15            Furrow,3,28,0.15\n16            Furrow,1,35,0.18\n17            Furrow,2,35,0.19\n18            Furrow,3,35,0.19\n19            Furrow,1,42,0.34\n20            Furrow,2,42,0.38\n21            Furrow,3,42,0.34\n22            Furrow,1,49,0.38\n23            Furrow,2,49,0.39\n24            Furrow,3,49,0.38\n25            Furrow,1,56,0.40\n26            Furrow,2,56,0.41\n27            Furrow,3,56,0.43\n28            Furrow,1,63,0.46\n29            Furrow,2,63,0.46\n30            Furrow,3,63,0.43\n31               Drip,1,0,0.01\n32               Drip,2,0,0.01\n33               Drip,3,0,0.01\n34               Drip,1,7,0.03\n35               Drip,2,7,0.04\n36               Drip,3,7,0.04\n37              Drip,1,14,0.11\n38              Drip,2,14,0.11\n39              Drip,3,14,0.10\n40              Drip,1,21,0.13\n41              Drip,2,21,0.12\n42              Drip,3,21,0.10\n43              Drip,1,28,0.16\n44              Drip,2,28,0.15\n45              Drip,3,28,0.15\n46              Drip,1,35,0.18\n47              Drip,2,35,0.19\n48              Drip,3,35,0.17\n49              Drip,1,42,0.30\n50              Drip,2,42,0.33\n51              Drip,3,42,0.34\n52              Drip,1,49,0.33\n53              Drip,2,49,0.37\n54              Drip,3,49,0.37\n55              Drip,1,56,0.39\n56              Drip,2,56,0.46\n57              Drip,3,56,0.41\n58              Drip,1,63,0.43\n59              Drip,2,63,0.43\n60              Drip,3,63,0.43\n\n\nNota: El argumento header = TRUE especifica que la primera línea de los datos contiene el nombre de las variables (ej. magnesio, nitrogenio), si este no es el caso, solo usa el argumento header = FALSE."
  },
  {
    "objectID": "Aula3.html#datos-en-hojas-de-cálculo-de-google-sheets",
    "href": "Aula3.html#datos-en-hojas-de-cálculo-de-google-sheets",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "Para importar hojas de cálculo de Google, usa la función gsheet2tbl (read_sheet), presente en el paquete googlesheets4 o el paquete gsheet. Como estos paquetes tampoco son parte del conjunto tidyverse, necesitas cargarlos para usarlos. La función gsheet2tbl lee el archivo (hoja de cálculo de Google) a partir de una URL (copias y pegas el enlace de la hoja de cálculo deseada).\n\n\nCodigo\n# usando el paquete gsheet\nlibrary(gsheet)\nlibrary(car)\nlibrary(dplyr)\n\nsurvey &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738\")\nsurvey \n\n\n# A tibble: 666 × 6\n    year state residue   inc inc_class species\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;  \n 1  2011 RS    soybean     1 low       Fgra   \n 2  2011 RS    soybean     1 low       Fgra   \n 3  2011 RS    soybean     1 low       Fgra   \n 4  2011 RS    soybean     1 low       Fgra   \n 5  2011 RS    soybean     1 low       Fgra   \n 6  2011 RS    soybean     1 low       Fgra   \n 7  2011 RS    corn        1 low       Fgra   \n 8  2010 RS    soybean     2 low       Fspp   \n 9  2010 RS    corn        2 low       Fgra   \n10  2011 RS    soybean     2 low       Fgra   \n# ℹ 656 more rows"
  },
  {
    "objectID": "Aula3.html#tablas-interactivas",
    "href": "Aula3.html#tablas-interactivas",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "El paquete DT en R permite crear tablas interactivas a partir de data frames. Estas tablas son fáciles de explorar y personalizar, lo que facilita la visualización de datos en un formato tabular. DT se basa en la biblioteca JavaScript DataTables, que proporciona una variedad de funcionalidades como paginación, búsqueda, ordenación y mucho más.\n\n\nPrimero, necesitas instalar y cargar el paquete DT. Esto se puede hacer utilizando los siguientes comandos en R:\n\n\nCodigo\n# Instalación del paquete DT\n#install.packages(\"DT\")\n\n# Carga del paquete DT\nlibrary(DT)\n\n\n\n\n\nPara crear una tabla interactiva básica a partir de un data frame, puedes usar la función datatable(). Aquí hay un ejemplo utilizando el conjunto de datos mtcars que viene incorporado en R:\n\n\nCodigo\n# Crear una tabla interactiva con el conjunto de datos mtcars\ndatatable(magnesio3)\n\n\n\n\n\n\n\n\n\nPuedes personalizar la tabla interactiva de muchas maneras. Aquí hay algunos ejemplos de opciones comunes:\n\nPaginación: Controlar el número de filas que se muestran por página.\nOrdenación: Habilitar o deshabilitar la ordenación de columnas.\nBúsqueda: Añadir una barra de búsqueda para filtrar filas.\n\n\n\nCodigo\n# Tabla interactiva con opciones personalizadas\ndatatable(magnesio3, \n          options = list(\n            pageLength = 5,  # Número de filas por página\n            order = list(list(0, 'asc')),  # Ordenar por la primera columna en orden ascendente\n            searching = TRUE  # Habilitar la barra de búsqueda\n          ))\n\n\n\n\n\n\n\n\n\nPuedes utilizar opciones más avanzadas para personalizar el formato de la tabla, como colorear celdas basadas en valores:\n\n\nCodigo\n# Tabla interactiva con celdas coloreadas\ndatatable(magnesio3) %&gt;%\n  formatStyle(\n    'severity',  # Columna a formatear\n    backgroundColor = styleInterval(.4, c('lightgreen', 'lightcoral'))  # Colores basados en intervalos de valores\n  )\n\n\n\n\n\n\n\n\n\nEl paquete DT se integra perfectamente con documentos R Markdown y Quarto, permitiendo incluir tablas interactivas en tus informes y presentaciones.\n\n\nCodigo\nlibrary(DT)\ndatatable(magnesio3)\n\n\n\n\n\n\n\n\n\nEl paquete DT en R es una herramienta poderosa para crear tablas interactivas que son fáciles de usar y altamente personalizables. Con DT, puedes transformar simples data frames en visualizaciones interactivas y atractivas, mejorando la presentación de tus datos en informes y dashboards."
  },
  {
    "objectID": "Aula3.html#exportación-de-tablas-interactivas-en-formato-excel-y-csv",
    "href": "Aula3.html#exportación-de-tablas-interactivas-en-formato-excel-y-csv",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "Para exportar tablas interactivas en formato Excel y CSV utilizando el paquete DT, puedes usar la opción buttons en el parámetro extensions de la función datatable(). La librería DT permite añadir botones que facilitan la exportación de los datos en varios formatos, incluyendo Excel y CSV.\n\n\nPrimero, asegúrate de tener los paquetes necesarios instalados y cargados:\n\n\nCodigo\n# Instala el paquete DT si aún no lo has hecho\n#install.packages(\"DT\")\n\n# Carga el paquete DT\nlibrary(DT)\n\n\n\n\n\nAquí tienes un ejemplo completo de cómo crear una tabla interactiva con opciones para exportar en Excel y CSV:\n\n\nCodigo\n# Crear una tabla interactiva con botones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\n\nextensions = 'Buttons': Esta opción habilita la extensión de botones para DataTables.\ndom = 'Bfrtip': Controla la disposición de los elementos de la tabla. B es para los botones, f para la barra de búsqueda (filter), r para la información sobre el procesamiento (processing), t para la tabla (table), i para la información (information), y p para la paginación (pagination).\nbuttons = c('csv', 'excel'): Especifica que se deben incluir botones para exportar en formato CSV y Excel.\npageLength = 5: Opcional, establece el número de filas que se muestran por página.\n\n\n\n\nAquí tienes un ejemplo completo en un script que incluye la instalación, carga y creación de la tabla interactiva con los botones de exportación:\n\n\nCodigo\n# Instalar y cargar el paquete DT\n\nlibrary(DT)\n\n# Crear una tabla interactiva con botones de exportación\ndatatable(mtcars, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\nSi estás trabajando en un documento R Markdown o Quarto, puedes integrar la tabla interactiva de la siguiente manera:\n\n\nCodigo\nlibrary(DT)\n\n# Crear una tabla interactiva con botones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel'),\n            pageLength = 5  # Número de filas por página\n          ))\n\n\n\n\n\n\n\n\n\n\nAsegúrate de tener acceso a internet cuando uses las extensiones de DT, ya que estas dependen de bibliotecas JavaScript externas.\nPuedes agregar más botones de exportación, como PDF e impresión, añadiéndolos en la lista de buttons.\n\n\n\nCodigo\n# Crear una tabla interactiva con más opciones de exportación\ndatatable(magnesio3, \n          extensions = 'Buttons', \n          options = list(\n            dom = 'Bfrtip',\n            buttons = c('csv', 'excel', 'pdf', 'print'),\n            pageLength = 5  # Número de filas por página\n          ))"
  },
  {
    "objectID": "Aula3.html#extra-generar-dataframe-usando-tibble",
    "href": "Aula3.html#extra-generar-dataframe-usando-tibble",
    "title": "Data frames o Tablas en RStudio",
    "section": "",
    "text": "Desde el plugging Addins busca paste as tibble y pega la base de datos que has copiado de un texto plano o de un documento .xls o .csv\n\n\nCodigo\nlibrary(tibble)\n\n# Crear el tibble con datos  de fitopatología\ndatos_fitopatologia &lt;- tibble::tribble(\n  ~cultivar,    ~parcela, ~incidencia,\n  \"Cultivar A\",  1,       15,\n  \"Cultivar A\",  2,       18,\n  \"Cultivar A\",  3,       12,\n  \"Cultivar B\",  1,       20,\n  \"Cultivar B\",  2,       22,\n  \"Cultivar B\",  3,       16,\n  \"Cultivar C\",  1,       14,\n  \"Cultivar C\",  2,       19,\n  \"Cultivar C\",  3,       13\n)\n\ndatos_fitopatologia\n\n\n# A tibble: 9 × 3\n  cultivar   parcela incidencia\n  &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;\n1 Cultivar A       1         15\n2 Cultivar A       2         18\n3 Cultivar A       3         12\n4 Cultivar B       1         20\n5 Cultivar B       2         22\n6 Cultivar B       3         16\n7 Cultivar C       1         14\n8 Cultivar C       2         19\n9 Cultivar C       3         13\n\n\nEn este ejemplo, datos_fitopatologia es un tibble con tres columnas: cultivar, parcela, y incidencia. Cada fila representa la incidencia de una enfermedad en una parcela específica de un cultivar."
  },
  {
    "objectID": "indexP.html",
    "href": "indexP.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n  \n \n \n  \n   \n  \n    \n     Instagram\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Github\n  \n  \n    \n     Email\n  \n\n\n\nOlá! Eu sou Gustavo Marín, doutorando no programa de pós-graduação em Fitopatologia da Universidade Federal de Viçosa, Brasil. Sou Engenheiro Agrônomo pela Universidade Nacional da Colômbia (Palmira) e obtive meu Mestrado em Fitopatologia em 2015 na Universidade Federal de Viçosa. Agora faço parte do grupo de trabalho no Laboratório de Genômica e Genética de Interações Planta-Patógeno coordenado pelo professor Sérgio H. Brommonshenckel.\n\nBem-vindos ao meu site\nEste site foi criado com muito entusiasmo utilizando Quarto Markdown para a disciplina FIP606 - Análise e visualização de dados em Fitopatologia, ministrada pelo professor Emerson Del Ponte. Aqui você encontrará material das aulas, organizado de maneira temática e pensado especialmente para facilitar o aprendizado.\n\n\nO que você encontrará neste site?\n\nMaterial de aula: Documentos, apresentações e recursos utilizados durante as aulas.\nTutoriais em R: Guias passo a passo para a análise e visualização de dados fitopatológicos utilizando R.\nProjetos e exemplos: Casos práticos que ajudarão você a compreender melhor o uso de ferramentas de análise no campo da fitopatologia.\n\n\n\nExplorando o fascinante mundo da análise de dados fitopatológicos\nEste site é projetado para iniciantes em R e aqueles interessados na análise de dados fitopatológicos. À medida que você navega pelas diferentes seções, encontrará informações e recursos que ajudarão a desenvolver suas habilidades em R e aplicar esses conhecimentos à fitopatologia.\n\n\nContate-me!\nSe você tiver alguma dúvida ou precisar de mais informações, não hesite em entrar em contato comigo. Estou aqui para ajudar no seu caminho de aprendizado.\n\nExplore, aprenda e desfrute do fascinante mundo da análise de dados fitopatológicos. Bem-vindo a bordo!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n\nCodigo\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "Aula10.html",
    "href": "Aula10.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula10.html#anova-con-1-factor",
    "href": "Aula10.html#anova-con-1-factor",
    "title": "",
    "section": "ANOVA con 1 Factor",
    "text": "ANOVA con 1 Factor\n\nSituación\nUn experimento con un factor en un diseño completamente aleatorizado para comparar el crecimiento micelial de diferentes especies de un hongo fitopatógeno. La respuesta a estudiar es la TCM (tasa de crecimiento micelial). Pregunta a responder: ¿Hay efecto de la especie en el crecimiento micelial?\n\n\nPreparo Pre-Análisis\nCargamento de Paquetes e Importación de los Datos\n\n\nCodigo\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(DT)\n\n\n\n\nCodigo\n# Cargar los datos desde un archivo Excel\nmicelial &lt;- read_excel(\"dados-diversos.xlsx\", \"micelial\")\n\nmicelial |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nVisualización de los Datos\n\n\nCodigo\nmicelial %&gt;%\n  ggplot(aes(especie, tcm, fill = especie)) +\n  geom_boxplot()+\n  theme_few()+\n  scale_fill_few()\n\n\n\n\n\n\n\n\n\n\n\nModelo usando aov()\n\n\nCodigo\n# Crear el modelo ANOVA\naov1 &lt;- aov(tcm ~ especie, data = micelial)\n\n# Resumen del modelo\nsummary(aov1)\n\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)\nespecie      4 0.4692 0.11729   1.983  0.117\nResiduals   37 2.1885 0.05915               \n\n\nInterpretación: En este conjunto de datos, no hay diferencia significativa en la media micelial (no hay efecto significativo de la especie sobre el crecimiento micelial).\n\n\nTestando las Premisas\nPara probar las premisas, cargamos los paquetes performance y DHARMa.\n\n\nCodigo\nlibrary(performance)\nlibrary(DHARMa)\n\n# Chequear homocedasticidad y normalidad\ncheck_heteroscedasticity(aov1)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.175).\n\n\nCodigo\ncheck_normality(aov1)\n\n\nOK: residuals appear as normally distributed (p = 0.074).\n\n\nInterpretación de la Homocedasticidad: Si la prueba muestra que la homocedasticidad se cumple, significa que las variancias de los residuos son constantes. Si no, se podría considerar transformar los datos o usar una técnica alternativa.\nInterpretación de la Normalidad: La normalidad de los residuos se puede visualizar con un histograma y un gráfico QQ.\n\n\nCodigo\n# Visualización de los residuos\nhist(aov1$residuals)\n\n\n\n\n\n\n\n\n\nCodigo\n# Gráfico QQ\nqqnorm(aov1$residuals)\nqqline(aov1$residuals)\n\n\n\n\n\n\n\n\n\nCodigo\n# Simulación de residuos\nplot(simulateResiduals(aov1))\n\n\n\n\n\n\n\n\n\nCodigo\n# Test de Shapiro-Wilk para normalidad\nshapiro.test(aov1$residuals)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  aov1$residuals\nW = 0.95101, p-value = 0.07022\n\n\nInterpretación del Test de Shapiro-Wilk: Si el p-valor es mayor que 0.05, no se rechaza la hipótesis nula de que los residuos siguen una distribución normal. Si es menor, se rechaza la hipótesis nula, sugiriendo que los residuos no son normales."
  },
  {
    "objectID": "Aula10.html#datos-no-paramétricos",
    "href": "Aula10.html#datos-no-paramétricos",
    "title": "",
    "section": "Datos No Paramétricos",
    "text": "Datos No Paramétricos\n\nSituación\nConjunto InsectSprays: efecto del insecticida en la mortalidad de insectos (Beall, 1942). Datos en el paquete datasets de R.\n\n\nCodigo\n# Cargar los datos del conjunto InsectSprays\ninsects &lt;- tibble::as_tibble(InsectSprays) %&gt;%\n  dplyr::select(spray, count)\n\n\ninsects |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nAnálisis Visual de los Datos\n\n\nCodigo\ninsects |&gt; \n  ggplot(aes(spray, count,fill = spray)) +\n  geom_boxplot()+\n  theme_few()+\n  scale_fill_few()\n\n\n\n\n\n\n\n\n\n\n\nRodando el Modelo de ANOVA\n\n\nCodigo\naov2 &lt;- aov(count ~ spray, data = insects)\nsummary(aov2)\n\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \nspray        5   2669   533.8    34.7 &lt;2e-16 ***\nResiduals   66   1015    15.4                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCodigo\ncheck_normality(aov2)\n\n\nWarning: Non-normality of residuals detected (p = 0.022).\n\n\nCodigo\ncheck_heteroscedasticity(aov2)\n\n\nWarning: Heteroscedasticity (non-constant error variance) detected (p &lt; .001).\n\n\nInterpretación: Los datos no son normales y homogéneos.\n\n\nAlternativas para Datos No Paramétricos\n\n1. Transformar los Datos para Normalizar\n\n\nCodigo\naov2 &lt;- aov(sqrt(count) ~ spray, data = insects)\nsummary(aov2)\n\n\n            Df Sum Sq Mean Sq F value Pr(&gt;F)    \nspray        5  88.44  17.688    44.8 &lt;2e-16 ***\nResiduals   66  26.06   0.395                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCodigo\ncheck_normality(aov2)\n\n\nOK: residuals appear as normally distributed (p = 0.681).\n\n\nCodigo\ncheck_heteroscedasticity(aov2)\n\n\nOK: Error variance appears to be homoscedastic (p = 0.854).\n\n\nInterpretación: Si la transformación logra normalizar los datos y cumplir la homocedasticidad, se puede proceder con la ANOVA transformada. Si no, se deben considerar otras alternativas.\n\n\n2. Uso de Tests No Paramétricos\n\n\nCodigo\n# Test de Kruskal-Wallis\nkruskal.test(count ~ spray, data = insects)\n\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  count by spray\nKruskal-Wallis chi-squared = 54.691, df = 5, p-value = 1.511e-10\n\n\nCodigo\n# Test de Kruskal-Wallis con el paquete agricolae\nlibrary(agricolae)\nkruskal(insects$count, insects$spray, console = TRUE)\n\n\n\nStudy: insects$count ~ insects$spray\nKruskal-Wallis test's\nTies or no Ties\n\nCritical Value: 54.69134\nDegrees of freedom: 5\nPvalue Chisq  : 1.510845e-10 \n\ninsects$spray,  means of the ranks\n\n  insects.count  r\nA      52.16667 12\nB      54.83333 12\nC      11.45833 12\nD      25.58333 12\nE      19.33333 12\nF      55.62500 12\n\nPost Hoc Analysis\n\nt-Student: 1.996564\nAlpha    : 0.05\nMinimum Significant Difference: 8.462804 \n\nTreatments with the same letter are not significantly different.\n\n  insects$count groups\nF      55.62500      a\nB      54.83333      a\nA      52.16667      a\nD      25.58333      b\nE      19.33333     bc\nC      11.45833      c\n\n\nInterpretación del Test de Kruskal-Wallis: Este test no requiere la asunción de normalidad. Si el p-valor es menor que 0.05, hay diferencias significativas entre los grupos.\n\n\n\nPaquete emmeans\nEl paquete emmeans es usado para realizar pruebas de comparación de medias entre grupos.\n\n\nCodigo\nlibrary(emmeans)\n\n# Calcular medias marginales estimadas\naov2_means &lt;- emmeans(aov2, ~ spray, type = \"response\")\n\naov2_means \n\n\n spray response    SE df lower.CL upper.CL\n A        14.14 1.364 66   11.550    17.00\n B        15.03 1.406 66   12.352    17.97\n C         1.55 0.452 66    0.779     2.58\n D         4.68 0.785 66    3.248     6.38\n E         3.27 0.656 66    2.095     4.72\n F        16.15 1.458 66   13.370    19.19\n\nConfidence level used: 0.95 \nIntervals are back-transformed from the sqrt scale \n\n\n\n\nCodigo\n# Tabla de comparación de medias\npwpm(aov2_means)\n\n\n        A       B       C       D       E       F\nA [14.14]  0.9975  &lt;.0001  &lt;.0001  &lt;.0001  0.9145\nB  -0.116 [15.03]  &lt;.0001  &lt;.0001  &lt;.0001  0.9936\nC   2.516   2.632 [ 1.55]  0.0081  0.2513  &lt;.0001\nD   1.596   1.712  -0.919 [ 4.68]  0.7366  &lt;.0001\nE   1.951   2.067  -0.565   0.355 [ 3.27]  &lt;.0001\nF  -0.258  -0.142  -2.774  -1.854  -2.209 [16.15]\n\nRow and column labels: spray\nUpper triangle: P values   adjust = \"tukey\"\nDiagonal: [Estimates] (response)   type = \"response\"\nLower triangle: Comparisons (estimate)   earlier vs. later\n\n\n\n\nCodigo\n# Forma mas eficiente de realizar medias marginales estimadas y Visualización de las diferencias entre grupos\nlibrary(multcomp)\nlibrary(multcompView)\n\naov2_means&lt;- cld(emmeans(aov2, ~ spray, type = \"response\"),alpha = 0.05, Letters = LETTERS,reverse=T)\n\naov2_means|&gt; \n      DT::datatable(\n        extensions = 'Buttons', \n        options = list(dom = 'Bfrtip', \n                       buttons = c('excel', \"csv\"))) |&gt; \n                            formatRound(c('response','SE','lower.CL','upper.CL'), 2)\n\n\n\n\n\n\n\n3. GLM\nPara modelos lineales generalizados, usamos la función glm.\n\n\nCodigo\nglm1 &lt;- glm(count ~ spray, data = insects, family = poisson(link = \"identity\"))\n\n# Visualización de los residuos\nplot(simulateResiduals(glm1))\n\n\n\n\n\n\n\n\n\nCodigo\nsummary(glm1)\n\n\n\nCall:\nglm(formula = count ~ spray, family = poisson(link = \"identity\"), \n    data = insects)\n\nCoefficients:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  14.5000     1.0992  13.191  &lt; 2e-16 ***\nsprayB        0.8333     1.5767   0.529    0.597    \nsprayC      -12.4167     1.1756 -10.562  &lt; 2e-16 ***\nsprayD       -9.5833     1.2720  -7.534 4.92e-14 ***\nsprayE      -11.0000     1.2247  -8.981  &lt; 2e-16 ***\nsprayF        2.1667     1.6116   1.344    0.179    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 409.041  on 71  degrees of freedom\nResidual deviance:  98.329  on 66  degrees of freedom\nAIC: 376.59\n\nNumber of Fisher Scoring iterations: 3\n\n\nCodigo\n# Calcular medias marginales estimadas para el GLM\nglm1_means &lt;- emmeans(glm1, ~ spray)\ncld(glm1_means)\n\n\n spray emmean    SE  df asymp.LCL asymp.UCL .group\n C       2.08 0.417 Inf      1.27      2.90  1    \n E       3.50 0.540 Inf      2.44      4.56  12   \n D       4.92 0.640 Inf      3.66      6.17   2   \n A      14.50 1.099 Inf     12.35     16.65    3  \n B      15.33 1.130 Inf     13.12     17.55    3  \n F      16.67 1.179 Inf     14.36     18.98    3  \n\nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 6 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same."
  },
  {
    "objectID": "Aula10.html#aprendizaje-del-día",
    "href": "Aula10.html#aprendizaje-del-día",
    "title": "",
    "section": "Aprendizaje del Día",
    "text": "Aprendizaje del Día\n\nANOVA: La ANOVA se utiliza para comparar las medias de tres o más grupos para determinar si hay diferencias significativas. En esta guía, aprendimos a realizar una ANOVA de un solo factor y a interpretar sus resultados.\nPremisas de ANOVA: Es crucial comprobar las premisas de homocedasticidad y normalidad antes de confiar en los resultados de una ANOVA. Aprendimos a usar los paquetes performance y DHARMa para estas pruebas.\nDatos No Paramétricos: Cuando los datos no cumplen las premisas de la ANOVA, podemos usar transformaciones, pruebas no paramétricas como Kruskal-Wallis, o modelos lineales generalizados (GLM).\nComparaciones de Medias: El paquete emmeans facilita la comparación de medias ajustadas y es útil tanto para ANOVA como para GLM.\nGLM: Los modelos lineales generalizados son una herramienta poderosa para manejar datos no paramétricos y ajustar modelos más complejos."
  },
  {
    "objectID": "indexE.html",
    "href": "indexE.html",
    "title": "",
    "section": "",
    "text": "Code\n\n\n\n\n\n  \n \n \n  \n   \n  \n    \n     Instagram\n  \n  \n    \n     LinkedIn\n  \n  \n    \n     Github\n  \n  \n    \n     Email\n  \n\n\n\nHello! I am Gustavo Marín, a doctoral student in the PhD program in Plant Pathology at the Federal University of Viçosa, Brazil. I am an Agricultural Engineer from the National University of Colombia (Palmira) and obtained my Master’s degree in Plant Pathology in 2015 from the Federal University of Viçosa. I am now part of the work group in the Laboratory of Genomics and Genetics of Plant-Pathogen Interactions coordinated by Professor Sérgio H. Brommonshenckel.\n\nWelcome to my website\nThis site was created with great enthusiasm using Quarto Markdown for the course FIP606 - Data Analysis and Visualization in Plant Pathology, taught by Professor Emerson Del Ponte. Here you will find class materials, organized thematically and designed to facilitate learning.\n\n\nWhat will you find on this site?\n\nClass materials: Documents, presentations, and resources used during classes.\nR tutorials: Step-by-step guides for analyzing and visualizing phytopathological data using R.\nProjects and examples: Practical cases that will help you better understand the use of analysis tools in the field of plant pathology.\n\n\n\nExploring the fascinating world of phytopathological data analysis\nThis site is designed for beginners in R and those interested in phytopathological data analysis. As you navigate through the different sections, you will find information and resources to help you develop your skills in R and apply this knowledge to plant pathology.\n\n\nContact me!\nIf you have any questions or need more information, feel free to contact me. I am here to help you on your learning journey.\n\nExplore, learn, and enjoy the fascinating world of phytopathological data analysis. Welcome aboard!"
  },
  {
    "objectID": "Aula8.html",
    "href": "Aula8.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula8.html#definición-de-hipótesis",
    "href": "Aula8.html#definición-de-hipótesis",
    "title": "",
    "section": "Definición de Hipótesis",
    "text": "Definición de Hipótesis\n\nHipótesis Nula (H0): Es la hipótesis que se pone a prueba. Por ejemplo, si comparamos dos medias, podemos tener: H0: media1 = media2.\nHipótesis Alternativa (H1): Es la hipótesis que contraría H0. Por ejemplo: H1: media1 ≠ media2, H1: media1 &lt; media2, o H1: media1 &gt; media2."
  },
  {
    "objectID": "Aula8.html#valor-p",
    "href": "Aula8.html#valor-p",
    "title": "",
    "section": "Valor p",
    "text": "Valor p\nEl valor p es la probabilidad de observar un resultado tan extremo como el observado, asumiendo que la hipótesis nula sea verdadera. Un valor p pequeño indica que es poco probable que el resultado observado haya ocurrido por casualidad, sugiriendo que la hipótesis nula puede ser falsa.\n\nInstalación y Carga de Paquetes\nPara comenzar, instalaremos y cargaremos los paquetes necesarios. Utilizaremos tidyverse para la manipulación de datos y visualización, y readxl para leer archivos Excel.\n\n\nCodigo\n# Cargar paquetes\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(report)\nlibrary(infer)\nlibrary(ggthemes)\n\n\n\n\nExportación y Visualización de Datos\nUsaremos datos del conjunto mg para crear un gráfico de caja (boxplot) y realizar análisis estadísticos.\n\n\nCodigo\n# Leer datos del archivo Excel\nmg &lt;- read_excel(\"dados-diversos.xlsx\")\n\n# Crear un gráfico de caja con anotación\nmg |&gt;\n  ggplot(aes(trat, comp,fill = trat)) +\n  geom_boxplot(outlier.colour = \"red\") +\n  geom_jitter(width = 0.05) +\n  ylim(5, 25) +\n  theme_few()+\n  scale_fill_few()+\n  annotate(geom = \"text\", x = 0.7, y = 19, label = \"t = 8.15; p &lt; 0.001\")\n\n\n\n\n\n\n\n\n\n\n\nEjemplo de Uso de la Prueba t\nVamos a crear un nuevo objeto mg2 y usar la función pivot_wider() para reestructurar los datos.\n\n\nCodigo\n# Reestructurar los datos\nmg2 &lt;- mg |&gt; \n  pivot_wider(names_from = trat, values_from = comp)\n\n\nUsaremos la función t.test() para realizar una prueba t y luego el paquete report para generar un informe.\n\n\nCodigo\n# Realizar la prueba t\nt &lt;- t.test(mg2$Mg2, mg2$control)\n\n# Generar un informe de los resultados\nreport(t)\n\n\nEffect sizes were labelled following Cohen's (1988) recommendations.\n\nThe Welch Two Sample t-test testing the difference between mg2$Mg2 and\nmg2$control (mean of x = 10.52, mean of y = 15.68) suggests that the effect is\nnegative, statistically significant, and large (difference = -5.16, 95% CI\n[-6.49, -3.83], t(17.35) = -8.15, p &lt; .001; Cohen's d = -3.65, 95% CI [-5.12,\n-2.14])\n\n\n\n\nVisualización del Resultado\nCrearemos un gráfico para mostrar las medias y los errores estándar de la media para cada nivel de la variable trat.\n\n\nCodigo\nmg |&gt;\n  ggplot(aes(trat, comp)) +\n  geom_jitter(colour = \"gray\",position = position_jitter(height = 0, width = .1))+\n  stat_summary(fun.data = \"mean_se\",colour = \"red\")+\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nUsando el Paquete infer\nEl paquete infer se utiliza para realizar inferencia estadística de manera compatible con tidyverse.\n\n\nCodigo\n# Realizar una prueba t usando el paquete infer\nmg3 &lt;-mg |&gt; \n        specify(comp ~ trat)  |&gt; \n        hypothesize(null = \"independence\") |&gt;\n        generate(reps = 1000, type = \"permute\") |&gt;\n        calculate(stat = \"t\", order = c(\"control\", \"Mg2\"))\n\nmg3 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nAprendizaje del día\nEsta guía básica te ayudará a realizar pruebas de hipótesis en RStudio utilizando los paquetes tidyverse, report, y infer. Desde la importación de datos hasta la generación de informes y visualización de resultados, cada paso está diseñado para ser fácil de seguir y entender."
  },
  {
    "objectID": "Aula14.html",
    "href": "Aula14.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula14.html#preparo-pre-análisis-y-visualización",
    "href": "Aula14.html#preparo-pre-análisis-y-visualización",
    "title": "",
    "section": "Preparo pre-análisis y visualización",
    "text": "Preparo pre-análisis y visualización\nPrimero, cargamos los paquetes necesarios y los datos. Utilizaremos los paquetes tidyverse, readxl y ggplot2 para la manipulación y visualización de datos.\n\nCargar Paquetes\n\n\nCodigo\n# Cargar paquetes necesarios\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(corrplot)\n\n\n\n\nImportar Datos\nImportamos los datos desde un archivo Excel. En este ejemplo, trabajamos con un conjunto de datos llamado estande.\n\n\nCodigo\n# Importar datos desde un archivo Excel\nestande &lt;- read_excel(\"dados-diversos.xlsx\", \"estande\")\n\n\nestande |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n    buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nVisualización de Datos\nVisualizamos los datos para obtener una idea preliminar de la relación entre las variables.\n\n\nCodigo\nestande |&gt;\n  ggplot(aes(trat, nplants))+\n  geom_point()+\n  facet_wrap(~ exp)+\n  ylim(0, max(estande$nplants))+\n  geom_smooth(se = FALSE)+\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nCodigo\nestande |&gt;\n  ggplot(aes(trat, nplants))+\n  geom_point(colour=\"gray\")+\n  facet_wrap(~ exp)+\n  stat_summary(fun.data = \"mean_cl_boot\",color=\"#8b0000\")+ \n  geom_smooth(se =  F, method = \"lm\",colour= \"#9cc414\")+\n  theme_clean()"
  },
  {
    "objectID": "Aula14.html#ajustando-modelo-lineal-simple-y-cuadrático",
    "href": "Aula14.html#ajustando-modelo-lineal-simple-y-cuadrático",
    "title": "",
    "section": "Ajustando Modelo Lineal Simple y Cuadrático",
    "text": "Ajustando Modelo Lineal Simple y Cuadrático\n\nAjuste del Modelo Lineal Simple\nUtilizamos la función lm() para ajustar un modelo lineal simple. La fórmula del modelo especifica la relación entre la variable dependiente (y) y la variable independiente (x).\n\n\nCodigo\n# Filtrar los datos del experimento 2\nestande2 &lt;- estande |&gt;\n  filter(exp == 2) |&gt;\n  group_by(trat) |&gt;\n  summarise(mean_nplants = mean(nplants))\n\n# Ajustar el modelo lineal simple\nmodelo_simple &lt;- lm(mean_nplants ~ trat, data = estande2)\nsummary(modelo_simple)\n\n\n\nCall:\nlm(formula = mean_nplants ~ trat, data = estande2)\n\nResiduals:\n     1      2      3      4      5      6 \n12.764 -2.134 -6.782 -3.327 -4.669  4.147 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  60.9857     4.5505  13.402 0.000179 ***\ntrat         -0.7007     0.2012  -3.483 0.025294 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.117 on 4 degrees of freedom\nMultiple R-squared:  0.752, Adjusted R-squared:   0.69 \nF-statistic: 12.13 on 1 and 4 DF,  p-value: 0.02529\n\n\n\n\nAjuste del Modelo Cuadrático\nPara ajustar un modelo cuadrático, incluimos la variable independiente al cuadrado en la fórmula del modelo.\n\n\nCodigo\n# Crear la variable cuadrática\nestande2 &lt;- estande2 |&gt;\n  mutate(trat2 = trat^2)\n\n# Ajustar el modelo cuadrático\nmodelo_cuadratico &lt;- lm(mean_nplants ~ trat + trat2, data = estande2)\nsummary(modelo_cuadratico)\n\n\n\nCall:\nlm(formula = mean_nplants ~ trat + trat2, data = estande2)\n\nResiduals:\n      1       2       3       4       5       6 \n 7.4484 -4.4200 -6.4386  1.0739  3.0474 -0.7111 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 66.30156    4.70800  14.083 0.000776 ***\ntrat        -1.77720    0.62263  -2.854 0.064878 .  \ntrat2        0.02223    0.01242   1.790 0.171344    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.517 on 3 degrees of freedom\nMultiple R-squared:  0.8801,    Adjusted R-squared:  0.8001 \nF-statistic: 11.01 on 2 and 3 DF,  p-value: 0.04152\n\n\n\n\nComparación de Modelos\nUtilizamos el criterio de información de Akaike (AIC) para comparar los modelos ajustados.\n\n\nCodigo\nAIC(modelo_simple, modelo_cuadratico)\n\n\n                  df      AIC\nmodelo_simple      3 45.72200\nmodelo_cuadratico  4 43.36151\n\n\n\n\nVisualización del Modelo Ajustado\nVisualizamos el modelo ajustado y añadimos la ecuación de la regresión en el gráfico.\n\n\nCodigo\n# Extraer coeficientes del modelo cuadrático\nintercepto &lt;- coef(modelo_cuadratico)[1]\npendiente1 &lt;- coef(modelo_cuadratico)[2]\npendiente2 &lt;- coef(modelo_cuadratico)[3]\n\n# Crear la ecuación en formato de texto\necuacion &lt;- paste(\"y =\", round(intercepto, 2), \"+\", round(pendiente1, 2), \"* x +\", round(pendiente2, 2), \"* x^2\")\n\n# Crear el gráfico con la ecuación del modelo cuadrático\nggplot(estande2, aes(x = trat, y = mean_nplants)) +\n  geom_point() +\n  geom_smooth(formula = y ~ poly(x, 2), method = \"lm\", color = \"black\") +\n  annotate(\"text\", x = 25, y = 70, label = ecuacion, color = \"blue\", size = 5) +\n  labs(title = \"Relación entre Tratamiento y Número de Plantas\", x = \"Tratamiento\", y = \"Número de Plantas\") +\n  theme_minimal()"
  },
  {
    "objectID": "Aula14.html#modelo-de-kendall",
    "href": "Aula14.html#modelo-de-kendall",
    "title": "",
    "section": "Modelo de Kendall",
    "text": "Modelo de Kendall\nEl coeficiente de correlación de Kendall es una medida no paramétrica de correlación. Es más robusto para datos no lineales o cuando la relación entre las variables no sigue una distribución normal.\n\n\nCodigo\n# Realizar el test de normalidad\nshapiro.test(mofo1$inc)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  mofo1$inc\nW = 0.92076, p-value = 0.2568\n\n\nCodigo\nshapiro.test(mofo1$yld)\n\n\n\n    Shapiro-Wilk normality test\n\ndata:  mofo1$yld\nW = 0.94388, p-value = 0.5091\n\n\nCodigo\n# Calcular el coeficiente de correlación de Kendall\ncor.test(mofo1$inc, mofo1$yld, method = \"kendall\")\n\n\n\n    Kendall's rank correlation tau\n\ndata:  mofo1$inc and mofo1$yld\nz = -3.6062, p-value = 0.0003107\nalternative hypothesis: true tau is not equal to 0\nsample estimates:\n       tau \n-0.7613062 \n\n\nCodigo\n# Calcular la matriz de correlación de Kendall\npcor_kendall &lt;- cor(mofo1 |&gt; select(3:5), method = \"kendall\")\n\n# Crear el gráfico de correlación de Kendall\ncorrplot(pcor_kendall, method = 'number', type = \"lower\")\n\n\n\n\n\n\n\n\n\nEsta guía proporciona una introducción completa al análisis de correlación y ajuste de modelos lineales en RStudio. Cada paso incluye la explicación de los paquetes y funciones utilizados, lo que facilita su comprensión y aplicación para principiantes."
  },
  {
    "objectID": "Aula16.html",
    "href": "Aula16.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula16.html#paso-1-cargar-los-paquetes-necesarios",
    "href": "Aula16.html#paso-1-cargar-los-paquetes-necesarios",
    "title": "",
    "section": "Paso 1: Cargar los Paquetes Necesarios",
    "text": "Paso 1: Cargar los Paquetes Necesarios\nPrimero, debes cargar los paquetes que utilizarás para manipular y visualizar los datos geoespaciales.\n\n\nCodigo\n# Cargar paquetes necesarios\nlibrary(tidyverse)        # Para manipulación de datos y gráficos\nlibrary(readxl)           # Para leer archivos Excel\nlibrary(ggplot2)          # Para crear gráficos\nlibrary(rnaturalearth)    # Para obtener datos geoespaciales\nlibrary(rnaturalearthhires)# Para obtener datos geoespaciales de alta resolución\nlibrary(ggthemes)         # Para temas adicionales de ggplot\nlibrary(ggspatial)        # Para anotaciones espaciales como la rosa de los vientos\nlibrary(gsheet)           # Para leer datos de Google Sheets\nlibrary(scatterpie)       # Para gráficos de pastel sobre mapas\nlibrary(ggrepel)          # Para etiquetas de texto con ajuste automático\nlibrary(leaflet)          # Para mapas interactivos\nlibrary(DT)               # Para mostrar datos en tablas interactivas"
  },
  {
    "objectID": "Aula16.html#paso-2-preparar-los-datos-para-el-mapa-del-país",
    "href": "Aula16.html#paso-2-preparar-los-datos-para-el-mapa-del-país",
    "title": "",
    "section": "Paso 2: Preparar los Datos para el Mapa del País",
    "text": "Paso 2: Preparar los Datos para el Mapa del País\nVamos a utilizar el paquete rnaturalearth para obtener los datos geoespaciales de Brasil y luego visualizarlos con ggplot2.\n\n\nCodigo\n# Obtener datos geoespaciales de Brasil\nBRA &lt;- ne_countries(country = \"Brazil\", returnclass = \"sf\")\n\n# Graficar el mapa de Brasil\nggplot(BRA) +\n  geom_sf(fill = \"white\") +\n  theme_void()  # Tema minimalista"
  },
  {
    "objectID": "Aula16.html#paso-3-plotear-el-mapa-del-país-con-estados",
    "href": "Aula16.html#paso-3-plotear-el-mapa-del-país-con-estados",
    "title": "",
    "section": "Paso 3: Plotear el Mapa del País con Estados",
    "text": "Paso 3: Plotear el Mapa del País con Estados\nPara visualizar los estados dentro de Brasil, usamos la función ne_states.\n\n\nCodigo\n# Obtener datos de los estados de Brasil\nBRA &lt;- ne_states(country = \"Brazil\", returnclass = \"sf\")\n\n# Graficar los estados de Brasil\nggplot(BRA) +\n  geom_sf(color = \"white\", fill = \"#0f52ba\") +\n  theme_few()"
  },
  {
    "objectID": "Aula16.html#paso-4-seleccionar-y-graficar-un-estado-específico",
    "href": "Aula16.html#paso-4-seleccionar-y-graficar-un-estado-específico",
    "title": "",
    "section": "Paso 4: Seleccionar y Graficar un Estado Específico",
    "text": "Paso 4: Seleccionar y Graficar un Estado Específico\nSeleccionamos un estado específico, en este caso Minas Gerais, y lo resaltamos en el mapa.\n\n\nCodigo\n# Filtrar para obtener solo el estado de Minas Gerais\nMG &lt;- BRA %&gt;%\n  filter(name_en == \"Minas Gerais\")\n\n# Graficar el mapa de Brasil con Minas Gerais resaltado\nggplot(BRA) +\n  geom_sf(color = \"black\", fill = \"white\") +\n  geom_sf(data = MG, color = \"black\", fill = \"#cf352e\") +\n  theme_few()"
  },
  {
    "objectID": "Aula16.html#paso-5-plotear-puntos-específicos-latitud-y-longitud",
    "href": "Aula16.html#paso-5-plotear-puntos-específicos-latitud-y-longitud",
    "title": "",
    "section": "Paso 5: Plotear Puntos Específicos (Latitud y Longitud)",
    "text": "Paso 5: Plotear Puntos Específicos (Latitud y Longitud)\nSi tienes datos de puntos específicos, como ubicaciones con coordenadas de latitud y longitud, puedes añadirlos al mapa.\n\n\nCodigo\n# Datos de ejemplo de puntos específicos\nsbr &lt;- RustSoybean\n\n# Mostrar datos en una tabla interactiva\nsbr %&gt;%\n  DT::datatable(\n    extensions = 'Buttons',\n    options = list(dom = 'Bfrtip', buttons = c('excel', \"csv\"))\n  )\n\n\n\n\n\n\nCodigo\n# Graficar puntos en el mapa de Brasil\nggplot(BRA) +\n  geom_sf(color = \"black\", fill = \"white\") +\n  geom_point(data = sbr, aes(longitude, latitude), alpha = 0.5, color = \"#ffbd2e\") +\n  theme_few()"
  },
  {
    "objectID": "Aula16.html#paso-6-separar-fechas-en-día-mes-y-año",
    "href": "Aula16.html#paso-6-separar-fechas-en-día-mes-y-año",
    "title": "",
    "section": "Paso 6: Separar Fechas en Día, Mes y Año",
    "text": "Paso 6: Separar Fechas en Día, Mes y Año\nSeparar las fechas puede ser útil para análisis temporales.\n\n\nCodigo\n# Separar la fecha en día, mes y año\nsbr2 &lt;- sbr %&gt;%\n  separate(planting, into = c(\"year\", \"month\", \"day\"), sep = \"-\", remove = FALSE)\n\n# Mostrar datos en una tabla interactiva\nsbr2 %&gt;%\n  DT::datatable(\n    extensions = 'Buttons',\n    options = list(dom = 'Bfrtip', buttons = c('excel', \"csv\"))\n  )"
  },
  {
    "objectID": "Aula16.html#paso-7-graficar-puntos-con-colores-por-año-y-facetas",
    "href": "Aula16.html#paso-7-graficar-puntos-con-colores-por-año-y-facetas",
    "title": "",
    "section": "Paso 7: Graficar Puntos con Colores por Año y Facetas",
    "text": "Paso 7: Graficar Puntos con Colores por Año y Facetas\nPodemos colorear los puntos según el año y crear facetas para cada año.\n\n\nCodigo\n# Graficar puntos coloreados por año y con facetas por año\nggplot(BRA) +\n  geom_sf(color = \"black\", fill = \"white\") +\n  geom_point(data = sbr2, aes(longitude, latitude, color = year), alpha = 0.5) +\n  facet_wrap(~year) +\n  theme_few() +\n  scale_color_few() +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "Aula16.html#paso-8-añadir-rosa-de-los-vientos-y-escala",
    "href": "Aula16.html#paso-8-añadir-rosa-de-los-vientos-y-escala",
    "title": "",
    "section": "Paso 8: Añadir Rosa de los Vientos y Escala",
    "text": "Paso 8: Añadir Rosa de los Vientos y Escala\nPara añadir una rosa de los vientos y una escala al mapa, usamos el paquete ggspatial.\n\n\nCodigo\n# Añadir rosa de los vientos y escala\nggplot(BRA) +\n  annotation_north_arrow(location = \"bl\") +\n  annotation_scale(location = \"br\") +\n  geom_sf(color = \"black\", fill = \"white\") +\n  geom_point(data = sbr2, aes(longitude, latitude, color = year, size = severity), alpha = 0.6) +\n  facet_wrap(~year) +\n  theme_few() +\n  scale_colour_manual(values = c(\"#6aa84f\", \"#ffbd2e\", \"#cf352e\")) +\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "Aula16.html#paso-9-adicionar-un-scatterpie",
    "href": "Aula16.html#paso-9-adicionar-un-scatterpie",
    "title": "",
    "section": "Paso 9: adicionar un scatterpie",
    "text": "Paso 9: adicionar un scatterpie\n\n\nCodigo\nmapa &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?gid=50258992#gid=50258992\")\n\nmapa  |&gt; \n      DT::datatable(\n      extensions = 'Buttons', \n      options = list(dom = 'Bfrtip', \n      buttons = c('excel', \"csv\")))\n\n\n\n\n\n\n\n\nCodigo\nlibrary(scatterpie)\nlibrary(ggrepel)\n\n\nggplot(BRA) +\n  geom_sf(fill = \"white\", color = \"black\", linewidth = 0.5) +\n  coord_sf()+\n  geom_point(data = mapa, aes(lon, lat))+\n  geom_scatterpie(aes(x=lon, y=lat, r = 0.6),\n                  alpha = 0.8, color = NA, data = mapa,\n                  cols = c (\"DFC\",\n                            \"MA\",\n                            \"FER\",\n                            \"ANTR\",\n                            \"OIDIO\"))+\n  geom_text_repel(data = mapa, aes(lon, lat, label = Local),\n                  size = 2, nudge_x = 0.2, nudge_y = 0.27, color = 'gray30', family = \"Arial\")+\n  theme_few()+\n  scale_fill_few()+\n  labs(x = \"Longitude\", y = \"Laititude\", legend = \"\", fill = \"Doença\")+\n  theme(legend.position = \"bottom\", text = element_text(family = \"Arieal\", size = 8))"
  },
  {
    "objectID": "Aula16.html#ejemplo-de-mapa-en-colombia",
    "href": "Aula16.html#ejemplo-de-mapa-en-colombia",
    "title": "",
    "section": "Ejemplo de Mapa en Colombia",
    "text": "Ejemplo de Mapa en Colombia\nVamos a mostrar un ejemplo de cómo aplicar estos conceptos a otro país, en este caso, Colombia.\n\nConjunto de Datos y Plot del Mapa del País\n\n\nCodigo\n# Obtener datos de Colombia\nCOL &lt;- ne_states(country = \"Colombia\", returnclass = \"sf\")\n\n# Graficar el mapa de Colombia\nggplot(COL) +\n  geom_sf(color = \"black\", fill = \"#eeeeee\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nSeleccionar el Departamento de Caldas\n\n\nCodigo\n# Filtrar para obtener solo el departamento de Caldas\nCAL &lt;- COL[COL$name_en == \"Caldas\", ]\n\n# Graficar el mapa de Caldas\nggplot(CAL) +\n  geom_sf(color = \"black\", fill = \"#7d0c0c\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nBase de Datos de Almacenes de Café en Caldas\n\n\nCodigo\n# Datos de almacenes de café en Caldas\nAlmacenes &lt;- tibble::tribble(\n  ~City, ~Almacen, ~Latitude, ~Longitude, ~Origen, ~Distancia,\n  \"Aguadas\", \"Aguadas\", 5.614441346, -75.45745866, \"Manizales\", 94L,\n  \"Anserma\", \"Anserma\", 5.230185862, -75.78747373, \"Manizales\", 68L,\n  \"Aranzazu\", \"Aranzazu\", 5.273885516, -75.4906769, \"Manizales\", 52L,\n  \"Arauca\", \"Arauca\", 5.111797165, -75.70237449, \"Manizales\", 40L,\n  \"Belalcázar\", \"Belalcázar\", 4.993657529, -75.8124391, \"Manizales\", 73L,\n  \"Chinchiná\", \"Chinchiná\", 4.982784299, -75.60599158, \"Manizales\", 25L,\n  \"Chinchiná\", \"Express Chinchiná\", 4.984223599, -75.60351371, \"Manizales\", 25L,\n  \"Filadelfia\", \"Filadelfia\", 5.296549523, -75.56330843, \"Manizales\", 50L,\n  \"Florencia\", \"Florencia\", 5.523442194, -75.0419965, \"Manizales\", 76L,\n  \"La Merced\", \"La Merced\", 5.398797857, -75.54735513, \"Manizales\", 87L,\n  \"Manizales\", \"Manizales\", 5.068354629, -75.52250821, \"Manizales\", NA,\n  \"Manizales\", \"Centro\", 5.066015662, -75.52027854, \"Manizales\", NA,\n  \"Manzanares\", \"Manzanares\", 5.253637095, -75.1546019, \"Manizales\", 106L,\n  \"Marmato\", \"Marmato\", 5.474778144, -75.5991209, \"Manizales\", 92L,\n  \"Marquetalia\", \"Marquetalia\", 5.297556319, -75.05356293, \"Manizales\", 133L,\n  \"Montebonito\", \"Montebonito\", 5.164502404, -75.20083577, \"Manizales\", 74L,\n  \"Neira\", \"Neira\", 5.168677095, -75.52064365, \"Manizales\", 21L,\n  \"Pácora\", \"Pácora\", 5.527640673, -75.45833093, \"Manizales\", 108L,\n  \"Palestina\", \"Palestina\", 5.020646532, -75.62224573, \"Manizales\", 31L,\n  \"Pensilvania\", \"Pensilvania\", 5.382094679, -75.16095633, \"Manizales\", 138L,\n  \"Riosucio\", \"Riosucio\", 5.420500318, -75.70330599, \"Manizales\", 94L,\n  \"Risaralda\", \"Risaralda\", 5.164827869, -75.76656659, \"Manizales\", 54L,\n  \"Salamina\", \"Salamina\", 5.406270495, -75.48804138, \"Manizales\", 75L,\n  \"Samaná\", \"Samaná\", 5.413305395, -74.9918933, \"Manizales\", 172L,\n  \"Samaria\", \"Samaria\", 5.231695042, -75.57004909, \"Manizales\", 44L,\n  \"San Bartolomé\", \"San Bartolomé\", 5.488163145, -75.54230827, \"Manizales\", 100L,\n  \"San José\", \"San José\", 5.080518037, -75.79193293, \"Manizales\", 68L,\n  \"Supía\", \"Supía\", 5.45575962, -75.64910349, \"Manizales\", 82L,\n  \"Victoria\", \"Victoria\", 5.316772447, -74.91163876, \"Manizales\", 136L,\n  \"Viterbo\", \"Viterbo\", 5.060618313, -75.8733643, \"Manizales\", 72L\n)\n\n# Mostrar datos en una tabla\nAlmacenes\n\n\n# A tibble: 30 × 6\n   City       Almacen           Latitude Longitude Origen    Distancia\n   &lt;chr&gt;      &lt;chr&gt;                &lt;dbl&gt;     &lt;dbl&gt; &lt;chr&gt;         &lt;int&gt;\n 1 Aguadas    Aguadas               5.61     -75.5 Manizales        94\n 2 Anserma    Anserma               5.23     -75.8 Manizales        68\n 3 Aranzazu   Aranzazu              5.27     -75.5 Manizales        52\n 4 Arauca     Arauca                5.11     -75.7 Manizales        40\n 5 Belalcázar Belalcázar            4.99     -75.8 Manizales        73\n 6 Chinchiná  Chinchiná             4.98     -75.6 Manizales        25\n 7 Chinchiná  Express Chinchiná     4.98     -75.6 Manizales        25\n 8 Filadelfia Filadelfia            5.30     -75.6 Manizales        50\n 9 Florencia  Florencia             5.52     -75.0 Manizales        76\n10 La Merced  La Merced             5.40     -75.5 Manizales        87\n# ℹ 20 more rows\n\n\n\n\nGraficar Almacenes en el Mapa de Caldas\n\n\nCodigo\n# Graficar puntos de almacenes en el mapa de Caldas\nggplot(CAL) +\n  geom_sf(color = \"black\", fill = \"white\") +\n  geom_point(data = Almacenes, aes(x = Longitude, y = Latitude), color = \"#7d0c0c\") +\n  theme_few()\n\n\n\n\n\n\n\n\n\n\n\nCrear un Mapa Interactivo con Leaflet\n\n\nCodigo\n# Crear un mapa interactivo con Leaflet\nleaflet(Almacenes) |&gt; \n  addTiles() |&gt; \n  setView(-72.0000000, 4.0000000, zoom = 6) |&gt; \n  addCircleMarkers(~Longitude, ~Latitude, popup = ~Almacen, weight = 3, radius = 2, color = \"#7d0c0c\", stroke = TRUE, fillOpacity = 0.8)"
  },
  {
    "objectID": "Aula16.html#aprendizaje-del-día",
    "href": "Aula16.html#aprendizaje-del-día",
    "title": "",
    "section": "Aprendizaje del día",
    "text": "Aprendizaje del día\nCon esta guía, has aprendido cómo cargar datos geoespaciales, visualizarlos en mapas, y personalizar esos mapas en RStudio utilizando varios paquetes. Puedes aplicar estos conceptos a diferentes regiones y tipos de datos según tus necesidades."
  },
  {
    "objectID": "Aula17.html",
    "href": "Aula17.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source"
  },
  {
    "objectID": "Aula17.html#introducción",
    "href": "Aula17.html#introducción",
    "title": "",
    "section": "Introducción",
    "text": "Introducción\nEl análisis de regresión no lineal es esencial cuando los datos no siguen un patrón lineal y es necesario utilizar técnicas que capturen la relación entre las variables de manera más precisa. Este tipo de análisis es crucial en estudios donde las relaciones entre variables no pueden ser adecuadamente modeladas mediante funciones lineales.\nA continuación, se presenta una guía práctica para realizar un análisis de regresión no lineal en RStudio utilizando diversos paquetes y funciones."
  },
  {
    "objectID": "Aula17.html#por-qué-realizar-un-análisis-de-regressión-no-lineal",
    "href": "Aula17.html#por-qué-realizar-un-análisis-de-regressión-no-lineal",
    "title": "",
    "section": "¿Por qué Realizar un Análisis de Regressión No Lineal?",
    "text": "¿Por qué Realizar un Análisis de Regressión No Lineal?\nEn muchos estudios, las relaciones entre las variables pueden ser complejas y no seguir un patrón lineal simple. La regresión no lineal permite capturar estas relaciones complejas y proporciona una mejor comprensión de los datos. Es especialmente útil en casos donde la respuesta varía de manera no constante con la dosis o tratamiento, como en estudios de toxicidad, farmacología, biología, y muchas otras áreas científicas y de ingeniería."
  },
  {
    "objectID": "Aula17.html#paso-1-instalación-y-carga-de-paquetes",
    "href": "Aula17.html#paso-1-instalación-y-carga-de-paquetes",
    "title": "",
    "section": "Paso 1: Instalación y Carga de Paquetes",
    "text": "Paso 1: Instalación y Carga de Paquetes\nPrimero, instalamos y cargamos los paquetes necesarios para el análisis.\n\n\nCodigo\n# Cargar paquetes necesarios\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(gsheet)\nlibrary(dplyr)\nlibrary(drc)\nlibrary(ec50estimator)\nlibrary(ggthemes)\nlibrary(DT)"
  },
  {
    "objectID": "Aula17.html#paso-2-importación-de-datos",
    "href": "Aula17.html#paso-2-importación-de-datos",
    "title": "",
    "section": "Paso 2: Importación de Datos",
    "text": "Paso 2: Importación de Datos\nImportamos los datos desde una hoja de cálculo de Google Sheets que contiene datos sobre la sensibilidad a fungicidas.\n\n\nCodigo\n# Importar datos desde Google Sheets\ndat &lt;- gsheet2tbl(\"https://docs.google.com/spreadsheets/d/15pCj0zljvd-TGECe67OMt6sa21xO8BqUgv4d-kU8qi8/edit#gid=0\")\n\n\ndat |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n    buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "Aula17.html#paso-3-preparación-de-datos",
    "href": "Aula17.html#paso-3-preparación-de-datos",
    "title": "",
    "section": "Paso 3: Preparación de Datos",
    "text": "Paso 3: Preparación de Datos\nPreparamos los datos para el análisis, agrupándolos y calculando la media de GC.\n\n\nCodigo\n# Evitar notación científica\noptions(scipen=999)\n\n# Procesar datos\ndat2 &lt;- dat |&gt; \n  dplyr::select(-Isolate, -Population) |&gt; \n  group_by(Code, Year, Dose) |&gt; \n  summarise(GC_mean = mean(GC))\n\ndat2 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n    buttons = c('excel', \"csv\")))"
  },
  {
    "objectID": "Aula17.html#paso-4-visualización-de-datos",
    "href": "Aula17.html#paso-4-visualización-de-datos",
    "title": "",
    "section": "Paso 4: Visualización de Datos",
    "text": "Paso 4: Visualización de Datos\nCreamos un gráfico para visualizar los datos de uno de los códigos específicos (por ejemplo, “FGT152”) utilizando ggplot2.\n\n\nCodigo\n# Filtrar datos para un código específico\nFGT152 &lt;- dat2 |&gt; filter(Code == \"FGT152\")\n\n# Crear gráfico\nFGT152 |&gt; \n  ggplot(aes(factor(Dose), GC_mean)) +\n  geom_point() +\n  geom_line() +\n  facet_wrap(~ Code) +\n  theme_few()+\n  labs(title = \"Curva Dosis-Respuesta para FGT152\", x = \"Dosis\", y = \"GC Media\")"
  },
  {
    "objectID": "Aula17.html#paso-5-ajuste-del-modelo-de-regressión-no-lineal",
    "href": "Aula17.html#paso-5-ajuste-del-modelo-de-regressión-no-lineal",
    "title": "",
    "section": "Paso 5: Ajuste del Modelo de Regressión No Lineal",
    "text": "Paso 5: Ajuste del Modelo de Regressión No Lineal\nUtilizamos el paquete drc para ajustar un modelo de regresión no lineal y calcular el EC50.\n\nModelo Log-Logístico de Tres Parámetros (LL.3)\nEste modelo se ajusta utilizando los siguientes comandos:\n\n\nCodigo\n# Ajustar modelo log-logístico de tres parámetros\ndrc1 &lt;- drm(GC_mean ~ Dose, data = FGT152, fct = LL.3())\nAIC(drc1)\n\n\n[1] 33.60846\n\n\nCodigo\nsummary(drc1)\n\n\n\nModel fitted: Log-logistic (ED50 as parameter) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n               Estimate Std. Error t-value   p-value    \nb:(Intercept)  0.401905   0.053427  7.5225  0.001672 ** \nd:(Intercept) 47.540342   1.459890 32.5643 5.302e-06 ***\ne:(Intercept)  7.220130   2.340120  3.0854  0.036739 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 1.993805 (4 degrees of freedom)\n\n\nCodigo\nplot(drc1)\n\n\n\n\n\n\n\n\n\nCodigo\nED(drc1, 50)\n\n\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   7.2201     2.3401\n\n\n\n\nModelo Weibull de Tres Parámetros (W1.3)\nEste modelo puede proporcionar un mejor ajuste basado en el AIC:\n\n\nCodigo\n# Ajustar modelo Weibull de tres parámetros\ndrc1 &lt;- drm(GC_mean ~ Dose, data = FGT152, fct = W1.3())\nAIC(drc1)\n\n\n[1] 37.75192\n\n\nCodigo\nsummary(drc1)\n\n\n\nModel fitted: Weibull (type 1) with lower limit at 0 (3 parms)\n\nParameter estimates:\n\n              Estimate Std. Error t-value    p-value    \nb:(Intercept)  0.28354    0.04760  5.9567   0.003987 ** \nd:(Intercept) 48.38112    2.09996 23.0390 0.00002103 ***\ne:(Intercept) 30.12379   12.58003  2.3946   0.074796 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error:\n\n 2.680509 (4 degrees of freedom)\n\n\nCodigo\nplot(drc1)\n\n\n\n\n\n\n\n\n\nCodigo\nED(drc1, 50)\n\n\n\nEstimated effective doses\n\n       Estimate Std. Error\ne:1:50   8.2704     3.6719"
  },
  {
    "objectID": "Aula17.html#paso-6-visualización-del-modelo-ajustado",
    "href": "Aula17.html#paso-6-visualización-del-modelo-ajustado",
    "title": "",
    "section": "Paso 6: Visualización del Modelo Ajustado",
    "text": "Paso 6: Visualización del Modelo Ajustado\nVisualizamos los resultados del modelo ajustado utilizando ggplot2.\n\n\nCodigo\n# Obtener predicciones del modelo\npredictions &lt;- data.frame(Dose = seq(min(FGT152$Dose), max(FGT152$Dose), length.out = 100))\npredictions$GC_mean &lt;- predict(drc1, newdata = predictions)\n\n# Crear gráfico con predicciones\nFGT152 |&gt; \n  ggplot(aes(Dose, GC_mean)) +\n  geom_point() +\n  geom_line(data = predictions, aes(Dose, GC_mean), color = \"blue\") +\n  labs(title = \"Modelo Weibull de Tres Parámetros\", x = \"Dosis\", y = \"GC Media\") +\n  theme_few()"
  },
  {
    "objectID": "Aula17.html#paso-7-estimación-de-ec50-con-el-paquete-ec50estimator",
    "href": "Aula17.html#paso-7-estimación-de-ec50-con-el-paquete-ec50estimator",
    "title": "",
    "section": "Paso 7: Estimación de EC50 con el Paquete ec50estimator",
    "text": "Paso 7: Estimación de EC50 con el Paquete ec50estimator\nEstimamos los valores de EC50 para diferentes identificadores (ID).\n\n\nCodigo\n# Estimar EC50\ndf_ec50 &lt;- estimate_EC50(GC_mean ~ Dose, data = dat2, isolate_col = \"Code\", interval = \"delta\", fct = drc::LL.3())\n\ndf_ec50 |&gt; \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n    buttons = c('excel', \"csv\")))|&gt; \n            formatRound(c('Estimate','Std..Error','Lower','Upper'), 2)\n\n\n\n\n\n\n\nContenido de df_ec50\nEl dataframe df_ec50 generalmente incluye las siguientes columnas:\n\nID: El identificador o código del grupo o muestra para el cual se ha calculado la EC50.\nEstimate: La estimación de la EC50.\nLower: El límite inferior del intervalo de confianza para la EC50.\nUpper: El límite superior del intervalo de confianza para la EC50.\n\n\n\nCodigo\n# Crear gráfico de estimaciones de EC50\ndf_ec50 |&gt; \n  ggplot(aes(Estimate, reorder(ID, Estimate))) +\n  geom_point() +\n  geom_errorbar(aes(xmin = Lower, xmax = Upper), width = 0.1) +\n    scale_x_continuous(breaks = seq(from = -30, to = 50, by = 5))+\n  labs(title = \"Estimaciones de EC50 por Código\", x = \"EC50\", y = \"Aislamiento\") +\n  theme_few()"
  },
  {
    "objectID": "Aula17.html#interpretación-de-resultados",
    "href": "Aula17.html#interpretación-de-resultados",
    "title": "",
    "section": "Interpretación de Resultados",
    "text": "Interpretación de Resultados\n\nModelo Log-Logístico de Tres Parámetros (LL.3): Este modelo es útil para describir relaciones en forma de S entre dosis y respuesta.\nModelo Weibull de Tres Parámetros (W1.3): Proporciona mayor flexibilidad y puede ajustarse mejor a datos asimétricos.\nEC50: La dosis efectiva al 50% es una medida importante en estudios de toxicidad y sensibilidad. Comparar EC50 entre diferentes grupos puede revelar diferencias significativas en la respuesta.\n\n\nInterpretación del Gráfico\nEn el gráfico resultante:\n\nCada punto representa la estimación de EC50 para un código específico.\nLas barras de error muestran los intervalos de confianza del 95% para cada estimación.\nLa posición horizontal de los puntos permite comparar visualmente las estimaciones de EC50 entre diferentes Aislamientos.\nUn intervalo de confianza más estrecho indica una estimación más precisa, mientras que un intervalo más amplio sugiere mayor incertidumbre."
  },
  {
    "objectID": "Aula17.html#aprendizaje-del-día",
    "href": "Aula17.html#aprendizaje-del-día",
    "title": "",
    "section": "Aprendizaje del día",
    "text": "Aprendizaje del día\nEl análisis de regresión no lineal es una herramienta poderosa para modelar relaciones complejas entre variables. Con RStudio y los paquetes adecuados, podemos realizar análisis detallados y obtener estimaciones precisas que informen mejor nuestras decisiones basadas en datos. La utilización de ggplot2 para la visualización de los resultados permite una interpretación más clara y efectiva de los modelos ajustados."
  },
  {
    "objectID": "Aula71.html",
    "href": "Aula71.html",
    "title": "",
    "section": "",
    "text": "Code"
  },
  {
    "objectID": "Aula71.html#transformación-de-datos-paso-a-paso",
    "href": "Aula71.html#transformación-de-datos-paso-a-paso",
    "title": "",
    "section": "Transformación de Datos: Paso a Paso",
    "text": "Transformación de Datos: Paso a Paso\n\n¿Por Qué Transformar Datos para Análisis Estadísticos?\nCuando trabajamos con datos en fitopatología, a veces necesitamos “ajustar” nuestros datos para que los análisis estadísticos funcionen mejor. Transformar datos es una manera de hacer esto. Aquí te explico por qué y cómo se hace de manera sencilla.\n\n\n¿Qué Significa Transformar Datos?\nTransformar datos significa cambiar la forma de nuestros datos utilizando una fórmula matemática. Esto se hace para que los datos se ajusten mejor a ciertos supuestos necesarios para los análisis estadísticos.\n\n\n¿Por Qué Necesitamos Transformar Datos?\n\nPara Hacer los Datos Más Normales:\n\nMuchos análisis estadísticos, como la ANOVA y la regresión, suponen que los datos siguen una distribución normal (una campana simétrica). Si tus datos están muy sesgados (es decir, no son simétricos), los resultados pueden no ser válidos.\n\nPara Igualar la Varianza:\n\nA veces, los datos de diferentes grupos tienen variabilidades (o varianzas) muy diferentes. Esto puede causar problemas en el análisis. Transformar los datos puede ayudar a igualar estas varianzas.\n\nPara Simplificar las Relaciones:\n\nEn fitopatología, puede que quieras estudiar cómo una variable afecta a otra. Si la relación entre tus variables no es lineal (una línea recta), una transformación puede hacerla más lineal y fácil de analizar.\n\nPara Reducir el Impacto de Valores Atípicos:\n\nLos valores atípicos son puntos de datos que están muy lejos del resto. Estos pueden distorsionar los resultados. Una transformación puede reducir su influencia.\n\n\n\n\nPasos para Transformar Datos\n\nExplora tus Datos:\n\nHaz gráficos (como histogramas y gráficos de dispersión) y calcula estadísticas básicas (media, mediana, etc.) para entender tus datos.\n\nEvalúa la Necesidad de Transformar:\n\nUsa pruebas estadísticas (como Shapiro-Wilk para normalidad) y gráficos de diagnóstico para ver si tus datos necesitan transformación.\n\nElige la Transformación Adecuada:\n\nBasándote en la forma de tus datos y los problemas identificados, selecciona la transformación que mejor los ajuste.\n\nAplica la Transformación:\n\nTransforma tus datos y vuelve a hacer el análisis exploratorio para ver si la transformación ha mejorado la situación.\n\nAnaliza de Nuevo:\n\nRealiza los análisis estadísticos con los datos transformados y compara los resultados con los obtenidos sin transformación.\n\nDocumenta el Proceso:\n\nEs importante registrar por qué y cómo transformaste los datos para que otros investigadores puedan entender y replicar tu trabajo."
  }
]