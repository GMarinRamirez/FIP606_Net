{
  "hash": "a65ef0402aaac30554a7c344796a975d",
  "result": {
    "engine": "knitr",
    "markdown": "\n# Gráficos de dispersión, histogramas y densidad\n\nEste script en R se centra en la visualización y análisis de datos utilizando diversas técnicas gráficas. A continuación se explica paso a paso cada sección del script, resaltando las funciones importantes utilizadas y su propósito.\n\n### Importación de Datos\n\nPrimero, se importan los datos desde un archivo de Excel utilizando la función `read_excel()` del paquete `readxl`. Los datos se leen desde la hoja \"fungicida_campo\" del archivo \"dados-diversos.xlsx\" y se asignan al data frame `fungicida_campo`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nfungicida_campo <- read_excel(\"dados-diversos.xlsx\", \"fungicida_campo\")\n```\n:::\n\n\n### Scatterplots\n\nLos scatterplots son gráficos que muestran la relación entre dos variables numéricas. Se utilizan para identificar patrones o correlaciones entre ellas.\n\n#### Scatterplot básico con `geom_jitter()` y `stat_summary()`\n\nEn este bloque de código, se crea un scatterplot que muestra la dispersión de los datos de `sev` (severidad) versus `trat` (tratamiento), con puntos distribuidos de manera jittered para evitar superposiciones y se añade la media utilizando `stat_summary()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(trat, sev)) +\n  geom_jitter(width = 0.1, color = \"gray60\") +\n  stat_summary(fun = mean, color = \"red\")+\n  theme_few() \n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n#### Scatterplot con intervalo de confianza\n\nEste scatterplot añade un intervalo de confianza alrededor de la media utilizando `stat_summary()` con `fun.data = mean_se`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(trat, sev)) +\n  geom_jitter(width = 0.1, color = \"gray60\") +\n  stat_summary(fun.data = mean_se, color = \"red\")+\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n#### Scatterplot cambiando variables y estética\n\nEn este ejemplo, se cambia la variable `sev` al eje x y `yld` (rendimiento) al eje y, y se colorea por `trat` utilizando `scale_color_colorblind()`. Además, se ajusta la transparencia de los puntos usando `alpha`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\nfungicida_campo |> \n  ggplot(aes(sev, yld, color = trat)) +\n  geom_point(size = 3, alpha = 0.8) +\n  scale_color_colorblind()+\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n#### Scatterplot con línea de tendencia\n\nAquí se añade una línea de tendencia lineal utilizando `geom_smooth()` con `method = \"lm\"` y `se = FALSE` para eliminar la visualización del intervalo de confianza.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfungicida_campo |> \n  ggplot(aes(sev, yld)) +\n  geom_point(size = 3, alpha = 0.8) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", linetype = \"solid\", size = 2) +\n  scale_color_colorblind()+\n  theme_few()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Gráficos de dispersión para análisis factorial\n\nEn esta sección, se cambia el subconjunto de datos a `milho` y se crea un scatterplot que muestra la variación del rendimiento (`yield`) de diferentes híbridos de maíz (`hybrid`) según el método de inoculación (`method`). Se utiliza `facet_wrap()` para separar los gráficos por `hybrid`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmilho <- read_excel(\"dados-diversos.xlsx\", \"milho\")\n\nmilho |> \n  ggplot(aes(hybrid, yield, color = method)) +\n  geom_jitter(size = 2) +\n  facet_wrap(~hybrid)+\n  theme_few()+\n  scale_color_few()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Histogramas\n\nLos histogramas se utilizan para visualizar la distribución de una variable numérica. Se construyen con `geom_histogram()`.\n\n#### Histograma de `yield`\n\nEn este ejemplo, se crea un histograma para la variable `yield` con 10 bins, y se cambia el color del borde (`color`) y el color de relleno (`fill`) de las barras.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_yield <- milho |> \n  ggplot(aes(x = yield)) +\n  geom_histogram(bins = 10, color = \"black\", fill = \"green\")+\n  theme_few()+\n  scale_color_few()\n\np_yield \n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n#### Histograma de `index`\n\nSe crea un histograma similar para la variable `index`, cambiando los colores de las barras.\n\n\n::: {.cell}\n\n```{.r .cell-code}\np_index <- milho |> \n  ggplot(aes(x = index)) +\n  geom_histogram(bins = 10, color = \"black\", fill = \"blue\")+\n  theme_few()+\n  scale_color_few()\np_index \n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n#### Combinación de histogramas con `patchwork`\n\nSe combinan los histogramas de `yield` y `index` utilizando `patchwork`, organizándolos en una única visualización.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\n(p_yield + p_index) +\n  plot_annotation(tag_levels = \"A\")\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"figs/histograms.png\", bg = \"white\")\n```\n:::\n\n\n### Gráfico de densidad\n\nLos gráficos de densidad muestran la distribución de probabilidad de una variable continua. Se utilizan `geom_density()`.\n\n#### Gráfico de densidad de `index`\n\nEn este ejemplo, se crea un gráfico de densidad para la variable `index`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmilho |> \n  ggplot(aes(x = index)) +\n  geom_density()+\n  theme_few()+\n  scale_color_few()\n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Gráfico de columnas\n\nSe utiliza un nuevo subconjunto de datos (`insect`) para crear un gráfico de columnas (`geom_col()`), donde `inseticida` está en el eje x y `value` en el eje y. Se convierte el formato de ancho a largo con `pivot_longer()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninsect <- read_excel(\"dados-diversos.xlsx\", \"mortalidade\")\n\ninsect |> \n  pivot_longer(2:3, names_to = \"status\", values_to = \"value\") |> \n  ggplot(aes(inseticida, value, fill = status)) +\n  geom_col()+\n  theme_few()+\n  scale_fill_manual(values = c(\"#669933\", \"#FFCC66\")) \n```\n\n::: {.cell-output-display}\n![](Aula6_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n### Aprendizaje del día\n\nEste script en R demuestra cómo importar datos desde Excel, realizar visualizaciones como scatterplots, histogramas, gráficos de densidad y gráficos de columnas utilizando el paquete `ggplot2` y otras herramientas como `patchwork` y `tidyverse`. Cada sección utiliza diferentes funciones y estéticas para explorar y visualizar datos de manera efectiva y clara.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}