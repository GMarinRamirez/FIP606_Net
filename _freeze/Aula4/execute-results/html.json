{
  "hash": "cf0e0f8dc71cbf80bb8ea6ccccebae83",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualización de Datos con ggplot\"\n---\n\n\n\nEl paquete ggplot2 es fundamental en R para la visualización de datos, ofreciendo herramientas poderosas para crear gráficos estéticamente atractivos y claros. Puede ser cargado tanto de manera independiente como como parte del conjunto de paquetes tidyverse, que facilita el flujo de trabajo en análisis de datos. Para iniciar la creación de visualizaciones con ggplot2, se utiliza la función ggplot, que permite definir la estructura básica del gráfico y especificar los mapeos estéticos entre los datos y los elementos visuales del gráfico.\n\n![](img/ggplot2.png)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datapasta)   # Para facilitar la importación de datos desde el portapapeles\nlibrary(r4pde)       # Paquete específico para realizar ajustes de modelos\nlibrary(janitor)     # Para operaciones de limpieza y manipulación de datos\nlibrary(gsheet)      # Para acceder y manipular hojas de cálculo de Google Sheets\nlibrary(googlesheets4)  # Para interactuar con Google Sheets directamente desde R\nlibrary(ggplot2)     # Para visualizaciones gráficas avanzadas\nlibrary(tidyverse)\n```\n:::\n\n\n\n## Importar datos\nCargar los datos desde cualquier origen para empezar a visualizar usando ggplot\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Cargar los datos desde el archivo CSV\nmg <- read_csv(\"dados-diversos.csv\")\n```\n:::\n\n\n## Creación de Gráficos con ggplot\n\nEn `ggplot2`, los gráficos se construyen en capas, usando el operador `+` para añadir cada capa al gráfico. Se utiliza el operador pipe (`%>%` o ` |>`) para encadenar comandos de manera eficiente.\n\n### Gráfico de Puntos\n\nPara crear un gráfico de dispersión con puntos translúcidos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg %>%\n  ggplot(aes(Irrigation, severity, color = Irrigation)) +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n- **`ggplot()`**: Inicializa un objeto de gráfico en `ggplot2` con los datos especificados y los mapeos estéticos.\n- **`geom_point()`**: Agrega puntos al gráfico con transparencia controlada por `alpha`.\n\n### Gráfico de Puntos con Formas Diferentes\n\nPara usar formas diferentes según la variable `Irrigation`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg %>%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n- **`geom_point()`**: Además de `color`, `shape` se utiliza para asignar diferentes formas a los puntos según los valores de `Irrigation`.\n\n### Gráfico de Líneas\n\nCambiar a la variable `day` y añadir líneas conectando los puntos:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg %>%\n  ggplot(aes(day, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n- **`geom_line()`**: Añade líneas al gráfico para conectar los puntos definidos por `geom_point()`.\n\n### Facetas\n\nCrear gráficos separados por la variable `rep`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg %>%\n  ggplot(aes(day, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5) +\n  geom_line() +\n  facet_wrap(~rep)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n- **`facet_wrap()`**: Divide el gráfico en múltiples paneles según la variable `rep`, facilitando la comparación entre diferentes grupos.\n\n### Otras Funciones\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Selección de columnas y gráfico de puntos\nmg %>%\n  select(Irrigation, severity) %>%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Gráfico de cajas y puntos\nmg %>%\n  select(day, severity) %>%\n  ggplot(aes(day, severity)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Agrupación por día y gráfico de puntos\nmg %>%\n  select(day, rep, severity) %>%\n  group_by(day) %>%\n  summarise(sev = mean(severity)) %>%\n  ggplot(aes(day, sev)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n:::\n\n\n### Gráfico de Cajas y Puntos\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico de cajas, puntos y cambio de variable a day\nmg %>%\n  select(Irrigation, severity) %>%\n  ggplot(aes(Irrigation, severity, shape = Irrigation)) +\n  geom_boxplot() +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Cambio de variable a day y gráfico de cajas\nmg %>%\n  select(day, severity) %>%\n  ggplot(aes(day, severity)) +\n  geom_boxplot() +\n  geom_point(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Separación por grupo\nmg %>%\n  select(day, severity) %>%\n  ggplot(aes(day, severity, group = day)) +\n  geom_boxplot() +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-8-3.png){width=672}\n:::\n:::\n\n\n### Crear un Nuevo Conjunto y Graficar\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmg2 <- mg %>%\n  select(day, rep, severity) %>%\n  group_by(day) %>%\n  summarise(sev = mean(severity)) %>%\n  ggplot(aes(day, sev)) +\n  geom_point()\n```\n:::\n\n\n- **`select()`**: Se utiliza para seleccionar columnas específicas del data frame antes de pasarlo a `ggplot()`.\n- **`group_by()` y `summarise()`**: Agrupa los datos por una variable (`day` en este caso) y calcula un resumen estadístico (`mean(severity)`).\n- **`geom_boxplot()`**: Crea gráficos de cajas y bigotes para visualizar la distribución de los datos.\n- **`geom_point()`**: Añade puntos a los gráficos de cajas para mostrar los valores individuales.\n\nEste script proporciona un conjunto completo de comandos para visualizar datos utilizando `ggplot2` en R, utilizando diversas técnicas gráficas como gráficos de puntos, líneas, facetas y gráficos de cajas con puntos superpuestos. Cada función y operador se adapta para mostrar y explorar datos de manera efectiva según los requisitos específicos del análisis.\n\n\n\n\n## Ejemplo \n\n\n### 1. Carga de Paquetes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(datapasta)   # Para facilitar la importación de datos desde el portapapeles\nlibrary(r4pde)       # Paquete específico para realizar ajustes de modelos\nlibrary(janitor)     # Para operaciones de limpieza y manipulación de datos\nlibrary(gsheet)      # Para acceder y manipular hojas de cálculo de Google Sheets\nlibrary(googlesheets4)  # Para interactuar con Google Sheets directamente desde R\nlibrary(ggplot2)     # Para visualizaciones gráficas avanzadas\nlibrary(ggthemes)   #Para visualización de temas de graficos asociados a ggplot\n```\n:::\n\n\n\n### 2. Creación de Dataframe `pepper`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper <- tibble::tribble(\n   ~t,  ~`1`,  ~`2`,  ~`3`,\n   0,  0.08, 0.001, 0.001,\n   7,  0.13,  0.01, 0.001,\n  14,  0.78,  0.09,  0.01,\n  21,  0.92,  0.25,  0.05,\n  28,  0.99,   0.8,  0.18,\n  35, 0.995,  0.98,  0.34,\n  42, 0.999,  0.99,  0.48,\n  49, 0.999, 0.999,  0.74\n  )\n```\n:::\n\n\n- Se crea un dataframe `pepper` utilizando `tibble::tribble` con datos de incidencia de enfermedades en diferentes días (`t`), para tres tipos diferentes de enfermedades representadas por las columnas `1`, `2` y `3`.\n\n### 3. Visualización Interactiva con `DT::datatable`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper |> \n    DT::datatable(\n    extensions = 'Buttons', \n    options = list(dom = 'Bfrtip', \n     buttons = c('excel', \"csv\"))) \n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-1ee21b0ebe5393a49c8e\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1ee21b0ebe5393a49c8e\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"extensions\":[\"Buttons\"],\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],[0,7,14,21,28,35,42,49],[0.08,0.13,0.78,0.92,0.99,0.995,0.999,0.999],[0.001,0.01,0.09,0.25,0.8,0.98,0.99,0.999],[0.001,0.001,0.01,0.05,0.18,0.34,0.48,0.74]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>t<\\/th>\\n      <th>1<\\/th>\\n      <th>2<\\/th>\\n      <th>3<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"dom\":\"Bfrtip\",\"buttons\":[\"excel\",\"csv\"],\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"t\",\"targets\":1},{\"name\":\"1\",\"targets\":2},{\"name\":\"2\",\"targets\":3},{\"name\":\"3\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n- `DT::datatable`: Esta función de `DT` permite visualizar el dataframe `pepper` como una tabla interactiva en HTML, con opciones para exportar a Excel o CSV.\n\n### 4. Transformación de Datos con `pivot_longer`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper_dat <- pepper |> \n              pivot_longer(2:4, names_to = \"epidemic\", values_to = \"inc\")\npepper_dat \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 24 × 3\n       t epidemic   inc\n   <dbl> <chr>    <dbl>\n 1     0 1        0.08 \n 2     0 2        0.001\n 3     0 3        0.001\n 4     7 1        0.13 \n 5     7 2        0.01 \n 6     7 3        0.001\n 7    14 1        0.78 \n 8    14 2        0.09 \n 9    14 3        0.01 \n10    21 1        0.92 \n# ℹ 14 more rows\n```\n\n\n:::\n:::\n\n\n- `pivot_longer`: Del paquete `tidyr`, esta función reorganiza el dataframe `pepper` de un formato ancho a uno largo, donde cada fila ahora representa una observación única de incidencia (`inc`) para cada día (`t`) y tipo de enfermedad (`epidemic`).\n\n### 5. Visualización con `ggplot2`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper_dat |> \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic,\n             color = epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_point(size = 3, shape = 16) +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n- `ggplot`: Crea un gráfico utilizando los datos transformados `pepper_dat`. Utiliza diferentes estilos y formas para representar cada tipo de enfermedad a lo largo del tiempo (`t`).\n\n### 6. Anotaciones en el Gráfico con `annotate`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper_dat |> \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic, \n             color=epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_line(linewidth = 1) +\n  geom_point(size = 3, shape = 16) +\n  annotate(geom = \"text\", x = 10, y = 0.75, label = \"1\") +\n  annotate(geom = \"text\", x = 23, y = 0.6, label = \"2\") +\n  annotate(geom = \"text\", x = 32, y = 0.35, label = \"3\") +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n- `annotate`: Esta función añade etiquetas de texto (`label`) a puntos específicos del gráfico (`x` y `y`), indicando momentos clave o valores importantes en la serie temporal de incidencia de enfermedades.\n\n\n\n### 6. Facetas en el Gráfico con `facet_wrap`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npepper_dat |> \n  ggplot(aes(t, inc, \n             linetype = epidemic, \n             shape = epidemic, \n             group = epidemic, \n             color=epidemic)) +\n  theme_few() +\n  scale_color_few() +\n  geom_line(linewidth = 1) +\n  facet_wrap(~epidemic)+\n  geom_point(size = 3, shape = 16) +\n  labs(y = \"Incidencia de Enfermedades (y)\",\n       x = \"Tiempo (días)\")\n```\n\n::: {.cell-output-display}\n![](Aula4_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n- `facet_wrap`: se usa para crear una cuadrícula de gráficos, donde cada subgráfico representa un subconjunto de los datos. Esto se logra especificando una fórmula con la variable según la cual se desea dividir los datos. \n\n### Parámetros Importantes\n- `~ factor_var`: La variable categórica por la cual se desea dividir los datos.\n- `ncol`: Especifica el número de columnas en la cuadrícula de facetas.\n- `nrow`: Especifica el número de filas en la cuadrícula de facetas.\n- `scales`: Permite ajustar las escalas de los ejes. \n              `\"fixed\"` (por defecto, las mismas escalas para todos los subgráficos), \n               `\"free\" `(escalas independientes para cada subgráfico),\n               `\"free_x\"` (eje x independiente) \n               `\"free_y\"` (eje y independiente).\n\n\n\n## Aprendizaje del día\n\nEste script utiliza paquetes como `tidyr`, `ggplot2`, y `DT` para importar, manipular, visualizar y presentar datos de incidencia de enfermedades en pimientos de manera efectiva y visualmente atractiva. Cada paso está diseñado para optimizar el análisis y la comprensión de los datos, facilitando la interpretación de tendencias y patrones en la incidencia de enfermedades a lo largo del tiempo.\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<script src=\"site_libs/jszip-1.13.6/jszip.min.js\"></script>\n<link href=\"site_libs/dt-ext-buttons-1.13.6/css/buttons.dataTables.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/dataTables.buttons.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.html5.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.colVis.min.js\"></script>\n<script src=\"site_libs/dt-ext-buttons-1.13.6/js/buttons.print.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}